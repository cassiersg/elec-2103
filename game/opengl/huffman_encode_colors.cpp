// DO NOT EDIT - file generated by game/gen_huffman.py
case 0xfff0f0f0: code = 0x000; n_bits =  2; break;
case 0xff707070: code = 0x002; n_bits =  2; break;
case 0xff305050: code = 0x003; n_bits =  2; break;
case 0xff000000: code = 0x001; n_bits =  4; break;
case 0xff202020: code = 0x005; n_bits =  5; break;
case 0xfff0f000: code = 0x01d; n_bits =  5; break;
case 0xff505050: code = 0x00d; n_bits =  6; break;
case 0xff404040: code = 0x019; n_bits =  6; break;
case 0xffe0a040: code = 0x039; n_bits =  6; break;
case 0xfff00000: code = 0x009; n_bits =  7; break;
case 0xff009000: code = 0x015; n_bits =  7; break;
case 0xff00f000: code = 0x049; n_bits =  7; break;
case 0xff0000f0: code = 0x069; n_bits =  7; break;
case 0xff404000: code = 0x075; n_bits =  7; break;
case 0xff909000: code = 0x029; n_bits =  8; break;
case 0xfff0a040: code = 0x02d; n_bits =  8; break;
case 0xff00f0f0: code = 0x06d; n_bits =  8; break;
case 0xff400000: code = 0x0ad; n_bits =  8; break;
case 0xfff000f0: code = 0x0ed; n_bits =  8; break;
case 0xff900000: code = 0x055; n_bits =  9; break;
case 0xff909090: code = 0x1a9; n_bits = 10; break;
case 0xff906020: code = 0xaa9; n_bits = 12; break;
case 0xff006000: code = 0xea9; n_bits = 13; break;
case 0xff202040: code = 0x0a9; n_bits = 17; break;
case 0xffa0c020: code = 0x2a9; n_bits = 17; break;
case 0xff70d070: code = 0x4a9; n_bits = 17; break;
case 0xff8020b0: code = 0x6a9; n_bits = 17; break;
case 0xff90b020: code = 0x8a9; n_bits = 17; break;
case 0xffd06030: code = 0xca9; n_bits = 17; break;
case 0xff504090: code = 0x10a9; n_bits = 17; break;
case 0xff008060: code = 0x12a9; n_bits = 17; break;
case 0xfff0a020: code = 0x14a9; n_bits = 17; break;
case 0xff809020: code = 0x16a9; n_bits = 17; break;
case 0xffc0d070: code = 0x18a9; n_bits = 17; break;
case 0xffb0c0a0: code = 0x1ca9; n_bits = 17; break;
case 0xff902010: code = 0x20a9; n_bits = 17; break;
case 0xff50a040: code = 0x22a9; n_bits = 17; break;
case 0xff3060e0: code = 0x24a9; n_bits = 17; break;
case 0xffa07040: code = 0x26a9; n_bits = 17; break;
case 0xff7070c0: code = 0x28a9; n_bits = 17; break;
case 0xff9080b0: code = 0x2ca9; n_bits = 17; break;
case 0xffe0d000: code = 0x30a9; n_bits = 17; break;
case 0xff2030a0: code = 0x32a9; n_bits = 17; break;
case 0xffc020c0: code = 0x34a9; n_bits = 17; break;
case 0xffc01040: code = 0x38a9; n_bits = 17; break;
case 0xff2040f0: code = 0x3ca9; n_bits = 17; break;
case 0xff205010: code = 0x40a9; n_bits = 17; break;
case 0xff608020: code = 0x42a9; n_bits = 17; break;
case 0xff5050a0: code = 0x44a9; n_bits = 17; break;
case 0xff6030f0: code = 0x46a9; n_bits = 17; break;
case 0xff70c060: code = 0x48a9; n_bits = 17; break;
case 0xffb07070: code = 0x4ca9; n_bits = 17; break;
case 0xff3050d0: code = 0x50a9; n_bits = 17; break;
case 0xff8020d0: code = 0x52a9; n_bits = 17; break;
case 0xff00d0a0: code = 0x54a9; n_bits = 17; break;
case 0xfff02080: code = 0x56a9; n_bits = 17; break;
case 0xff40e080: code = 0x58a9; n_bits = 17; break;
case 0xffb00070: code = 0x5ca9; n_bits = 17; break;
case 0xff703050: code = 0x60a9; n_bits = 17; break;
case 0xff207020: code = 0x62a9; n_bits = 17; break;
case 0xff80f000: code = 0x64a9; n_bits = 17; break;
case 0xff50b0e0: code = 0x66a9; n_bits = 17; break;
case 0xffe0c030: code = 0x68a9; n_bits = 17; break;
case 0xff7090f0: code = 0x6ca9; n_bits = 17; break;
case 0xffc070c0: code = 0x70a9; n_bits = 17; break;
case 0xfff090e0: code = 0x72a9; n_bits = 17; break;
case 0xfff0e0f0: code = 0x74a9; n_bits = 17; break;
case 0xff50c0d0: code = 0x78a9; n_bits = 17; break;
case 0xff809050: code = 0x7ca9; n_bits = 17; break;
case 0xffc05030: code = 0x80a9; n_bits = 17; break;
case 0xff7020a0: code = 0x82a9; n_bits = 17; break;
case 0xff402010: code = 0x84a9; n_bits = 17; break;
case 0xff40f010: code = 0x86a9; n_bits = 17; break;
case 0xffa0d0d0: code = 0x88a9; n_bits = 17; break;
case 0xff801030: code = 0x8ca9; n_bits = 17; break;
case 0xff80f060: code = 0x90a9; n_bits = 17; break;
case 0xffa0b050: code = 0x92a9; n_bits = 17; break;
case 0xffa0d0e0: code = 0x94a9; n_bits = 17; break;
case 0xff60a030: code = 0x96a9; n_bits = 17; break;
case 0xffb09010: code = 0x98a9; n_bits = 17; break;
case 0xffe050b0: code = 0x9ca9; n_bits = 17; break;
case 0xff30f0b0: code = 0xa0a9; n_bits = 17; break;
case 0xffa01090: code = 0xa2a9; n_bits = 17; break;
case 0xff30f0f0: code = 0xa4a9; n_bits = 17; break;
case 0xfff0c060: code = 0xa6a9; n_bits = 17; break;
case 0xffb03060: code = 0xa8a9; n_bits = 17; break;
case 0xff602070: code = 0xaca9; n_bits = 17; break;
case 0xff80a020: code = 0xb0a9; n_bits = 17; break;
case 0xff00b0e0: code = 0xb2a9; n_bits = 17; break;
case 0xff606060: code = 0xb4a9; n_bits = 17; break;
case 0xff20f0c0: code = 0xb8a9; n_bits = 17; break;
case 0xff70e0d0: code = 0xbca9; n_bits = 17; break;
case 0xffa06070: code = 0xc0a9; n_bits = 17; break;
case 0xff709000: code = 0xc2a9; n_bits = 17; break;
case 0xff203050: code = 0xc4a9; n_bits = 17; break;
case 0xff3010c0: code = 0xc6a9; n_bits = 17; break;
case 0xff2090e0: code = 0xc8a9; n_bits = 17; break;
case 0xffa03010: code = 0xcca9; n_bits = 17; break;
case 0xff201070: code = 0xd0a9; n_bits = 17; break;
case 0xff80c090: code = 0xd2a9; n_bits = 17; break;
case 0xffd010b0: code = 0xd4a9; n_bits = 17; break;
case 0xff4010f0: code = 0xd6a9; n_bits = 17; break;
case 0xff90a050: code = 0xd8a9; n_bits = 17; break;
case 0xff309030: code = 0xdca9; n_bits = 17; break;
case 0xff6080f0: code = 0xe0a9; n_bits = 17; break;
case 0xffc0a010: code = 0xe2a9; n_bits = 17; break;
case 0xff004090: code = 0xe4a9; n_bits = 17; break;
case 0xff70e000: code = 0xe6a9; n_bits = 17; break;
case 0xffe030c0: code = 0xe8a9; n_bits = 17; break;
case 0xffa08010: code = 0xeca9; n_bits = 17; break;
case 0xffa0f080: code = 0xf0a9; n_bits = 17; break;
case 0xff9070f0: code = 0xf2a9; n_bits = 17; break;
case 0xffe0a090: code = 0xf4a9; n_bits = 17; break;
case 0xff900070: code = 0xf8a9; n_bits = 17; break;
case 0xffc060f0: code = 0xfca9; n_bits = 17; break;
case 0xff1070e0: code = 0x100a9; n_bits = 17; break;
case 0xffe090c0: code = 0x102a9; n_bits = 17; break;
case 0xff2090b0: code = 0x104a9; n_bits = 17; break;
case 0xff30a0b0: code = 0x106a9; n_bits = 17; break;
case 0xff906080: code = 0x108a9; n_bits = 17; break;
case 0xff4020c0: code = 0x10ca9; n_bits = 17; break;
case 0xff70f090: code = 0x110a9; n_bits = 17; break;
case 0xfff03050: code = 0x112a9; n_bits = 17; break;
case 0xff70a010: code = 0x114a9; n_bits = 17; break;
case 0xff506030: code = 0x116a9; n_bits = 17; break;
case 0xff00b0c0: code = 0x118a9; n_bits = 17; break;
case 0xff60b080: code = 0x11ca9; n_bits = 17; break;
case 0xff8070b0: code = 0x120a9; n_bits = 17; break;
case 0xff50c0f0: code = 0x122a9; n_bits = 17; break;
case 0xffe0b060: code = 0x124a9; n_bits = 17; break;
case 0xffa0c0a0: code = 0x126a9; n_bits = 17; break;
case 0xff901040: code = 0x128a9; n_bits = 17; break;
case 0xff10a0e0: code = 0x12ca9; n_bits = 17; break;
case 0xff305040: code = 0x130a9; n_bits = 17; break;
case 0xffc00030: code = 0x132a9; n_bits = 17; break;
case 0xff5060f0: code = 0x134a9; n_bits = 17; break;
case 0xff90d0d0: code = 0x138a9; n_bits = 17; break;
case 0xffd0f040: code = 0x13ca9; n_bits = 17; break;
case 0xff9040d0: code = 0x140a9; n_bits = 17; break;
case 0xffc01000: code = 0x142a9; n_bits = 17; break;
case 0xff40b020: code = 0x144a9; n_bits = 17; break;
case 0xff10b0f0: code = 0x146a9; n_bits = 17; break;
case 0xffb00000: code = 0x148a9; n_bits = 17; break;
case 0xff9040c0: code = 0x14ca9; n_bits = 17; break;
case 0xff607090: code = 0x150a9; n_bits = 17; break;
case 0xffd04090: code = 0x152a9; n_bits = 17; break;
case 0xfff000a0: code = 0x154a9; n_bits = 17; break;
case 0xff6090c0: code = 0x156a9; n_bits = 17; break;
case 0xffe02050: code = 0x158a9; n_bits = 17; break;
case 0xff4030b0: code = 0x15ca9; n_bits = 17; break;
case 0xffb000f0: code = 0x160a9; n_bits = 17; break;
case 0xff107010: code = 0x162a9; n_bits = 17; break;
case 0xffa08090: code = 0x164a9; n_bits = 17; break;
case 0xffd0d0a0: code = 0x166a9; n_bits = 17; break;
case 0xffd0b090: code = 0x168a9; n_bits = 17; break;
case 0xffe0f030: code = 0x16ca9; n_bits = 17; break;
case 0xfff07080: code = 0x170a9; n_bits = 17; break;
case 0xff500080: code = 0x172a9; n_bits = 17; break;
case 0xff303080: code = 0x174a9; n_bits = 17; break;
case 0xff704060: code = 0x178a9; n_bits = 17; break;
case 0xffe050e0: code = 0x17ca9; n_bits = 17; break;
case 0xffb030c0: code = 0x180a9; n_bits = 17; break;
case 0xffd05060: code = 0x182a9; n_bits = 17; break;
case 0xff105050: code = 0x184a9; n_bits = 17; break;
case 0xffe0f000: code = 0x186a9; n_bits = 17; break;
case 0xff00c000: code = 0x188a9; n_bits = 17; break;
case 0xff2030d0: code = 0x18ca9; n_bits = 17; break;
case 0xfff0f050: code = 0x190a9; n_bits = 17; break;
case 0xffe080f0: code = 0x192a9; n_bits = 17; break;
case 0xff109080: code = 0x194a9; n_bits = 17; break;
case 0xffc060c0: code = 0x196a9; n_bits = 17; break;
case 0xffa0e0b0: code = 0x198a9; n_bits = 17; break;
case 0xff4060d0: code = 0x19ca9; n_bits = 17; break;
case 0xff806050: code = 0x1a0a9; n_bits = 17; break;
case 0xffd0e070: code = 0x1a2a9; n_bits = 17; break;
case 0xffd07000: code = 0x1a4a9; n_bits = 17; break;
case 0xff808080: code = 0x1a6a9; n_bits = 17; break;
case 0xff60d040: code = 0x1a8a9; n_bits = 17; break;
case 0xffc010f0: code = 0x1aca9; n_bits = 17; break;
case 0xff30e050: code = 0x1b0a9; n_bits = 17; break;
case 0xff60d0d0: code = 0x1b2a9; n_bits = 17; break;
case 0xff60e0e0: code = 0x1b4a9; n_bits = 17; break;
case 0xffa040d0: code = 0x1b8a9; n_bits = 17; break;
case 0xff90a070: code = 0x1bca9; n_bits = 17; break;
case 0xff50e070: code = 0x1c0a9; n_bits = 17; break;
case 0xff5030e0: code = 0x1c2a9; n_bits = 17; break;
case 0xfff0f0c0: code = 0x1c4a9; n_bits = 17; break;
case 0xff007090: code = 0x1c6a9; n_bits = 17; break;
case 0xff50d0a0: code = 0x1c8a9; n_bits = 17; break;
case 0xff80a040: code = 0x1cca9; n_bits = 17; break;
case 0xff4050f0: code = 0x1d0a9; n_bits = 17; break;
case 0xffc0a0a0: code = 0x1d2a9; n_bits = 17; break;
case 0xff502040: code = 0x1d4a9; n_bits = 17; break;
case 0xff2060b0: code = 0x1d8a9; n_bits = 17; break;
case 0xff40c0c0: code = 0x1dca9; n_bits = 17; break;
case 0xff9090e0: code = 0x1e0a9; n_bits = 17; break;
case 0xffb0f0b0: code = 0x1e2a9; n_bits = 17; break;
case 0xff60b000: code = 0x1e4a9; n_bits = 17; break;
case 0xff6000b0: code = 0x1e6a9; n_bits = 17; break;
case 0xff405070: code = 0x1e8a9; n_bits = 17; break;
case 0xff10d090: code = 0x1eca9; n_bits = 17; break;
case 0xffe03020: code = 0x1f0a9; n_bits = 17; break;
case 0xff509090: code = 0x1f2a9; n_bits = 17; break;
case 0xff30c090: code = 0x1f4a9; n_bits = 17; break;
case 0xff408070: code = 0x1f8a9; n_bits = 17; break;
case 0xfff04020: code = 0x1fca9; n_bits = 17; break;
case 0xff208000: code = 0x035; n_bits = 18; break;
case 0xff304000: code = 0x0b5; n_bits = 18; break;
case 0xff0010e0: code = 0x0d5; n_bits = 18; break;
case 0xffb06070: code = 0x135; n_bits = 18; break;
case 0xff809010: code = 0x155; n_bits = 18; break;
case 0xff70f060: code = 0x1b5; n_bits = 18; break;
case 0xff5080f0: code = 0x1d5; n_bits = 18; break;
case 0xff009020: code = 0x235; n_bits = 18; break;
case 0xffc03080: code = 0x2b5; n_bits = 18; break;
case 0xffd03040: code = 0x2d5; n_bits = 18; break;
case 0xff40d0e0: code = 0x335; n_bits = 18; break;
case 0xffc07060: code = 0x355; n_bits = 18; break;
case 0xff00c0e0: code = 0x3a9; n_bits = 18; break;
case 0xff700000: code = 0x3b5; n_bits = 18; break;
case 0xff8020e0: code = 0x3d5; n_bits = 18; break;
case 0xff709030: code = 0x435; n_bits = 18; break;
case 0xff60b0e0: code = 0x4b5; n_bits = 18; break;
case 0xff80f070: code = 0x4d5; n_bits = 18; break;
case 0xff90f010: code = 0x535; n_bits = 18; break;
case 0xffe0a050: code = 0x555; n_bits = 18; break;
case 0xff608050: code = 0x5b5; n_bits = 18; break;
case 0xffa0f0b0: code = 0x5d5; n_bits = 18; break;
case 0xffb050e0: code = 0x635; n_bits = 18; break;
case 0xff50b010: code = 0x6b5; n_bits = 18; break;
case 0xffd08020: code = 0x6d5; n_bits = 18; break;
case 0xff109010: code = 0x735; n_bits = 18; break;
case 0xffd0f010: code = 0x755; n_bits = 18; break;
case 0xffc0b0b0: code = 0x7a9; n_bits = 18; break;
case 0xff30a0d0: code = 0x7b5; n_bits = 18; break;
case 0xffb070e0: code = 0x7d5; n_bits = 18; break;
case 0xff20d040: code = 0x835; n_bits = 18; break;
case 0xff50a010: code = 0x8b5; n_bits = 18; break;
case 0xffb0b020: code = 0x8d5; n_bits = 18; break;
case 0xff20b050: code = 0x935; n_bits = 18; break;
case 0xff506000: code = 0x955; n_bits = 18; break;
case 0xff601000: code = 0x9b5; n_bits = 18; break;
case 0xff20d070: code = 0x9d5; n_bits = 18; break;
case 0xff700090: code = 0xa35; n_bits = 18; break;
case 0xff70a0e0: code = 0xab5; n_bits = 18; break;
case 0xffa0d0f0: code = 0xad5; n_bits = 18; break;
case 0xffe070d0: code = 0xb35; n_bits = 18; break;
case 0xff7020e0: code = 0xb55; n_bits = 18; break;
case 0xff201050: code = 0xba9; n_bits = 18; break;
case 0xffa0d010: code = 0xbb5; n_bits = 18; break;
case 0xff3010a0: code = 0xbd5; n_bits = 18; break;
case 0xfff07070: code = 0xc35; n_bits = 18; break;
case 0xffb09060: code = 0xcb5; n_bits = 18; break;
case 0xfff02020: code = 0xcd5; n_bits = 18; break;
case 0xff6070d0: code = 0xd35; n_bits = 18; break;
case 0xff908000: code = 0xd55; n_bits = 18; break;
case 0xff9030f0: code = 0xdb5; n_bits = 18; break;
case 0xff709040: code = 0xdd5; n_bits = 18; break;
case 0xff309050: code = 0xe35; n_bits = 18; break;
case 0xffd09050: code = 0xeb5; n_bits = 18; break;
case 0xffe01050: code = 0xed5; n_bits = 18; break;
case 0xff409050: code = 0xf35; n_bits = 18; break;
case 0xffa0b0e0: code = 0xf55; n_bits = 18; break;
case 0xffe03080: code = 0xfa9; n_bits = 18; break;
case 0xff90e080: code = 0xfb5; n_bits = 18; break;
case 0xff10f010: code = 0xfd5; n_bits = 18; break;
case 0xfff03060: code = 0x1035; n_bits = 18; break;
case 0xff20e080: code = 0x10b5; n_bits = 18; break;
case 0xffe070f0: code = 0x10d5; n_bits = 18; break;
case 0xffd08080: code = 0x1135; n_bits = 18; break;
case 0xff20f090: code = 0x1155; n_bits = 18; break;
case 0xff30e080: code = 0x11b5; n_bits = 18; break;
case 0xfff01010: code = 0x11d5; n_bits = 18; break;
case 0xff8010e0: code = 0x1235; n_bits = 18; break;
case 0xffb03090: code = 0x12b5; n_bits = 18; break;
case 0xff90e0f0: code = 0x12d5; n_bits = 18; break;
case 0xff4050b0: code = 0x1335; n_bits = 18; break;
case 0xff200030: code = 0x1355; n_bits = 18; break;
case 0xffc050e0: code = 0x13a9; n_bits = 18; break;
case 0xff4050e0: code = 0x13b5; n_bits = 18; break;
case 0xfff0b0c0: code = 0x13d5; n_bits = 18; break;
case 0xffe0d0e0: code = 0x1435; n_bits = 18; break;
case 0xff10e090: code = 0x14b5; n_bits = 18; break;
case 0xff50a0d0: code = 0x14d5; n_bits = 18; break;
case 0xffa04040: code = 0x1535; n_bits = 18; break;
case 0xffd05020: code = 0x1555; n_bits = 18; break;
case 0xff40f040: code = 0x15b5; n_bits = 18; break;
case 0xffc050a0: code = 0x15d5; n_bits = 18; break;
case 0xffc01060: code = 0x1635; n_bits = 18; break;
case 0xff10a030: code = 0x16b5; n_bits = 18; break;
case 0xff3050c0: code = 0x16d5; n_bits = 18; break;
case 0xff00a030: code = 0x1735; n_bits = 18; break;
case 0xff60c050: code = 0x1755; n_bits = 18; break;
case 0xffc040f0: code = 0x17a9; n_bits = 18; break;
case 0xffd0c0f0: code = 0x17b5; n_bits = 18; break;
case 0xff20b010: code = 0x17d5; n_bits = 18; break;
case 0xffb03050: code = 0x1835; n_bits = 18; break;
case 0xff109030: code = 0x18b5; n_bits = 18; break;
case 0xff2080d0: code = 0x18d5; n_bits = 18; break;
case 0xffd010f0: code = 0x1935; n_bits = 18; break;
case 0xff900030: code = 0x1955; n_bits = 18; break;
case 0xff50b080: code = 0x19b5; n_bits = 18; break;
case 0xff505090: code = 0x19d5; n_bits = 18; break;
case 0xff00c060: code = 0x1a35; n_bits = 18; break;
case 0xfff020e0: code = 0x1ab5; n_bits = 18; break;
case 0xff6000c0: code = 0x1ad5; n_bits = 18; break;
case 0xff604020: code = 0x1b35; n_bits = 18; break;
case 0xffc04000: code = 0x1b55; n_bits = 18; break;
case 0xff20f020: code = 0x1ba9; n_bits = 18; break;
case 0xffa0c040: code = 0x1bb5; n_bits = 18; break;
case 0xff60a0a0: code = 0x1bd5; n_bits = 18; break;
case 0xff406070: code = 0x1c35; n_bits = 18; break;
case 0xff603060: code = 0x1cb5; n_bits = 18; break;
case 0xff2060c0: code = 0x1cd5; n_bits = 18; break;
case 0xff80e0c0: code = 0x1d35; n_bits = 18; break;
case 0xffd0c090: code = 0x1d55; n_bits = 18; break;
case 0xff00d080: code = 0x1db5; n_bits = 18; break;
case 0xff8030b0: code = 0x1dd5; n_bits = 18; break;
case 0xff803090: code = 0x1e35; n_bits = 18; break;
case 0xff304010: code = 0x1ea9; n_bits = 18; break;
case 0xffc0e080: code = 0x1eb5; n_bits = 18; break;
case 0xfff030a0: code = 0x1ed5; n_bits = 18; break;
case 0xffd0e080: code = 0x1f35; n_bits = 18; break;
case 0xff007030: code = 0x1f55; n_bits = 18; break;
case 0xff20c0f0: code = 0x1fa9; n_bits = 18; break;
case 0xff2080e0: code = 0x1fb5; n_bits = 18; break;
case 0xfff050f0: code = 0x1fd5; n_bits = 18; break;
case 0xfff0f070: code = 0x2035; n_bits = 18; break;
case 0xff60c000: code = 0x20b5; n_bits = 18; break;
case 0xffe050d0: code = 0x20d5; n_bits = 18; break;
case 0xffd0e040: code = 0x2135; n_bits = 18; break;
case 0xff2020f0: code = 0x2155; n_bits = 18; break;
case 0xffe0b0a0: code = 0x21b5; n_bits = 18; break;
case 0xff90f080: code = 0x21d5; n_bits = 18; break;
case 0xff50c0a0: code = 0x2235; n_bits = 18; break;
case 0xff60c0a0: code = 0x22b5; n_bits = 18; break;
case 0xfff01030: code = 0x22d5; n_bits = 18; break;
case 0xff2070c0: code = 0x2335; n_bits = 18; break;
case 0xff90d050: code = 0x2355; n_bits = 18; break;
case 0xffb0e0c0: code = 0x23a9; n_bits = 18; break;
case 0xff20a0a0: code = 0x23b5; n_bits = 18; break;
case 0xff707090: code = 0x23d5; n_bits = 18; break;
case 0xff6090b0: code = 0x2435; n_bits = 18; break;
case 0xff10a0d0: code = 0x24b5; n_bits = 18; break;
case 0xffa020d0: code = 0x24d5; n_bits = 18; break;
case 0xff3000b0: code = 0x2535; n_bits = 18; break;
case 0xff90b0e0: code = 0x2555; n_bits = 18; break;
case 0xff2010c0: code = 0x25b5; n_bits = 18; break;
case 0xffc07010: code = 0x25d5; n_bits = 18; break;
case 0xffc0e0f0: code = 0x2635; n_bits = 18; break;
case 0xffb030a0: code = 0x26b5; n_bits = 18; break;
case 0xffe0b0b0: code = 0x26d5; n_bits = 18; break;
case 0xffa07060: code = 0x2735; n_bits = 18; break;
case 0xfff0d0f0: code = 0x2755; n_bits = 18; break;
case 0xff50f0b0: code = 0x27a9; n_bits = 18; break;
case 0xffb05000: code = 0x27b5; n_bits = 18; break;
case 0xffc030d0: code = 0x27d5; n_bits = 18; break;
case 0xff802010: code = 0x2835; n_bits = 18; break;
case 0xff807040: code = 0x28b5; n_bits = 18; break;
case 0xff90a010: code = 0x28d5; n_bits = 18; break;
case 0xfff04000: code = 0x2935; n_bits = 18; break;
case 0xff10f0e0: code = 0x2955; n_bits = 18; break;
case 0xff20c090: code = 0x29b5; n_bits = 18; break;
case 0xff903020: code = 0x29d5; n_bits = 18; break;
case 0xff008070: code = 0x2a35; n_bits = 18; break;
case 0xfff0f080: code = 0x2ab5; n_bits = 18; break;
case 0xff3010d0: code = 0x2ad5; n_bits = 18; break;
case 0xffd0a0e0: code = 0x2b35; n_bits = 18; break;
case 0xff30f020: code = 0x2b55; n_bits = 18; break;
case 0xffa060d0: code = 0x2ba9; n_bits = 18; break;
case 0xff10d0b0: code = 0x2bb5; n_bits = 18; break;
case 0xffe0f0a0: code = 0x2bd5; n_bits = 18; break;
case 0xff90a040: code = 0x2c35; n_bits = 18; break;
case 0xffc040c0: code = 0x2cb5; n_bits = 18; break;
case 0xffc0a080: code = 0x2cd5; n_bits = 18; break;
case 0xff90a000: code = 0x2d35; n_bits = 18; break;
case 0xff006090: code = 0x2d55; n_bits = 18; break;
case 0xff80c080: code = 0x2db5; n_bits = 18; break;
case 0xff10d030: code = 0x2dd5; n_bits = 18; break;
case 0xff209080: code = 0x2e35; n_bits = 18; break;
case 0xff600070: code = 0x2eb5; n_bits = 18; break;
case 0xff100040: code = 0x2ed5; n_bits = 18; break;
case 0xff00b0d0: code = 0x2f35; n_bits = 18; break;
case 0xff302090: code = 0x2f55; n_bits = 18; break;
case 0xff40a060: code = 0x2fa9; n_bits = 18; break;
case 0xff70c0e0: code = 0x2fb5; n_bits = 18; break;
case 0xffe08090: code = 0x2fd5; n_bits = 18; break;
case 0xff0080d0: code = 0x3035; n_bits = 18; break;
case 0xfff030d0: code = 0x30b5; n_bits = 18; break;
case 0xffd000f0: code = 0x30d5; n_bits = 18; break;
case 0xffd03090: code = 0x3135; n_bits = 18; break;
case 0xff602010: code = 0x3155; n_bits = 18; break;
case 0xff50b050: code = 0x31b5; n_bits = 18; break;
case 0xffe0f080: code = 0x31d5; n_bits = 18; break;
case 0xffd030b0: code = 0x3235; n_bits = 18; break;
case 0xff900090: code = 0x32b5; n_bits = 18; break;
case 0xff608030: code = 0x32d5; n_bits = 18; break;
case 0xff80c040: code = 0x3335; n_bits = 18; break;
case 0xffe04080: code = 0x3355; n_bits = 18; break;
case 0xffb0a0b0: code = 0x33a9; n_bits = 18; break;
case 0xfff010a0: code = 0x33b5; n_bits = 18; break;
case 0xff708030: code = 0x33d5; n_bits = 18; break;
case 0xffa0f070: code = 0x3435; n_bits = 18; break;
case 0xff90d020: code = 0x34b5; n_bits = 18; break;
case 0xff104000: code = 0x34d5; n_bits = 18; break;
case 0xffa0f030: code = 0x3535; n_bits = 18; break;
case 0xfff03010: code = 0x3555; n_bits = 18; break;
case 0xffe000e0: code = 0x35b5; n_bits = 18; break;
case 0xffb08070: code = 0x35d5; n_bits = 18; break;
case 0xff3030a0: code = 0x3635; n_bits = 18; break;
case 0xff10e000: code = 0x36a9; n_bits = 18; break;
case 0xff3040e0: code = 0x36b5; n_bits = 18; break;
case 0xff601050: code = 0x36d5; n_bits = 18; break;
case 0xff309020: code = 0x3735; n_bits = 18; break;
case 0xff703070: code = 0x3755; n_bits = 18; break;
case 0xff60f0e0: code = 0x37a9; n_bits = 18; break;
case 0xffb0a0c0: code = 0x37b5; n_bits = 18; break;
case 0xff80f0d0: code = 0x37d5; n_bits = 18; break;
case 0xff401030: code = 0x3835; n_bits = 18; break;
case 0xffb090f0: code = 0x38b5; n_bits = 18; break;
case 0xff509030: code = 0x38d5; n_bits = 18; break;
case 0xff607010: code = 0x3935; n_bits = 18; break;
case 0xff003010: code = 0x3955; n_bits = 18; break;
case 0xff300050: code = 0x39b5; n_bits = 18; break;
case 0xff90c020: code = 0x39d5; n_bits = 18; break;
case 0xff504020: code = 0x3a35; n_bits = 18; break;
case 0xff203010: code = 0x3ab5; n_bits = 18; break;
case 0xffa050f0: code = 0x3ad5; n_bits = 18; break;
case 0xffe06010: code = 0x3b35; n_bits = 18; break;
case 0xffe0b0f0: code = 0x3b55; n_bits = 18; break;
case 0xff107080: code = 0x3ba9; n_bits = 18; break;
case 0xff004020: code = 0x3bb5; n_bits = 18; break;
case 0xff002000: code = 0x3bd5; n_bits = 18; break;
case 0xff40f0d0: code = 0x3c35; n_bits = 18; break;
case 0xff00b020: code = 0x3cb5; n_bits = 18; break;
case 0xff4040b0: code = 0x3cd5; n_bits = 18; break;
case 0xff8040f0: code = 0x3d35; n_bits = 18; break;
case 0xff302020: code = 0x3d55; n_bits = 18; break;
case 0xff0060f0: code = 0x3db5; n_bits = 18; break;
case 0xffe0d040: code = 0x3dd5; n_bits = 18; break;
case 0xff0080a0: code = 0x3e35; n_bits = 18; break;
case 0xff3080f0: code = 0x3ea9; n_bits = 18; break;
case 0xffe0c070: code = 0x3eb5; n_bits = 18; break;
case 0xff301000: code = 0x3ed5; n_bits = 18; break;
case 0xff4000c0: code = 0x3f35; n_bits = 18; break;
case 0xff70a0c0: code = 0x3f55; n_bits = 18; break;
case 0xffc07080: code = 0x3fa9; n_bits = 18; break;
case 0xffd01080: code = 0x3fb5; n_bits = 18; break;
case 0xff80a090: code = 0x3fd5; n_bits = 18; break;
case 0xff80d070: code = 0x4035; n_bits = 18; break;
case 0xff30c0d0: code = 0x40b5; n_bits = 18; break;
case 0xff204050: code = 0x40d5; n_bits = 18; break;
case 0xff606080: code = 0x4135; n_bits = 18; break;
case 0xff4080a0: code = 0x4155; n_bits = 18; break;
case 0xff00d040: code = 0x41b5; n_bits = 18; break;
case 0xff50e020: code = 0x41d5; n_bits = 18; break;
case 0xff60e090: code = 0x4235; n_bits = 18; break;
case 0xffc0c010: code = 0x42b5; n_bits = 18; break;
case 0xff801060: code = 0x42d5; n_bits = 18; break;
case 0xff904000: code = 0x4335; n_bits = 18; break;
case 0xff8090e0: code = 0x4355; n_bits = 18; break;
case 0xffc060d0: code = 0x43a9; n_bits = 18; break;
case 0xffa050c0: code = 0x43b5; n_bits = 18; break;
case 0xff7050e0: code = 0x43d5; n_bits = 18; break;
case 0xff50a070: code = 0x4435; n_bits = 18; break;
case 0xff1090e0: code = 0x44b5; n_bits = 18; break;
case 0xff307010: code = 0x44d5; n_bits = 18; break;
case 0xff90c090: code = 0x4535; n_bits = 18; break;
case 0xffa07010: code = 0x4555; n_bits = 18; break;
case 0xff60e0b0: code = 0x45b5; n_bits = 18; break;
case 0xff700050: code = 0x45d5; n_bits = 18; break;
case 0xffb0b010: code = 0x4635; n_bits = 18; break;
case 0xff40f0e0: code = 0x46b5; n_bits = 18; break;
case 0xffc030e0: code = 0x46d5; n_bits = 18; break;
case 0xff20c050: code = 0x4735; n_bits = 18; break;
case 0xff6060a0: code = 0x4755; n_bits = 18; break;
case 0xff705060: code = 0x47a9; n_bits = 18; break;
case 0xff602000: code = 0x47b5; n_bits = 18; break;
case 0xff90c000: code = 0x47d5; n_bits = 18; break;
case 0xffe07040: code = 0x4835; n_bits = 18; break;
case 0xffe030a0: code = 0x48b5; n_bits = 18; break;
case 0xffc00000: code = 0x48d5; n_bits = 18; break;
case 0xff501030: code = 0x4935; n_bits = 18; break;
case 0xff4060e0: code = 0x4955; n_bits = 18; break;
case 0xff60d0b0: code = 0x49b5; n_bits = 18; break;
case 0xffb020c0: code = 0x49d5; n_bits = 18; break;
case 0xff60f020: code = 0x4a35; n_bits = 18; break;
case 0xff2000c0: code = 0x4ab5; n_bits = 18; break;
case 0xff708060: code = 0x4ad5; n_bits = 18; break;
case 0xff80f050: code = 0x4b35; n_bits = 18; break;
case 0xfff0e030: code = 0x4b55; n_bits = 18; break;
case 0xfff07060: code = 0x4ba9; n_bits = 18; break;
case 0xff707050: code = 0x4bb5; n_bits = 18; break;
case 0xff109090: code = 0x4bd5; n_bits = 18; break;
case 0xffe0c020: code = 0x4c35; n_bits = 18; break;
case 0xffb0a040: code = 0x4cb5; n_bits = 18; break;
case 0xff201040: code = 0x4cd5; n_bits = 18; break;
case 0xff403030: code = 0x4d35; n_bits = 18; break;
case 0xfff050e0: code = 0x4d55; n_bits = 18; break;
case 0xffc090f0: code = 0x4db5; n_bits = 18; break;
case 0xff405050: code = 0x4dd5; n_bits = 18; break;
case 0xff10f000: code = 0x4e35; n_bits = 18; break;
case 0xffe04030: code = 0x4eb5; n_bits = 18; break;
case 0xff402090: code = 0x4ed5; n_bits = 18; break;
case 0xff20a090: code = 0x4f35; n_bits = 18; break;
case 0xff30c000: code = 0x4f55; n_bits = 18; break;
case 0xff906000: code = 0x4fa9; n_bits = 18; break;
case 0xff9040a0: code = 0x4fb5; n_bits = 18; break;
case 0xff40b070: code = 0x4fd5; n_bits = 18; break;
case 0xff207090: code = 0x5035; n_bits = 18; break;
case 0xffe09050: code = 0x50b5; n_bits = 18; break;
case 0xffd0a0d0: code = 0x50d5; n_bits = 18; break;
case 0xff408040: code = 0x5135; n_bits = 18; break;
case 0xff0070c0: code = 0x5155; n_bits = 18; break;
case 0xffd06070: code = 0x51b5; n_bits = 18; break;
case 0xff704090: code = 0x51d5; n_bits = 18; break;
case 0xff206040: code = 0x5235; n_bits = 18; break;
case 0xff70b020: code = 0x52b5; n_bits = 18; break;
case 0xff901070: code = 0x52d5; n_bits = 18; break;
case 0xffb0f060: code = 0x5335; n_bits = 18; break;
case 0xffe0e060: code = 0x5355; n_bits = 18; break;
case 0xff601040: code = 0x53a9; n_bits = 18; break;
case 0xff2030f0: code = 0x53b5; n_bits = 18; break;
case 0xffb04040: code = 0x53d5; n_bits = 18; break;
case 0xff902000: code = 0x5435; n_bits = 18; break;
case 0xff40f070: code = 0x54b5; n_bits = 18; break;
case 0xff8000b0: code = 0x54d5; n_bits = 18; break;
case 0xff004010: code = 0x5535; n_bits = 18; break;
case 0xff30b040: code = 0x5555; n_bits = 18; break;
case 0xff4050c0: code = 0x55b5; n_bits = 18; break;
case 0xffe0b090: code = 0x55d5; n_bits = 18; break;
case 0xffa0f050: code = 0x5635; n_bits = 18; break;
case 0xff70b070: code = 0x56b5; n_bits = 18; break;
case 0xffa0e0a0: code = 0x56d5; n_bits = 18; break;
case 0xff70d0b0: code = 0x5735; n_bits = 18; break;
case 0xff30a000: code = 0x5755; n_bits = 18; break;
case 0xfff0b020: code = 0x57a9; n_bits = 18; break;
case 0xffa090d0: code = 0x57b5; n_bits = 18; break;
case 0xff50d0b0: code = 0x57d5; n_bits = 18; break;
case 0xff20d0d0: code = 0x5835; n_bits = 18; break;
case 0xff10a0b0: code = 0x58b5; n_bits = 18; break;
case 0xffc090a0: code = 0x58d5; n_bits = 18; break;
case 0xff00e0d0: code = 0x5935; n_bits = 18; break;
case 0xff503000: code = 0x5955; n_bits = 18; break;
case 0xff2060d0: code = 0x59b5; n_bits = 18; break;
case 0xff4040c0: code = 0x59d5; n_bits = 18; break;
case 0xffa0e040: code = 0x5a35; n_bits = 18; break;
case 0xffb0e050: code = 0x5ab5; n_bits = 18; break;
case 0xff20d000: code = 0x5ad5; n_bits = 18; break;
case 0xff405060: code = 0x5b35; n_bits = 18; break;
case 0xff702020: code = 0x5b55; n_bits = 18; break;
case 0xffc000c0: code = 0x5ba9; n_bits = 18; break;
case 0xff306070: code = 0x5bb5; n_bits = 18; break;
case 0xffd0a070: code = 0x5bd5; n_bits = 18; break;
case 0xff407090: code = 0x5c35; n_bits = 18; break;
case 0xff00b030: code = 0x5cb5; n_bits = 18; break;
case 0xff209020: code = 0x5cd5; n_bits = 18; break;
case 0xff201010: code = 0x5d35; n_bits = 18; break;
case 0xffa0c0d0: code = 0x5d55; n_bits = 18; break;
case 0xffa050b0: code = 0x5db5; n_bits = 18; break;
case 0xff20c040: code = 0x5dd5; n_bits = 18; break;
case 0xffe0a060: code = 0x5e35; n_bits = 18; break;
case 0xff905050: code = 0x5ea9; n_bits = 18; break;
case 0xff90b060: code = 0x5eb5; n_bits = 18; break;
case 0xff90f000: code = 0x5ed5; n_bits = 18; break;
case 0xffd07080: code = 0x5f35; n_bits = 18; break;
case 0xffb0e080: code = 0x5f55; n_bits = 18; break;
case 0xff0050d0: code = 0x5fa9; n_bits = 18; break;
case 0xff407030: code = 0x5fb5; n_bits = 18; break;
case 0xff209050: code = 0x5fd5; n_bits = 18; break;
case 0xffa010e0: code = 0x6035; n_bits = 18; break;
case 0xffc0b060: code = 0x60b5; n_bits = 18; break;
case 0xffb0c0e0: code = 0x60d5; n_bits = 18; break;
case 0xffd050d0: code = 0x6135; n_bits = 18; break;
case 0xff405040: code = 0x6155; n_bits = 18; break;
case 0xffe010c0: code = 0x61b5; n_bits = 18; break;
case 0xffa00000: code = 0x61d5; n_bits = 18; break;
case 0xff20f0d0: code = 0x6235; n_bits = 18; break;
case 0xff3020b0: code = 0x62b5; n_bits = 18; break;
case 0xffa06030: code = 0x62d5; n_bits = 18; break;
case 0xff108030: code = 0x6335; n_bits = 18; break;
case 0xffb02030: code = 0x6355; n_bits = 18; break;
case 0xffe0e0a0: code = 0x63a9; n_bits = 18; break;
case 0xffe02070: code = 0x63b5; n_bits = 18; break;
case 0xffc0e0e0: code = 0x63d5; n_bits = 18; break;
case 0xff1070d0: code = 0x6435; n_bits = 18; break;
case 0xff203070: code = 0x64b5; n_bits = 18; break;
case 0xff606000: code = 0x64d5; n_bits = 18; break;
case 0xff9010f0: code = 0x6535; n_bits = 18; break;
case 0xff807000: code = 0x6555; n_bits = 18; break;
case 0xff2030e0: code = 0x65b5; n_bits = 18; break;
case 0xffe0c060: code = 0x65d5; n_bits = 18; break;
case 0xff60d060: code = 0x6635; n_bits = 18; break;
case 0xffd0b070: code = 0x66b5; n_bits = 18; break;
case 0xff9090d0: code = 0x66d5; n_bits = 18; break;
case 0xfff070f0: code = 0x6735; n_bits = 18; break;
case 0xff500030: code = 0x6755; n_bits = 18; break;
case 0xffa0b080: code = 0x67a9; n_bits = 18; break;
case 0xff10a000: code = 0x67b5; n_bits = 18; break;
case 0xff107000: code = 0x67d5; n_bits = 18; break;
case 0xff603050: code = 0x6835; n_bits = 18; break;
case 0xff007020: code = 0x68b5; n_bits = 18; break;
case 0xffe03090: code = 0x68d5; n_bits = 18; break;
case 0xffd0b0d0: code = 0x6935; n_bits = 18; break;
case 0xffe080c0: code = 0x6955; n_bits = 18; break;
case 0xffc0a050: code = 0x69b5; n_bits = 18; break;
case 0xff30b030: code = 0x69d5; n_bits = 18; break;
case 0xffd0b0f0: code = 0x6a35; n_bits = 18; break;
case 0xffe08060: code = 0x6ab5; n_bits = 18; break;
case 0xffb0b000: code = 0x6ad5; n_bits = 18; break;
case 0xff2000f0: code = 0x6b35; n_bits = 18; break;
case 0xff908050: code = 0x6b55; n_bits = 18; break;
case 0xff602030: code = 0x6ba9; n_bits = 18; break;
case 0xff1030d0: code = 0x6bb5; n_bits = 18; break;
case 0xffa08020: code = 0x6bd5; n_bits = 18; break;
case 0xff6080e0: code = 0x6c35; n_bits = 18; break;
case 0xffd08030: code = 0x6cb5; n_bits = 18; break;
case 0xffc000a0: code = 0x6cd5; n_bits = 18; break;
case 0xff0050b0: code = 0x6d35; n_bits = 18; break;
case 0xff504040: code = 0x6d55; n_bits = 18; break;
case 0xffd000a0: code = 0x6db5; n_bits = 18; break;
case 0xff70d050: code = 0x6dd5; n_bits = 18; break;
case 0xff2010b0: code = 0x6e35; n_bits = 18; break;
case 0xff5040d0: code = 0x6eb5; n_bits = 18; break;
case 0xff607000: code = 0x6ed5; n_bits = 18; break;
case 0xff3010b0: code = 0x6f35; n_bits = 18; break;
case 0xff40e0b0: code = 0x6f55; n_bits = 18; break;
case 0xffa0b0a0: code = 0x6fa9; n_bits = 18; break;
case 0xffb02090: code = 0x6fb5; n_bits = 18; break;
case 0xff805030: code = 0x6fd5; n_bits = 18; break;
case 0xff506080: code = 0x7035; n_bits = 18; break;
case 0xff8010c0: code = 0x70b5; n_bits = 18; break;
case 0xffc00020: code = 0x70d5; n_bits = 18; break;
case 0xffe0f010: code = 0x7135; n_bits = 18; break;
case 0xff004060: code = 0x7155; n_bits = 18; break;
case 0xffc0a0f0: code = 0x71b5; n_bits = 18; break;
case 0xffe040f0: code = 0x71d5; n_bits = 18; break;
case 0xff4010a0: code = 0x7235; n_bits = 18; break;
case 0xff00f020: code = 0x72b5; n_bits = 18; break;
case 0xff409070: code = 0x72d5; n_bits = 18; break;
case 0xff80e0f0: code = 0x7335; n_bits = 18; break;
case 0xff9020a0: code = 0x7355; n_bits = 18; break;
case 0xffb000d0: code = 0x73a9; n_bits = 18; break;
case 0xfff0b000: code = 0x73b5; n_bits = 18; break;
case 0xff407050: code = 0x73d5; n_bits = 18; break;
case 0xff2000b0: code = 0x7435; n_bits = 18; break;
case 0xfff0e060: code = 0x74b5; n_bits = 18; break;
case 0xff80d0d0: code = 0x74d5; n_bits = 18; break;
case 0xffa05050: code = 0x7535; n_bits = 18; break;
case 0xffc0c0a0: code = 0x7555; n_bits = 18; break;
case 0xffa04010: code = 0x75b5; n_bits = 18; break;
case 0xff30e030: code = 0x75d5; n_bits = 18; break;
case 0xff00a060: code = 0x7635; n_bits = 18; break;
case 0xffc08070: code = 0x76a9; n_bits = 18; break;
case 0xff70a020: code = 0x76b5; n_bits = 18; break;
case 0xff8040a0: code = 0x76d5; n_bits = 18; break;
case 0xffe0d080: code = 0x7735; n_bits = 18; break;
case 0xff50d0c0: code = 0x7755; n_bits = 18; break;
case 0xff301020: code = 0x77a9; n_bits = 18; break;
case 0xff6030a0: code = 0x77b5; n_bits = 18; break;
case 0xffc0d080: code = 0x77d5; n_bits = 18; break;
case 0xff70a040: code = 0x7835; n_bits = 18; break;
case 0xfff01040: code = 0x78b5; n_bits = 18; break;
case 0xff503040: code = 0x78d5; n_bits = 18; break;
case 0xffb02040: code = 0x7935; n_bits = 18; break;
case 0xff80e0e0: code = 0x7955; n_bits = 18; break;
case 0xff007010: code = 0x79b5; n_bits = 18; break;
case 0xff904050: code = 0x79d5; n_bits = 18; break;
case 0xffb02060: code = 0x7a35; n_bits = 18; break;
case 0xff7060f0: code = 0x7ab5; n_bits = 18; break;
case 0xff30d030: code = 0x7ad5; n_bits = 18; break;
case 0xfff00090: code = 0x7b35; n_bits = 18; break;
case 0xff001080: code = 0x7b55; n_bits = 18; break;
case 0xff7080c0: code = 0x7ba9; n_bits = 18; break;
case 0xffd040b0: code = 0x7bb5; n_bits = 18; break;
case 0xff90e040: code = 0x7bd5; n_bits = 18; break;
case 0xff7050b0: code = 0x7c35; n_bits = 18; break;
case 0xffd07060: code = 0x7cb5; n_bits = 18; break;
case 0xffd0d020: code = 0x7cd5; n_bits = 18; break;
case 0xff509010: code = 0x7d35; n_bits = 18; break;
case 0xff909020: code = 0x7d55; n_bits = 18; break;
case 0xffa02050: code = 0x7db5; n_bits = 18; break;
case 0xff907020: code = 0x7dd5; n_bits = 18; break;
case 0xff501000: code = 0x7e35; n_bits = 18; break;
case 0xfff000e0: code = 0x7ea9; n_bits = 18; break;
case 0xff8000d0: code = 0x7eb5; n_bits = 18; break;
case 0xffa0a0d0: code = 0x7ed5; n_bits = 18; break;
case 0xff00a080: code = 0x7f35; n_bits = 18; break;
case 0xffb0d0b0: code = 0x7f55; n_bits = 18; break;
case 0xff9000a0: code = 0x7fa9; n_bits = 18; break;
case 0xff70f030: code = 0x7fb5; n_bits = 18; break;
case 0xffe000c0: code = 0x7fd5; n_bits = 18; break;
case 0xfff04030: code = 0x8035; n_bits = 18; break;
case 0xffa03090: code = 0x80b5; n_bits = 18; break;
case 0xff60d000: code = 0x80d5; n_bits = 18; break;
case 0xffc000f0: code = 0x8135; n_bits = 18; break;
case 0xff903070: code = 0x8155; n_bits = 18; break;
case 0xff4080b0: code = 0x81b5; n_bits = 18; break;
case 0xff606040: code = 0x81d5; n_bits = 18; break;
case 0xffa040a0: code = 0x8235; n_bits = 18; break;
case 0xff108000: code = 0x82b5; n_bits = 18; break;
case 0xff00d0b0: code = 0x82d5; n_bits = 18; break;
case 0xff008000: code = 0x8335; n_bits = 18; break;
case 0xff402050: code = 0x8355; n_bits = 18; break;
case 0xff006070: code = 0x83a9; n_bits = 18; break;
case 0xff80c0a0: code = 0x83b5; n_bits = 18; break;
case 0xff60a040: code = 0x83d5; n_bits = 18; break;
case 0xffd0a050: code = 0x8435; n_bits = 18; break;
case 0xff0060b0: code = 0x84b5; n_bits = 18; break;
case 0xff001060: code = 0x84d5; n_bits = 18; break;
case 0xffb0b050: code = 0x8535; n_bits = 18; break;
case 0xff104040: code = 0x8555; n_bits = 18; break;
case 0xff70b0e0: code = 0x85b5; n_bits = 18; break;
case 0xff90b050: code = 0x85d5; n_bits = 18; break;
case 0xffe040b0: code = 0x8635; n_bits = 18; break;
case 0xff303040: code = 0x86b5; n_bits = 18; break;
case 0xffa05000: code = 0x86d5; n_bits = 18; break;
case 0xff5020b0: code = 0x8735; n_bits = 18; break;
case 0xff00e070: code = 0x8755; n_bits = 18; break;
case 0xfff040f0: code = 0x87a9; n_bits = 18; break;
case 0xff90a060: code = 0x87b5; n_bits = 18; break;
case 0xfff08060: code = 0x87d5; n_bits = 18; break;
case 0xff00e080: code = 0x8835; n_bits = 18; break;
case 0xff302040: code = 0x88b5; n_bits = 18; break;
case 0xffe04060: code = 0x88d5; n_bits = 18; break;
case 0xffe07000: code = 0x8935; n_bits = 18; break;
case 0xffe0c0e0: code = 0x8955; n_bits = 18; break;
case 0xff70d0a0: code = 0x89b5; n_bits = 18; break;
case 0xff0050a0: code = 0x89d5; n_bits = 18; break;
case 0xff606010: code = 0x8a35; n_bits = 18; break;
case 0xff907050: code = 0x8ab5; n_bits = 18; break;
case 0xffe06090: code = 0x8ad5; n_bits = 18; break;
case 0xff80b070: code = 0x8b35; n_bits = 18; break;
case 0xffb03080: code = 0x8b55; n_bits = 18; break;
case 0xffc05090: code = 0x8ba9; n_bits = 18; break;
case 0xff80e050: code = 0x8bb5; n_bits = 18; break;
case 0xff80d090: code = 0x8bd5; n_bits = 18; break;
case 0xff908030: code = 0x8c35; n_bits = 18; break;
case 0xff005080: code = 0x8cb5; n_bits = 18; break;
case 0xffa000a0: code = 0x8cd5; n_bits = 18; break;
case 0xff3040b0: code = 0x8d35; n_bits = 18; break;
case 0xff5070a0: code = 0x8d55; n_bits = 18; break;
case 0xff80e060: code = 0x8db5; n_bits = 18; break;
case 0xff7070a0: code = 0x8dd5; n_bits = 18; break;
case 0xffe02020: code = 0x8e35; n_bits = 18; break;
case 0xff301080: code = 0x8eb5; n_bits = 18; break;
case 0xffe00010: code = 0x8ed5; n_bits = 18; break;
case 0xffb01050: code = 0x8f35; n_bits = 18; break;
case 0xff2090f0: code = 0x8f55; n_bits = 18; break;
case 0xffc09020: code = 0x8fa9; n_bits = 18; break;
case 0xffd02020: code = 0x8fb5; n_bits = 18; break;
case 0xff402060: code = 0x8fd5; n_bits = 18; break;
case 0xff406050: code = 0x9035; n_bits = 18; break;
case 0xff70c090: code = 0x90b5; n_bits = 18; break;
case 0xff402040: code = 0x90d5; n_bits = 18; break;
case 0xff802080: code = 0x9135; n_bits = 18; break;
case 0xfff08010: code = 0x9155; n_bits = 18; break;
case 0xfff05030: code = 0x91b5; n_bits = 18; break;
case 0xffd02050: code = 0x91d5; n_bits = 18; break;
case 0xffb01070: code = 0x9235; n_bits = 18; break;
case 0xff6010a0: code = 0x92b5; n_bits = 18; break;
case 0xff300030: code = 0x92d5; n_bits = 18; break;
case 0xff70e0b0: code = 0x9335; n_bits = 18; break;
case 0xff209040: code = 0x9355; n_bits = 18; break;
case 0xff009010: code = 0x93a9; n_bits = 18; break;
case 0xff308030: code = 0x93b5; n_bits = 18; break;
case 0xffd03000: code = 0x93d5; n_bits = 18; break;
case 0xff605070: code = 0x9435; n_bits = 18; break;
case 0xff60e030: code = 0x94b5; n_bits = 18; break;
case 0xff208080: code = 0x94d5; n_bits = 18; break;
case 0xff4090f0: code = 0x9535; n_bits = 18; break;
case 0xff606030: code = 0x9555; n_bits = 18; break;
case 0xffa07070: code = 0x95b5; n_bits = 18; break;
case 0xffc030c0: code = 0x95d5; n_bits = 18; break;
case 0xffc0e010: code = 0x9635; n_bits = 18; break;
case 0xff60a0d0: code = 0x96b5; n_bits = 18; break;
case 0xfff0f0e0: code = 0x96d5; n_bits = 18; break;
case 0xff70a090: code = 0x9735; n_bits = 18; break;
case 0xfff040b0: code = 0x9755; n_bits = 18; break;
case 0xffd0e050: code = 0x97a9; n_bits = 18; break;
case 0xff0060e0: code = 0x97b5; n_bits = 18; break;
case 0xff301070: code = 0x97d5; n_bits = 18; break;
case 0xff40c090: code = 0x9835; n_bits = 18; break;
case 0xff70d090: code = 0x98b5; n_bits = 18; break;
case 0xfff0c030: code = 0x98d5; n_bits = 18; break;
case 0xff20d090: code = 0x9935; n_bits = 18; break;
case 0xff702070: code = 0x9955; n_bits = 18; break;
case 0xffa09030: code = 0x99b5; n_bits = 18; break;
case 0xff509000: code = 0x99d5; n_bits = 18; break;
case 0xff109050: code = 0x9a35; n_bits = 18; break;
case 0xff1020d0: code = 0x9ab5; n_bits = 18; break;
case 0xff902060: code = 0x9ad5; n_bits = 18; break;
case 0xff203000: code = 0x9b35; n_bits = 18; break;
case 0xffe020e0: code = 0x9b55; n_bits = 18; break;
case 0xff105030: code = 0x9ba9; n_bits = 18; break;
case 0xff6080c0: code = 0x9bb5; n_bits = 18; break;
case 0xfff03040: code = 0x9bd5; n_bits = 18; break;
case 0xff004040: code = 0x9c35; n_bits = 18; break;
case 0xff301010: code = 0x9cb5; n_bits = 18; break;
case 0xff405080: code = 0x9cd5; n_bits = 18; break;
case 0xffa0d090: code = 0x9d35; n_bits = 18; break;
case 0xff003030: code = 0x9d55; n_bits = 18; break;
case 0xff90c010: code = 0x9db5; n_bits = 18; break;
case 0xff6040f0: code = 0x9dd5; n_bits = 18; break;
case 0xfff070e0: code = 0x9e35; n_bits = 18; break;
case 0xffb0b0d0: code = 0x9ea9; n_bits = 18; break;
case 0xffa0f0c0: code = 0x9eb5; n_bits = 18; break;
case 0xffd040e0: code = 0x9ed5; n_bits = 18; break;
case 0xffc0d000: code = 0x9f35; n_bits = 18; break;
case 0xff308040: code = 0x9f55; n_bits = 18; break;
case 0xff00f0b0: code = 0x9fa9; n_bits = 18; break;
case 0xff60f000: code = 0x9fb5; n_bits = 18; break;
case 0xffc03010: code = 0x9fd5; n_bits = 18; break;
case 0xff10c0d0: code = 0xa035; n_bits = 18; break;
case 0xffe030d0: code = 0xa0b5; n_bits = 18; break;
case 0xffd0b0a0: code = 0xa0d5; n_bits = 18; break;
case 0xfff090f0: code = 0xa135; n_bits = 18; break;
case 0xffe020b0: code = 0xa155; n_bits = 18; break;
case 0xff3010e0: code = 0xa1b5; n_bits = 18; break;
case 0xffc080c0: code = 0xa1d5; n_bits = 18; break;
case 0xff807070: code = 0xa235; n_bits = 18; break;
case 0xff000080: code = 0xa2b5; n_bits = 18; break;
case 0xff30c0a0: code = 0xa2d5; n_bits = 18; break;
case 0xff103060: code = 0xa335; n_bits = 18; break;
case 0xffb07060: code = 0xa355; n_bits = 18; break;
case 0xff00c070: code = 0xa3a9; n_bits = 18; break;
case 0xff30b090: code = 0xa3b5; n_bits = 18; break;
case 0xff10b030: code = 0xa3d5; n_bits = 18; break;
case 0xff9030e0: code = 0xa435; n_bits = 18; break;
case 0xff506090: code = 0xa4b5; n_bits = 18; break;
case 0xff20b0e0: code = 0xa4d5; n_bits = 18; break;
case 0xff20b0f0: code = 0xa535; n_bits = 18; break;
case 0xff50f0f0: code = 0xa555; n_bits = 18; break;
case 0xff10a070: code = 0xa5b5; n_bits = 18; break;
case 0xff3020d0: code = 0xa5d5; n_bits = 18; break;
case 0xff402030: code = 0xa635; n_bits = 18; break;
case 0xffc02080: code = 0xa6b5; n_bits = 18; break;
case 0xff200000: code = 0xa6d5; n_bits = 18; break;
case 0xff1060a0: code = 0xa735; n_bits = 18; break;
case 0xff105090: code = 0xa755; n_bits = 18; break;
case 0xffd0f020: code = 0xa7a9; n_bits = 18; break;
case 0xffb04060: code = 0xa7b5; n_bits = 18; break;
case 0xff504050: code = 0xa7d5; n_bits = 18; break;
case 0xff10a040: code = 0xa835; n_bits = 18; break;
case 0xffb00050: code = 0xa8b5; n_bits = 18; break;
case 0xff20d0a0: code = 0xa8d5; n_bits = 18; break;
case 0xfff0a090: code = 0xa935; n_bits = 18; break;
case 0xfff06070: code = 0xa955; n_bits = 18; break;
case 0xffe09010: code = 0xa9b5; n_bits = 18; break;
case 0xff1080e0: code = 0xa9d5; n_bits = 18; break;
case 0xffb0d010: code = 0xaa35; n_bits = 18; break;
case 0xff405030: code = 0xaab5; n_bits = 18; break;
case 0xffd03060: code = 0xaad5; n_bits = 18; break;
case 0xff305030: code = 0xab35; n_bits = 18; break;
case 0xff20a0e0: code = 0xab55; n_bits = 18; break;
case 0xffc0d050: code = 0xaba9; n_bits = 18; break;
case 0xffa0a040: code = 0xabb5; n_bits = 18; break;
case 0xff307050: code = 0xabd5; n_bits = 18; break;
case 0xff10f020: code = 0xac35; n_bits = 18; break;
case 0xff504000: code = 0xacb5; n_bits = 18; break;
case 0xffa0b0c0: code = 0xacd5; n_bits = 18; break;
case 0xffb080e0: code = 0xad35; n_bits = 18; break;
case 0xffe01080: code = 0xad55; n_bits = 18; break;
case 0xff105080: code = 0xadb5; n_bits = 18; break;
case 0xffa0c050: code = 0xadd5; n_bits = 18; break;
case 0xffb08010: code = 0xae35; n_bits = 18; break;
case 0xff0000e0: code = 0xaeb5; n_bits = 18; break;
case 0xff20c0e0: code = 0xaed5; n_bits = 18; break;
case 0xffe020d0: code = 0xaf35; n_bits = 18; break;
case 0xffb05070: code = 0xaf55; n_bits = 18; break;
case 0xff908010: code = 0xafa9; n_bits = 18; break;
case 0xff401080: code = 0xafb5; n_bits = 18; break;
case 0xffe01090: code = 0xafd5; n_bits = 18; break;
case 0xff906030: code = 0xb035; n_bits = 18; break;
case 0xff3050a0: code = 0xb0b5; n_bits = 18; break;
case 0xff600030: code = 0xb0d5; n_bits = 18; break;
case 0xff60c0d0: code = 0xb135; n_bits = 18; break;
case 0xffa0c030: code = 0xb155; n_bits = 18; break;
case 0xff4050a0: code = 0xb1b5; n_bits = 18; break;
case 0xff70e080: code = 0xb1d5; n_bits = 18; break;
case 0xffb040f0: code = 0xb235; n_bits = 18; break;
case 0xff50a0a0: code = 0xb2b5; n_bits = 18; break;
case 0xff705040: code = 0xb2d5; n_bits = 18; break;
case 0xff70f020: code = 0xb335; n_bits = 18; break;
case 0xff906010: code = 0xb355; n_bits = 18; break;
case 0xff308000: code = 0xb3a9; n_bits = 18; break;
case 0xff9090a0: code = 0xb3b5; n_bits = 18; break;
case 0xff80b0c0: code = 0xb3d5; n_bits = 18; break;
case 0xffd080b0: code = 0xb435; n_bits = 18; break;
case 0xff0030e0: code = 0xb4b5; n_bits = 18; break;
case 0xffa0c090: code = 0xb4d5; n_bits = 18; break;
case 0xff1060c0: code = 0xb535; n_bits = 18; break;
case 0xff80c050: code = 0xb555; n_bits = 18; break;
case 0xffb0c090: code = 0xb5b5; n_bits = 18; break;
case 0xff607070: code = 0xb5d5; n_bits = 18; break;
case 0xff20a050: code = 0xb635; n_bits = 18; break;
case 0xffd080d0: code = 0xb6a9; n_bits = 18; break;
case 0xffe05000: code = 0xb6b5; n_bits = 18; break;
case 0xff302060: code = 0xb6d5; n_bits = 18; break;
case 0xff00c020: code = 0xb735; n_bits = 18; break;
case 0xff401020: code = 0xb755; n_bits = 18; break;
case 0xff00c030: code = 0xb7a9; n_bits = 18; break;
case 0xffc08060: code = 0xb7b5; n_bits = 18; break;
case 0xff305060: code = 0xb7d5; n_bits = 18; break;
case 0xff808060: code = 0xb835; n_bits = 18; break;
case 0xff9020c0: code = 0xb8b5; n_bits = 18; break;
case 0xff301060: code = 0xb8d5; n_bits = 18; break;
case 0xffe05060: code = 0xb935; n_bits = 18; break;
case 0xffb08000: code = 0xb955; n_bits = 18; break;
case 0xff40c0f0: code = 0xb9b5; n_bits = 18; break;
case 0xff609030: code = 0xb9d5; n_bits = 18; break;
case 0xffb050b0: code = 0xba35; n_bits = 18; break;
case 0xff0060c0: code = 0xbab5; n_bits = 18; break;
case 0xff60f080: code = 0xbad5; n_bits = 18; break;
case 0xffa060a0: code = 0xbb35; n_bits = 18; break;
case 0xff506070: code = 0xbb55; n_bits = 18; break;
case 0xff10e0e0: code = 0xbba9; n_bits = 18; break;
case 0xff008080: code = 0xbbb5; n_bits = 18; break;
case 0xffb09050: code = 0xbbd5; n_bits = 18; break;
case 0xffb060b0: code = 0xbc35; n_bits = 18; break;
case 0xfff06020: code = 0xbcb5; n_bits = 18; break;
case 0xff402020: code = 0xbcd5; n_bits = 18; break;
case 0xff80b060: code = 0xbd35; n_bits = 18; break;
case 0xff30e0c0: code = 0xbd55; n_bits = 18; break;
case 0xff400050: code = 0xbdb5; n_bits = 18; break;
case 0xfff03080: code = 0xbdd5; n_bits = 18; break;
case 0xffc010c0: code = 0xbe35; n_bits = 18; break;
case 0xffd02000: code = 0xbea9; n_bits = 18; break;
case 0xffc0d0b0: code = 0xbeb5; n_bits = 18; break;
case 0xff508070: code = 0xbed5; n_bits = 18; break;
case 0xff701040: code = 0xbf35; n_bits = 18; break;
case 0xffd0c070: code = 0xbf55; n_bits = 18; break;
case 0xff501010: code = 0xbfa9; n_bits = 18; break;
case 0xff8000a0: code = 0xbfb5; n_bits = 18; break;
case 0xffb07080: code = 0xbfd5; n_bits = 18; break;
case 0xff7020f0: code = 0xc035; n_bits = 18; break;
case 0xff104010: code = 0xc0b5; n_bits = 18; break;
case 0xff3000d0: code = 0xc0d5; n_bits = 18; break;
case 0xff1000a0: code = 0xc135; n_bits = 18; break;
case 0xff106050: code = 0xc155; n_bits = 18; break;
case 0xff1050d0: code = 0xc1b5; n_bits = 18; break;
case 0xfff0b0e0: code = 0xc1d5; n_bits = 18; break;
case 0xff00b0b0: code = 0xc235; n_bits = 18; break;
case 0xff80c0d0: code = 0xc2b5; n_bits = 18; break;
case 0xff50b060: code = 0xc2d5; n_bits = 18; break;
case 0xfff0d0d0: code = 0xc335; n_bits = 18; break;
case 0xff909010: code = 0xc355; n_bits = 18; break;
case 0xff002080: code = 0xc3a9; n_bits = 18; break;
case 0xff1010f0: code = 0xc3b5; n_bits = 18; break;
case 0xff906050: code = 0xc3d5; n_bits = 18; break;
case 0xffd00070: code = 0xc435; n_bits = 18; break;
case 0xfff00070: code = 0xc4b5; n_bits = 18; break;
case 0xffb0c0c0: code = 0xc4d5; n_bits = 18; break;
case 0xff70d0d0: code = 0xc535; n_bits = 18; break;
case 0xff9020d0: code = 0xc555; n_bits = 18; break;
case 0xff30f010: code = 0xc5b5; n_bits = 18; break;
case 0xff208040: code = 0xc5d5; n_bits = 18; break;
case 0xff40a0d0: code = 0xc635; n_bits = 18; break;
case 0xff104080: code = 0xc6b5; n_bits = 18; break;
case 0xff9000c0: code = 0xc6d5; n_bits = 18; break;
case 0xff004080: code = 0xc735; n_bits = 18; break;
case 0xff304050: code = 0xc755; n_bits = 18; break;
case 0xff403010: code = 0xc7a9; n_bits = 18; break;
case 0xffd0d0c0: code = 0xc7b5; n_bits = 18; break;
case 0xffb0a0e0: code = 0xc7d5; n_bits = 18; break;
case 0xffb04020: code = 0xc835; n_bits = 18; break;
case 0xff80c020: code = 0xc8b5; n_bits = 18; break;
case 0xff902080: code = 0xc8d5; n_bits = 18; break;
case 0xffd020d0: code = 0xc935; n_bits = 18; break;
case 0xff104090: code = 0xc955; n_bits = 18; break;
case 0xffb060e0: code = 0xc9b5; n_bits = 18; break;
case 0xfff09050: code = 0xc9d5; n_bits = 18; break;
case 0xff50a0e0: code = 0xca35; n_bits = 18; break;
case 0xfff060d0: code = 0xcab5; n_bits = 18; break;
case 0xff406010: code = 0xcad5; n_bits = 18; break;
case 0xff309090: code = 0xcb35; n_bits = 18; break;
case 0xff605090: code = 0xcb55; n_bits = 18; break;
case 0xffa09070: code = 0xcba9; n_bits = 18; break;
case 0xff80a0e0: code = 0xcbb5; n_bits = 18; break;
case 0xffe00090: code = 0xcbd5; n_bits = 18; break;
case 0xffb09000: code = 0xcc35; n_bits = 18; break;
case 0xffe020a0: code = 0xccb5; n_bits = 18; break;
case 0xffa08060: code = 0xccd5; n_bits = 18; break;
case 0xfff06060: code = 0xcd35; n_bits = 18; break;
case 0xffd0d060: code = 0xcd55; n_bits = 18; break;
case 0xff4070d0: code = 0xcdb5; n_bits = 18; break;
case 0xff40e060: code = 0xcdd5; n_bits = 18; break;
case 0xfff00080: code = 0xce35; n_bits = 18; break;
case 0xff1020c0: code = 0xceb5; n_bits = 18; break;
case 0xff50a090: code = 0xced5; n_bits = 18; break;
case 0xffe0c0b0: code = 0xcf35; n_bits = 18; break;
case 0xfff0c0f0: code = 0xcf55; n_bits = 18; break;
case 0xffc0e040: code = 0xcfa9; n_bits = 18; break;
case 0xff600040: code = 0xcfb5; n_bits = 18; break;
case 0xff80f010: code = 0xcfd5; n_bits = 18; break;
case 0xffe08010: code = 0xd035; n_bits = 18; break;
case 0xffc0a090: code = 0xd0b5; n_bits = 18; break;
case 0xff0040c0: code = 0xd0d5; n_bits = 18; break;
case 0xffc060e0: code = 0xd135; n_bits = 18; break;
case 0xff003040: code = 0xd155; n_bits = 18; break;
case 0xffc02010: code = 0xd1b5; n_bits = 18; break;
case 0xff90d040: code = 0xd1d5; n_bits = 18; break;
case 0xff808030: code = 0xd235; n_bits = 18; break;
case 0xffe00020: code = 0xd2b5; n_bits = 18; break;
case 0xffc07020: code = 0xd2d5; n_bits = 18; break;
case 0xff20c080: code = 0xd335; n_bits = 18; break;
case 0xff6020b0: code = 0xd355; n_bits = 18; break;
case 0xffd09070: code = 0xd3a9; n_bits = 18; break;
case 0xffe0b080: code = 0xd3b5; n_bits = 18; break;
case 0xff40d080: code = 0xd3d5; n_bits = 18; break;
case 0xff20b040: code = 0xd435; n_bits = 18; break;
case 0xfff080b0: code = 0xd4b5; n_bits = 18; break;
case 0xff700060: code = 0xd4d5; n_bits = 18; break;
case 0xff1070a0: code = 0xd535; n_bits = 18; break;
case 0xff10c080: code = 0xd555; n_bits = 18; break;
case 0xff70e030: code = 0xd5b5; n_bits = 18; break;
case 0xffd07030: code = 0xd5d5; n_bits = 18; break;
case 0xffd08090: code = 0xd635; n_bits = 18; break;
case 0xfff060f0: code = 0xd6b5; n_bits = 18; break;
case 0xfff05040: code = 0xd6d5; n_bits = 18; break;
case 0xff300010: code = 0xd735; n_bits = 18; break;
case 0xff2050c0: code = 0xd755; n_bits = 18; break;
case 0xff002030: code = 0xd7a9; n_bits = 18; break;
case 0xff201020: code = 0xd7b5; n_bits = 18; break;
case 0xff30e0f0: code = 0xd7d5; n_bits = 18; break;
case 0xff20e0e0: code = 0xd835; n_bits = 18; break;
case 0xff408020: code = 0xd8b5; n_bits = 18; break;
case 0xfff07000: code = 0xd8d5; n_bits = 18; break;
case 0xff009080: code = 0xd935; n_bits = 18; break;
case 0xff409030: code = 0xd955; n_bits = 18; break;
case 0xfff0c0a0: code = 0xd9b5; n_bits = 18; break;
case 0xffc0f050: code = 0xd9d5; n_bits = 18; break;
case 0xff00b000: code = 0xda35; n_bits = 18; break;
case 0xff90f090: code = 0xdab5; n_bits = 18; break;
case 0xff1080c0: code = 0xdad5; n_bits = 18; break;
case 0xffd000d0: code = 0xdb35; n_bits = 18; break;
case 0xff00b060: code = 0xdb55; n_bits = 18; break;
case 0xff30f050: code = 0xdba9; n_bits = 18; break;
case 0xff8030a0: code = 0xdbb5; n_bits = 18; break;
case 0xff904060: code = 0xdbd5; n_bits = 18; break;
case 0xff60a060: code = 0xdc35; n_bits = 18; break;
case 0xff2040c0: code = 0xdcb5; n_bits = 18; break;
case 0xff7070d0: code = 0xdcd5; n_bits = 18; break;
case 0xffa030b0: code = 0xdd35; n_bits = 18; break;
case 0xfff05080: code = 0xdd55; n_bits = 18; break;
case 0xff20e0c0: code = 0xddb5; n_bits = 18; break;
case 0xff80d080: code = 0xddd5; n_bits = 18; break;
case 0xff907080: code = 0xde35; n_bits = 18; break;
case 0xffe0c010: code = 0xdea9; n_bits = 18; break;
case 0xff5010e0: code = 0xdeb5; n_bits = 18; break;
case 0xffb0f010: code = 0xded5; n_bits = 18; break;
case 0xffa04060: code = 0xdf35; n_bits = 18; break;
case 0xff909080: code = 0xdf55; n_bits = 18; break;
case 0xfff0a0a0: code = 0xdfa9; n_bits = 18; break;
case 0xffd0a060: code = 0xdfb5; n_bits = 18; break;
case 0xff801080: code = 0xdfd5; n_bits = 18; break;
case 0xffb08080: code = 0xe035; n_bits = 18; break;
case 0xffa05070: code = 0xe0b5; n_bits = 18; break;
case 0xff904020: code = 0xe0d5; n_bits = 18; break;
case 0xff204090: code = 0xe135; n_bits = 18; break;
case 0xffd00040: code = 0xe155; n_bits = 18; break;
case 0xff9020e0: code = 0xe1b5; n_bits = 18; break;
case 0xff605040: code = 0xe1d5; n_bits = 18; break;
case 0xffa0b040: code = 0xe235; n_bits = 18; break;
case 0xff208050: code = 0xe2b5; n_bits = 18; break;
case 0xff308090: code = 0xe2d5; n_bits = 18; break;
case 0xff7080d0: code = 0xe335; n_bits = 18; break;
case 0xff502080: code = 0xe355; n_bits = 18; break;
case 0xffd0a040: code = 0xe3a9; n_bits = 18; break;
case 0xff809040: code = 0xe3b5; n_bits = 18; break;
case 0xff702080: code = 0xe3d5; n_bits = 18; break;
case 0xff00f040: code = 0xe435; n_bits = 18; break;
case 0xff2010f0: code = 0xe4b5; n_bits = 18; break;
case 0xffc0c020: code = 0xe4d5; n_bits = 18; break;
case 0xffe0d0a0: code = 0xe535; n_bits = 18; break;
case 0xffe09080: code = 0xe555; n_bits = 18; break;
case 0xff406030: code = 0xe5b5; n_bits = 18; break;
case 0xff009090: code = 0xe5d5; n_bits = 18; break;
case 0xffa03070: code = 0xe635; n_bits = 18; break;
case 0xff40c080: code = 0xe6b5; n_bits = 18; break;
case 0xff209010: code = 0xe6d5; n_bits = 18; break;
case 0xffc0f090: code = 0xe735; n_bits = 18; break;
case 0xff709060: code = 0xe755; n_bits = 18; break;
case 0xffd05040: code = 0xe7a9; n_bits = 18; break;
case 0xfff0b0b0: code = 0xe7b5; n_bits = 18; break;
case 0xffa02000: code = 0xe7d5; n_bits = 18; break;
case 0xffd02010: code = 0xe835; n_bits = 18; break;
case 0xff40b080: code = 0xe8b5; n_bits = 18; break;
case 0xff7070f0: code = 0xe8d5; n_bits = 18; break;
case 0xffb03010: code = 0xe935; n_bits = 18; break;
case 0xffb080f0: code = 0xe955; n_bits = 18; break;
case 0xff502070: code = 0xe9b5; n_bits = 18; break;
case 0xff80b050: code = 0xe9d5; n_bits = 18; break;
case 0xffd0c0d0: code = 0xea35; n_bits = 18; break;
case 0xff80c000: code = 0xeab5; n_bits = 18; break;
case 0xff70e010: code = 0xead5; n_bits = 18; break;
case 0xffc08020: code = 0xeb35; n_bits = 18; break;
case 0xffe0c0c0: code = 0xeb55; n_bits = 18; break;
case 0xff206010: code = 0xeba9; n_bits = 18; break;
case 0xffc0b000: code = 0xebb5; n_bits = 18; break;
case 0xff809060: code = 0xebd5; n_bits = 18; break;
case 0xff501040: code = 0xec35; n_bits = 18; break;
case 0xff2000d0: code = 0xecb5; n_bits = 18; break;
case 0xffb0f030: code = 0xecd5; n_bits = 18; break;
case 0xffe0b010: code = 0xed35; n_bits = 18; break;
case 0xff508060: code = 0xed55; n_bits = 18; break;
case 0xff704040: code = 0xedb5; n_bits = 18; break;
case 0xff60e0d0: code = 0xedd5; n_bits = 18; break;
case 0xff90f0d0: code = 0xee35; n_bits = 18; break;
case 0xff40a0c0: code = 0xeeb5; n_bits = 18; break;
case 0xff5020c0: code = 0xeed5; n_bits = 18; break;
case 0xff30a0c0: code = 0xef35; n_bits = 18; break;
case 0xff90c0e0: code = 0xef55; n_bits = 18; break;
case 0xff709050: code = 0xefa9; n_bits = 18; break;
case 0xff9030d0: code = 0xefb5; n_bits = 18; break;
case 0xff80d0f0: code = 0xefd5; n_bits = 18; break;
case 0xffa04030: code = 0xf035; n_bits = 18; break;
case 0xff1060e0: code = 0xf0b5; n_bits = 18; break;
case 0xffe0e040: code = 0xf0d5; n_bits = 18; break;
case 0xffe02080: code = 0xf135; n_bits = 18; break;
case 0xff9000d0: code = 0xf155; n_bits = 18; break;
case 0xffd0f000: code = 0xf1b5; n_bits = 18; break;
case 0xffd0b060: code = 0xf1d5; n_bits = 18; break;
case 0xffa020e0: code = 0xf235; n_bits = 18; break;
case 0xff207080: code = 0xf2b5; n_bits = 18; break;
case 0xff90d010: code = 0xf2d5; n_bits = 18; break;
case 0xff007040: code = 0xf335; n_bits = 18; break;
case 0xff807020: code = 0xf355; n_bits = 18; break;
case 0xffd090f0: code = 0xf3a9; n_bits = 18; break;
case 0xff60d0c0: code = 0xf3b5; n_bits = 18; break;
case 0xffd02030: code = 0xf3d5; n_bits = 18; break;
case 0xff8060d0: code = 0xf435; n_bits = 18; break;
case 0xff20b0b0: code = 0xf4b5; n_bits = 18; break;
case 0xffa020b0: code = 0xf4d5; n_bits = 18; break;
case 0xff806090: code = 0xf535; n_bits = 18; break;
case 0xff70f070: code = 0xf555; n_bits = 18; break;
case 0xff20d020: code = 0xf5b5; n_bits = 18; break;
case 0xff10f070: code = 0xf5d5; n_bits = 18; break;
case 0xff60b0a0: code = 0xf635; n_bits = 18; break;
case 0xffa090b0: code = 0xf6a9; n_bits = 18; break;
case 0xff80b0a0: code = 0xf6b5; n_bits = 18; break;
case 0xff700040: code = 0xf6d5; n_bits = 18; break;
case 0xff70b0a0: code = 0xf735; n_bits = 18; break;
case 0xff80d000: code = 0xf755; n_bits = 18; break;
case 0xff40d0c0: code = 0xf7a9; n_bits = 18; break;
case 0xfff0a0e0: code = 0xf7b5; n_bits = 18; break;
case 0xffe02060: code = 0xf7d5; n_bits = 18; break;
case 0xffb02080: code = 0xf835; n_bits = 18; break;
case 0xff6020d0: code = 0xf8b5; n_bits = 18; break;
case 0xffa0e030: code = 0xf8d5; n_bits = 18; break;
case 0xfff070d0: code = 0xf935; n_bits = 18; break;
case 0xff10e020: code = 0xf955; n_bits = 18; break;
case 0xff10b040: code = 0xf9b5; n_bits = 18; break;
case 0xff40a070: code = 0xf9d5; n_bits = 18; break;
case 0xff205080: code = 0xfa35; n_bits = 18; break;
case 0xff80d060: code = 0xfab5; n_bits = 18; break;
case 0xff10e070: code = 0xfad5; n_bits = 18; break;
case 0xffc02090: code = 0xfb35; n_bits = 18; break;
case 0xff30d0b0: code = 0xfb55; n_bits = 18; break;
case 0xfff0e0d0: code = 0xfba9; n_bits = 18; break;
case 0xff60d0f0: code = 0xfbb5; n_bits = 18; break;
case 0xff3060b0: code = 0xfbd5; n_bits = 18; break;
case 0xff30c040: code = 0xfc35; n_bits = 18; break;
case 0xff6050f0: code = 0xfcb5; n_bits = 18; break;
case 0xfff02000: code = 0xfcd5; n_bits = 18; break;
case 0xffd0f0e0: code = 0xfd35; n_bits = 18; break;
case 0xff601010: code = 0xfd55; n_bits = 18; break;
case 0xffc0e060: code = 0xfdb5; n_bits = 18; break;
case 0xff001010: code = 0xfdd5; n_bits = 18; break;
case 0xff10b070: code = 0xfe35; n_bits = 18; break;
case 0xff308020: code = 0xfea9; n_bits = 18; break;
case 0xff2000e0: code = 0xfeb5; n_bits = 18; break;
case 0xff7070b0: code = 0xfed5; n_bits = 18; break;
case 0xffe01010: code = 0xff35; n_bits = 18; break;
case 0xffa09050: code = 0xff55; n_bits = 18; break;
case 0xffb0c030: code = 0xffa9; n_bits = 18; break;
case 0xfff08050: code = 0xffb5; n_bits = 18; break;
case 0xff804060: code = 0xffd5; n_bits = 18; break;
case 0xff009040: code = 0x10035; n_bits = 18; break;
case 0xff0000a0: code = 0x100b5; n_bits = 18; break;
case 0xff707060: code = 0x100d5; n_bits = 18; break;
case 0xff005040: code = 0x10135; n_bits = 18; break;
case 0xff405000: code = 0x10155; n_bits = 18; break;
case 0xff507090: code = 0x101b5; n_bits = 18; break;
case 0xff007060: code = 0x101d5; n_bits = 18; break;
case 0xffc060b0: code = 0x10235; n_bits = 18; break;
case 0xff202080: code = 0x102b5; n_bits = 18; break;
case 0xffc080e0: code = 0x102d5; n_bits = 18; break;
case 0xffc040b0: code = 0x10335; n_bits = 18; break;
case 0xff409000: code = 0x10355; n_bits = 18; break;
case 0xff005000: code = 0x103a9; n_bits = 18; break;
case 0xff90b040: code = 0x103b5; n_bits = 18; break;
case 0xffe08030: code = 0x103d5; n_bits = 18; break;
case 0xffe0e0b0: code = 0x10435; n_bits = 18; break;
case 0xffe0f0f0: code = 0x104b5; n_bits = 18; break;
case 0xff500040: code = 0x104d5; n_bits = 18; break;
case 0xffc0f0b0: code = 0x10535; n_bits = 18; break;
case 0xff509060: code = 0x10555; n_bits = 18; break;
case 0xff90f070: code = 0x105b5; n_bits = 18; break;
case 0xffa020a0: code = 0x105d5; n_bits = 18; break;
case 0xffb0b070: code = 0x10635; n_bits = 18; break;
case 0xff1000b0: code = 0x106b5; n_bits = 18; break;
case 0xff804040: code = 0x106d5; n_bits = 18; break;
case 0xff40b010: code = 0x10735; n_bits = 18; break;
case 0xff00a090: code = 0x10755; n_bits = 18; break;
case 0xff105040: code = 0x107a9; n_bits = 18; break;
case 0xff104050: code = 0x107b5; n_bits = 18; break;
case 0xffb09080: code = 0x107d5; n_bits = 18; break;
case 0xff80e0d0: code = 0x10835; n_bits = 18; break;
case 0xffd0e000: code = 0x108b5; n_bits = 18; break;
case 0xff7050a0: code = 0x108d5; n_bits = 18; break;
case 0xfff0b060: code = 0x10935; n_bits = 18; break;
case 0xfff07040: code = 0x10955; n_bits = 18; break;
case 0xff60a010: code = 0x109b5; n_bits = 18; break;
case 0xffa07080: code = 0x109d5; n_bits = 18; break;
case 0xfff0b080: code = 0x10a35; n_bits = 18; break;
case 0xfff030b0: code = 0x10ab5; n_bits = 18; break;
case 0xffa07090: code = 0x10ad5; n_bits = 18; break;
case 0xff300080: code = 0x10b35; n_bits = 18; break;
case 0xffe030b0: code = 0x10b55; n_bits = 18; break;
case 0xffd060a0: code = 0x10ba9; n_bits = 18; break;
case 0xffa090a0: code = 0x10bb5; n_bits = 18; break;
case 0xff9040b0: code = 0x10bd5; n_bits = 18; break;
case 0xff00d050: code = 0x10c35; n_bits = 18; break;
case 0xffa0d050: code = 0x10cb5; n_bits = 18; break;
case 0xffe070c0: code = 0x10cd5; n_bits = 18; break;
case 0xff904040: code = 0x10d35; n_bits = 18; break;
case 0xff70a0b0: code = 0x10d55; n_bits = 18; break;
case 0xff9080e0: code = 0x10db5; n_bits = 18; break;
case 0xffa0d020: code = 0x10dd5; n_bits = 18; break;
case 0xff60a070: code = 0x10e35; n_bits = 18; break;
case 0xff60c0e0: code = 0x10eb5; n_bits = 18; break;
case 0xff505040: code = 0x10ed5; n_bits = 18; break;
case 0xff50c0e0: code = 0x10f35; n_bits = 18; break;
case 0xff9070b0: code = 0x10f55; n_bits = 18; break;
case 0xffc020e0: code = 0x10fa9; n_bits = 18; break;
case 0xffd020b0: code = 0x10fb5; n_bits = 18; break;
case 0xff70d0c0: code = 0x10fd5; n_bits = 18; break;
case 0xff5000d0: code = 0x11035; n_bits = 18; break;
case 0xff403090: code = 0x110b5; n_bits = 18; break;
case 0xff306080: code = 0x110d5; n_bits = 18; break;
case 0xffb04080: code = 0x11135; n_bits = 18; break;
case 0xff00d020: code = 0x11155; n_bits = 18; break;
case 0xff00a040: code = 0x111b5; n_bits = 18; break;
case 0xff90e0b0: code = 0x111d5; n_bits = 18; break;
case 0xffb050c0: code = 0x11235; n_bits = 18; break;
case 0xff809070: code = 0x112b5; n_bits = 18; break;
case 0xffe06020: code = 0x112d5; n_bits = 18; break;
case 0xff5010a0: code = 0x11335; n_bits = 18; break;
case 0xff00d0f0: code = 0x11355; n_bits = 18; break;
case 0xffb0b060: code = 0x113a9; n_bits = 18; break;
case 0xff60a080: code = 0x113b5; n_bits = 18; break;
case 0xffe07060: code = 0x113d5; n_bits = 18; break;
case 0xff009070: code = 0x11435; n_bits = 18; break;
case 0xffc06060: code = 0x114b5; n_bits = 18; break;
case 0xffc02040: code = 0x114d5; n_bits = 18; break;
case 0xffb0a080: code = 0x11535; n_bits = 18; break;
case 0xff00e000: code = 0x11555; n_bits = 18; break;
case 0xffc0d090: code = 0x115b5; n_bits = 18; break;
case 0xff6010c0: code = 0x115d5; n_bits = 18; break;
case 0xff20b020: code = 0x11635; n_bits = 18; break;
case 0xff20d0c0: code = 0x116b5; n_bits = 18; break;
case 0xff5060d0: code = 0x116d5; n_bits = 18; break;
case 0xff90c070: code = 0x11735; n_bits = 18; break;
case 0xff70f0e0: code = 0x11755; n_bits = 18; break;
case 0xffd0c050: code = 0x117a9; n_bits = 18; break;
case 0xff006080: code = 0x117b5; n_bits = 18; break;
case 0xffc04070: code = 0x117d5; n_bits = 18; break;
case 0xff30a010: code = 0x11835; n_bits = 18; break;
case 0xff20c0c0: code = 0x118b5; n_bits = 18; break;
case 0xffa01030: code = 0x118d5; n_bits = 18; break;
case 0xff10a010: code = 0x11935; n_bits = 18; break;
case 0xff90d090: code = 0x11955; n_bits = 18; break;
case 0xff10c010: code = 0x119b5; n_bits = 18; break;
case 0xff603080: code = 0x119d5; n_bits = 18; break;
case 0xff20d0b0: code = 0x11a35; n_bits = 18; break;
case 0xff20f080: code = 0x11ab5; n_bits = 18; break;
case 0xff609020: code = 0x11ad5; n_bits = 18; break;
case 0xff905000: code = 0x11b35; n_bits = 18; break;
case 0xffb090a0: code = 0x11b55; n_bits = 18; break;
case 0xff007050: code = 0x11ba9; n_bits = 18; break;
case 0xffd03080: code = 0x11bb5; n_bits = 18; break;
case 0xff00e040: code = 0x11bd5; n_bits = 18; break;
case 0xffb0f0a0: code = 0x11c35; n_bits = 18; break;
case 0xffc030f0: code = 0x11cb5; n_bits = 18; break;
case 0xff80c010: code = 0x11cd5; n_bits = 18; break;
case 0xff6060f0: code = 0x11d35; n_bits = 18; break;
case 0xff30e090: code = 0x11d55; n_bits = 18; break;
case 0xfff08070: code = 0x11db5; n_bits = 18; break;
case 0xff203030: code = 0x11dd5; n_bits = 18; break;
case 0xffa0a060: code = 0x11e35; n_bits = 18; break;
case 0xff20e090: code = 0x11ea9; n_bits = 18; break;
case 0xff3040d0: code = 0x11eb5; n_bits = 18; break;
case 0xff70d020: code = 0x11ed5; n_bits = 18; break;
case 0xff00b090: code = 0x11f35; n_bits = 18; break;
case 0xff507000: code = 0x11f55; n_bits = 18; break;
case 0xff407000: code = 0x11fa9; n_bits = 18; break;
case 0xff709080: code = 0x11fb5; n_bits = 18; break;
case 0xff7000f0: code = 0x11fd5; n_bits = 18; break;
case 0xff4000a0: code = 0x12035; n_bits = 18; break;
case 0xff9080a0: code = 0x120b5; n_bits = 18; break;
case 0xff20f060: code = 0x120d5; n_bits = 18; break;
case 0xffc0f0f0: code = 0x12135; n_bits = 18; break;
case 0xffe0e080: code = 0x12155; n_bits = 18; break;
case 0xffd07040: code = 0x121b5; n_bits = 18; break;
case 0xffd03020: code = 0x121d5; n_bits = 18; break;
case 0xfff0d070: code = 0x12235; n_bits = 18; break;
case 0xffb070d0: code = 0x122b5; n_bits = 18; break;
case 0xff90e0d0: code = 0x122d5; n_bits = 18; break;
case 0xff80d010: code = 0x12335; n_bits = 18; break;
case 0xff0040d0: code = 0x12355; n_bits = 18; break;
case 0xff600090: code = 0x123a9; n_bits = 18; break;
case 0xff007080: code = 0x123b5; n_bits = 18; break;
case 0xff40c0a0: code = 0x123d5; n_bits = 18; break;
case 0xff9020f0: code = 0x12435; n_bits = 18; break;
case 0xffb020f0: code = 0x124b5; n_bits = 18; break;
case 0xff108050: code = 0x124d5; n_bits = 18; break;
case 0xff40a0b0: code = 0x12535; n_bits = 18; break;
case 0xff7010a0: code = 0x12555; n_bits = 18; break;
case 0xffc000e0: code = 0x125b5; n_bits = 18; break;
case 0xff00b0f0: code = 0x125d5; n_bits = 18; break;
case 0xff704080: code = 0x12635; n_bits = 18; break;
case 0xff507040: code = 0x126b5; n_bits = 18; break;
case 0xff20e0a0: code = 0x126d5; n_bits = 18; break;
case 0xffc06080: code = 0x12735; n_bits = 18; break;
case 0xff30d060: code = 0x12755; n_bits = 18; break;
case 0xff90b0b0: code = 0x127a9; n_bits = 18; break;
case 0xffa0a0a0: code = 0x127b5; n_bits = 18; break;
case 0xff902020: code = 0x127d5; n_bits = 18; break;
case 0xff7060a0: code = 0x12835; n_bits = 18; break;
case 0xff802040: code = 0x128b5; n_bits = 18; break;
case 0xffc0e0b0: code = 0x128d5; n_bits = 18; break;
case 0xff00f0a0: code = 0x12935; n_bits = 18; break;
case 0xffc0d030: code = 0x12955; n_bits = 18; break;
case 0xff8030c0: code = 0x129b5; n_bits = 18; break;
case 0xff203040: code = 0x129d5; n_bits = 18; break;
case 0xff10a020: code = 0x12a35; n_bits = 18; break;
case 0xff00a050: code = 0x12ab5; n_bits = 18; break;
case 0xff207050: code = 0x12ad5; n_bits = 18; break;
case 0xffb0b0f0: code = 0x12b35; n_bits = 18; break;
case 0xff107050: code = 0x12b55; n_bits = 18; break;
case 0xff8060c0: code = 0x12ba9; n_bits = 18; break;
case 0xff4060f0: code = 0x12bb5; n_bits = 18; break;
case 0xff4010d0: code = 0x12bd5; n_bits = 18; break;
case 0xff8070a0: code = 0x12c35; n_bits = 18; break;
case 0xffb00060: code = 0x12cb5; n_bits = 18; break;
case 0xffb06020: code = 0x12cd5; n_bits = 18; break;
case 0xffc03040: code = 0x12d35; n_bits = 18; break;
case 0xfff02040: code = 0x12d55; n_bits = 18; break;
case 0xffd0a080: code = 0x12db5; n_bits = 18; break;
case 0xff009060: code = 0x12dd5; n_bits = 18; break;
case 0xffc0c070: code = 0x12e35; n_bits = 18; break;
case 0xff30f0a0: code = 0x12eb5; n_bits = 18; break;
case 0xff909050: code = 0x12ed5; n_bits = 18; break;
case 0xff002040: code = 0x12f35; n_bits = 18; break;
case 0xff80c030: code = 0x12f55; n_bits = 18; break;
case 0xff202090: code = 0x12fa9; n_bits = 18; break;
case 0xff7040f0: code = 0x12fb5; n_bits = 18; break;
case 0xff109020: code = 0x12fd5; n_bits = 18; break;
case 0xfff02090: code = 0x13035; n_bits = 18; break;
case 0xffb000b0: code = 0x130b5; n_bits = 18; break;
case 0xff1050c0: code = 0x130d5; n_bits = 18; break;
case 0xff1010e0: code = 0x13135; n_bits = 18; break;
case 0xff90a080: code = 0x13155; n_bits = 18; break;
case 0xff302010: code = 0x131b5; n_bits = 18; break;
case 0xff1090b0: code = 0x131d5; n_bits = 18; break;
case 0xff00f050: code = 0x13235; n_bits = 18; break;
case 0xff006010: code = 0x132b5; n_bits = 18; break;
case 0xff8090a0: code = 0x132d5; n_bits = 18; break;
case 0xffb02050: code = 0x13335; n_bits = 18; break;
case 0xffe000b0: code = 0x13355; n_bits = 18; break;
case 0xffa0d0a0: code = 0x133a9; n_bits = 18; break;
case 0xffa04000: code = 0x133b5; n_bits = 18; break;
case 0xff602060: code = 0x133d5; n_bits = 18; break;
case 0xffe03010: code = 0x13435; n_bits = 18; break;
case 0xff702010: code = 0x134b5; n_bits = 18; break;
case 0xff6010f0: code = 0x134d5; n_bits = 18; break;
case 0xffe05050: code = 0x13535; n_bits = 18; break;
case 0xffe080b0: code = 0x13555; n_bits = 18; break;
case 0xff506060: code = 0x135b5; n_bits = 18; break;
case 0xff80f040: code = 0x135d5; n_bits = 18; break;
case 0xff001050: code = 0x13635; n_bits = 18; break;
case 0xfff0b090: code = 0x136a9; n_bits = 18; break;
case 0xff9070c0: code = 0x136b5; n_bits = 18; break;
case 0xffd01090: code = 0x136d5; n_bits = 18; break;
case 0xff101050: code = 0x13735; n_bits = 18; break;
case 0xff103050: code = 0x13755; n_bits = 18; break;
case 0xff9060f0: code = 0x137a9; n_bits = 18; break;
case 0xff30d0c0: code = 0x137b5; n_bits = 18; break;
case 0xff50a000: code = 0x137d5; n_bits = 18; break;
case 0xff5040c0: code = 0x13835; n_bits = 18; break;
case 0xffc02060: code = 0x138b5; n_bits = 18; break;
case 0xff30b010: code = 0x138d5; n_bits = 18; break;
case 0xfff090c0: code = 0x13935; n_bits = 18; break;
case 0xffa01060: code = 0x13955; n_bits = 18; break;
case 0xff10c0e0: code = 0x139b5; n_bits = 18; break;
case 0xffc05060: code = 0x139d5; n_bits = 18; break;
case 0xff50d030: code = 0x13a35; n_bits = 18; break;
case 0xffb04070: code = 0x13ab5; n_bits = 18; break;
case 0xff409090: code = 0x13ad5; n_bits = 18; break;
case 0xffd0b0b0: code = 0x13b35; n_bits = 18; break;
case 0xff6000f0: code = 0x13b55; n_bits = 18; break;
case 0xff00d000: code = 0x13ba9; n_bits = 18; break;
case 0xffb0f0d0: code = 0x13bb5; n_bits = 18; break;
case 0xff905030: code = 0x13bd5; n_bits = 18; break;
case 0xff904070: code = 0x13c35; n_bits = 18; break;
case 0xffd070e0: code = 0x13cb5; n_bits = 18; break;
case 0xff70d080: code = 0x13cd5; n_bits = 18; break;
case 0xff9050e0: code = 0x13d35; n_bits = 18; break;
case 0xff204070: code = 0x13d55; n_bits = 18; break;
case 0xff5040b0: code = 0x13db5; n_bits = 18; break;
case 0xff606050: code = 0x13dd5; n_bits = 18; break;
case 0xff70e020: code = 0x13e35; n_bits = 18; break;
case 0xffc04040: code = 0x13ea9; n_bits = 18; break;
case 0xff3080c0: code = 0x13eb5; n_bits = 18; break;
case 0xff6020f0: code = 0x13ed5; n_bits = 18; break;
case 0xff1080a0: code = 0x13f35; n_bits = 18; break;
case 0xff5020f0: code = 0x13f55; n_bits = 18; break;
case 0xffb03020: code = 0x13fa9; n_bits = 18; break;
case 0xff20c0d0: code = 0x13fb5; n_bits = 18; break;
case 0xffd06040: code = 0x13fd5; n_bits = 18; break;
case 0xffc01010: code = 0x14035; n_bits = 18; break;
case 0xff208070: code = 0x140b5; n_bits = 18; break;
case 0xffd080a0: code = 0x140d5; n_bits = 18; break;
case 0xff50c000: code = 0x14135; n_bits = 18; break;
case 0xff30e020: code = 0x14155; n_bits = 18; break;
case 0xff80d0b0: code = 0x141b5; n_bits = 18; break;
case 0xff809000: code = 0x141d5; n_bits = 18; break;
case 0xff0050e0: code = 0x14235; n_bits = 18; break;
case 0xfff05050: code = 0x142b5; n_bits = 18; break;
case 0xff6050e0: code = 0x142d5; n_bits = 18; break;
case 0xff10d040: code = 0x14335; n_bits = 18; break;
case 0xff100000: code = 0x14355; n_bits = 18; break;
case 0xff50d080: code = 0x143a9; n_bits = 18; break;
case 0xff901060: code = 0x143b5; n_bits = 18; break;
case 0xfff020b0: code = 0x143d5; n_bits = 18; break;
case 0xffe040d0: code = 0x14435; n_bits = 18; break;
case 0xff20f010: code = 0x144b5; n_bits = 18; break;
case 0xff30d090: code = 0x144d5; n_bits = 18; break;
case 0xffd00030: code = 0x14535; n_bits = 18; break;
case 0xff30a0a0: code = 0x14555; n_bits = 18; break;
case 0xff306000: code = 0x145b5; n_bits = 18; break;
case 0xffa050d0: code = 0x145d5; n_bits = 18; break;
case 0xff40e0a0: code = 0x14635; n_bits = 18; break;
case 0xfff01020: code = 0x146b5; n_bits = 18; break;
case 0xffa05090: code = 0x146d5; n_bits = 18; break;
case 0xff30f0e0: code = 0x14735; n_bits = 18; break;
case 0xff50c020: code = 0x14755; n_bits = 18; break;
case 0xff70e070: code = 0x147a9; n_bits = 18; break;
case 0xff60b010: code = 0x147b5; n_bits = 18; break;
case 0xffc05040: code = 0x147d5; n_bits = 18; break;
case 0xffe01060: code = 0x14835; n_bits = 18; break;
case 0xff40e0e0: code = 0x148b5; n_bits = 18; break;
case 0xff609040: code = 0x148d5; n_bits = 18; break;
case 0xff6040c0: code = 0x14935; n_bits = 18; break;
case 0xff40f0f0: code = 0x14955; n_bits = 18; break;
case 0xff40b050: code = 0x149b5; n_bits = 18; break;
case 0xff00e060: code = 0x149d5; n_bits = 18; break;
case 0xffb04000: code = 0x14a35; n_bits = 18; break;
case 0xff5090d0: code = 0x14ab5; n_bits = 18; break;
case 0xff500090: code = 0x14ad5; n_bits = 18; break;
case 0xffe05040: code = 0x14b35; n_bits = 18; break;
case 0xffb00090: code = 0x14b55; n_bits = 18; break;
case 0xff3030f0: code = 0x14ba9; n_bits = 18; break;
case 0xff300060: code = 0x14bb5; n_bits = 18; break;
case 0xff60b040: code = 0x14bd5; n_bits = 18; break;
case 0xffc0d060: code = 0x14c35; n_bits = 18; break;
case 0xffc0f0e0: code = 0x14cb5; n_bits = 18; break;
case 0xff6070a0: code = 0x14cd5; n_bits = 18; break;
case 0xff9030a0: code = 0x14d35; n_bits = 18; break;
case 0xff0000b0: code = 0x14d55; n_bits = 18; break;
case 0xff40f0b0: code = 0x14db5; n_bits = 18; break;
case 0xffa06080: code = 0x14dd5; n_bits = 18; break;
case 0xff900040: code = 0x14e35; n_bits = 18; break;
case 0xffd090d0: code = 0x14eb5; n_bits = 18; break;
case 0xff308010: code = 0x14ed5; n_bits = 18; break;
case 0xfff07010: code = 0x14f35; n_bits = 18; break;
case 0xff6040e0: code = 0x14f55; n_bits = 18; break;
case 0xff704000: code = 0x14fa9; n_bits = 18; break;
case 0xffe0f090: code = 0x14fb5; n_bits = 18; break;
case 0xff900010: code = 0x14fd5; n_bits = 18; break;
case 0xff8020c0: code = 0x15035; n_bits = 18; break;
case 0xff2070a0: code = 0x150b5; n_bits = 18; break;
case 0xffd050e0: code = 0x150d5; n_bits = 18; break;
case 0xff2050a0: code = 0x15135; n_bits = 18; break;
case 0xff70d040: code = 0x15155; n_bits = 18; break;
case 0xff90f0c0: code = 0x151b5; n_bits = 18; break;
case 0xff00f030: code = 0x151d5; n_bits = 18; break;
case 0xffc09030: code = 0x15235; n_bits = 18; break;
case 0xfff04080: code = 0x152b5; n_bits = 18; break;
case 0xffd0b080: code = 0x152d5; n_bits = 18; break;
case 0xfff03000: code = 0x15335; n_bits = 18; break;
case 0xffd0a000: code = 0x15355; n_bits = 18; break;
case 0xffe0d0d0: code = 0x153a9; n_bits = 18; break;
case 0xff909070: code = 0x153b5; n_bits = 18; break;
case 0xff20a080: code = 0x153d5; n_bits = 18; break;
case 0xff7010c0: code = 0x15435; n_bits = 18; break;
case 0xff5050c0: code = 0x154b5; n_bits = 18; break;
case 0xffe0a010: code = 0x154d5; n_bits = 18; break;
case 0xff20b000: code = 0x15535; n_bits = 18; break;
case 0xff60f040: code = 0x15555; n_bits = 18; break;
case 0xffb050f0: code = 0x155b5; n_bits = 18; break;
case 0xff20e000: code = 0x155d5; n_bits = 18; break;
case 0xff502060: code = 0x15635; n_bits = 18; break;
case 0xff5030a0: code = 0x156b5; n_bits = 18; break;
case 0xffa0b0d0: code = 0x156d5; n_bits = 18; break;
case 0xffa060f0: code = 0x15735; n_bits = 18; break;
case 0xff709090: code = 0x15755; n_bits = 18; break;
case 0xffa0b030: code = 0x157a9; n_bits = 18; break;
case 0xff50c080: code = 0x157b5; n_bits = 18; break;
case 0xff901050: code = 0x157d5; n_bits = 18; break;
case 0xff109070: code = 0x15835; n_bits = 18; break;
case 0xff4030f0: code = 0x158b5; n_bits = 18; break;
case 0xff802070: code = 0x158d5; n_bits = 18; break;
case 0xff1080d0: code = 0x15935; n_bits = 18; break;
case 0xff5030b0: code = 0x15955; n_bits = 18; break;
case 0xffb0c0d0: code = 0x159b5; n_bits = 18; break;
case 0xff600060: code = 0x159d5; n_bits = 18; break;
case 0xff806070: code = 0x15a35; n_bits = 18; break;
case 0xff505060: code = 0x15ab5; n_bits = 18; break;
case 0xffa0f0d0: code = 0x15ad5; n_bits = 18; break;
case 0xff00f080: code = 0x15b35; n_bits = 18; break;
case 0xff705030: code = 0x15b55; n_bits = 18; break;
case 0xff306040: code = 0x15ba9; n_bits = 18; break;
case 0xfff0d050: code = 0x15bb5; n_bits = 18; break;
case 0xffb0b0b0: code = 0x15bd5; n_bits = 18; break;
case 0xff503060: code = 0x15c35; n_bits = 18; break;
case 0xff30a020: code = 0x15cb5; n_bits = 18; break;
case 0xff40e090: code = 0x15cd5; n_bits = 18; break;
case 0xff3040a0: code = 0x15d35; n_bits = 18; break;
case 0xffb030f0: code = 0x15d55; n_bits = 18; break;
case 0xff50e090: code = 0x15db5; n_bits = 18; break;
case 0xff804070: code = 0x15dd5; n_bits = 18; break;
case 0xffd06000: code = 0x15e35; n_bits = 18; break;
case 0xff90e060: code = 0x15ea9; n_bits = 18; break;
case 0xffc040a0: code = 0x15eb5; n_bits = 18; break;
case 0xff1080f0: code = 0x15ed5; n_bits = 18; break;
case 0xffc03020: code = 0x15f35; n_bits = 18; break;
case 0xffd040f0: code = 0x15f55; n_bits = 18; break;
case 0xff809080: code = 0x15fa9; n_bits = 18; break;
case 0xffe0e0c0: code = 0x15fb5; n_bits = 18; break;
case 0xff302070: code = 0x15fd5; n_bits = 18; break;
case 0xffa0c0f0: code = 0x16035; n_bits = 18; break;
case 0xffb07000: code = 0x160b5; n_bits = 18; break;
case 0xffa08080: code = 0x160d5; n_bits = 18; break;
case 0xff603020: code = 0x16135; n_bits = 18; break;
case 0xff40e050: code = 0x16155; n_bits = 18; break;
case 0xff305070: code = 0x161b5; n_bits = 18; break;
case 0xff801040: code = 0x161d5; n_bits = 18; break;
case 0xff708000: code = 0x16235; n_bits = 18; break;
case 0xff30c0b0: code = 0x162b5; n_bits = 18; break;
case 0xff10d0e0: code = 0x162d5; n_bits = 18; break;
case 0xff20b0c0: code = 0x16335; n_bits = 18; break;
case 0xffe090e0: code = 0x16355; n_bits = 18; break;
case 0xffd0a020: code = 0x163a9; n_bits = 18; break;
case 0xffe0b0e0: code = 0x163b5; n_bits = 18; break;
case 0xff2050b0: code = 0x163d5; n_bits = 18; break;
case 0xff507010: code = 0x16435; n_bits = 18; break;
case 0xff4090c0: code = 0x164b5; n_bits = 18; break;
case 0xff60f010: code = 0x164d5; n_bits = 18; break;
case 0xff206090: code = 0x16535; n_bits = 18; break;
case 0xff307040: code = 0x16555; n_bits = 18; break;
case 0xff5000b0: code = 0x165b5; n_bits = 18; break;
case 0xffd08000: code = 0x165d5; n_bits = 18; break;
case 0xff40b040: code = 0x16635; n_bits = 18; break;
case 0xff1090c0: code = 0x166b5; n_bits = 18; break;
case 0xff40a000: code = 0x166d5; n_bits = 18; break;
case 0xff903000: code = 0x16735; n_bits = 18; break;
case 0xfff0e090: code = 0x16755; n_bits = 18; break;
case 0xffe090a0: code = 0x167a9; n_bits = 18; break;
case 0xff702030: code = 0x167b5; n_bits = 18; break;
case 0xfff07090: code = 0x167d5; n_bits = 18; break;
case 0xff90e070: code = 0x16835; n_bits = 18; break;
case 0xffe070b0: code = 0x168b5; n_bits = 18; break;
case 0xff30a050: code = 0x168d5; n_bits = 18; break;
case 0xffc07070: code = 0x16935; n_bits = 18; break;
case 0xffc03050: code = 0x16955; n_bits = 18; break;
case 0xfff03090: code = 0x169b5; n_bits = 18; break;
case 0xff9050d0: code = 0x169d5; n_bits = 18; break;
case 0xffc07090: code = 0x16a35; n_bits = 18; break;
case 0xff3000f0: code = 0x16ab5; n_bits = 18; break;
case 0xff008090: code = 0x16ad5; n_bits = 18; break;
case 0xff106070: code = 0x16b35; n_bits = 18; break;
case 0xffd050f0: code = 0x16b55; n_bits = 18; break;
case 0xffe02030: code = 0x16ba9; n_bits = 18; break;
case 0xffd0f060: code = 0x16bb5; n_bits = 18; break;
case 0xff400070: code = 0x16bd5; n_bits = 18; break;
case 0xff2090a0: code = 0x16c35; n_bits = 18; break;
case 0xff80b030: code = 0x16cb5; n_bits = 18; break;
case 0xffa00010: code = 0x16cd5; n_bits = 18; break;
case 0xff8050c0: code = 0x16d35; n_bits = 18; break;
case 0xff50d050: code = 0x16d55; n_bits = 18; break;
case 0xff101070: code = 0x16db5; n_bits = 18; break;
case 0xffc01030: code = 0x16dd5; n_bits = 18; break;
case 0xff10b010: code = 0x16e35; n_bits = 18; break;
case 0xff4010b0: code = 0x16eb5; n_bits = 18; break;
case 0xffe09020: code = 0x16ed5; n_bits = 18; break;
case 0xff207030: code = 0x16f35; n_bits = 18; break;
case 0xff101030: code = 0x16f55; n_bits = 18; break;
case 0xffb0d0f0: code = 0x16fa9; n_bits = 18; break;
case 0xffe060b0: code = 0x16fb5; n_bits = 18; break;
case 0xff70a0d0: code = 0x16fd5; n_bits = 18; break;
case 0xff907060: code = 0x17035; n_bits = 18; break;
case 0xffa010f0: code = 0x170b5; n_bits = 18; break;
case 0xff40f0c0: code = 0x170d5; n_bits = 18; break;
case 0xff10a0f0: code = 0x17135; n_bits = 18; break;
case 0xff201030: code = 0x17155; n_bits = 18; break;
case 0xff903050: code = 0x171b5; n_bits = 18; break;
case 0xffd060d0: code = 0x171d5; n_bits = 18; break;
case 0xff307020: code = 0x17235; n_bits = 18; break;
case 0xffe09030: code = 0x172b5; n_bits = 18; break;
case 0xffc0c0e0: code = 0x172d5; n_bits = 18; break;
case 0xffd0d050: code = 0x17335; n_bits = 18; break;
case 0xffe0d090: code = 0x17355; n_bits = 18; break;
case 0xfff080e0: code = 0x173a9; n_bits = 18; break;
case 0xffd030e0: code = 0x173b5; n_bits = 18; break;
case 0xff509070: code = 0x173d5; n_bits = 18; break;
case 0xff50d090: code = 0x17435; n_bits = 18; break;
case 0xff403000: code = 0x174b5; n_bits = 18; break;
case 0xff709070: code = 0x174d5; n_bits = 18; break;
case 0xff90a0f0: code = 0x17535; n_bits = 18; break;
case 0xff8000e0: code = 0x17555; n_bits = 18; break;
case 0xffd01070: code = 0x175b5; n_bits = 18; break;
case 0xffa000e0: code = 0x175d5; n_bits = 18; break;
case 0xff602090: code = 0x17635; n_bits = 18; break;
case 0xffb04010: code = 0x176a9; n_bits = 18; break;
case 0xff50b030: code = 0x176b5; n_bits = 18; break;
case 0xff1030a0: code = 0x176d5; n_bits = 18; break;
case 0xffd09020: code = 0x17735; n_bits = 18; break;
case 0xff3050f0: code = 0x17755; n_bits = 18; break;
case 0xff30a030: code = 0x177a9; n_bits = 18; break;
case 0xff509020: code = 0x177b5; n_bits = 18; break;
case 0xffb09020: code = 0x177d5; n_bits = 18; break;
case 0xff201090: code = 0x17835; n_bits = 18; break;
case 0xffc04080: code = 0x178b5; n_bits = 18; break;
case 0xff808020: code = 0x178d5; n_bits = 18; break;
case 0xffa00080: code = 0x17935; n_bits = 18; break;
case 0xff80b0b0: code = 0x17955; n_bits = 18; break;
case 0xff20f0a0: code = 0x179b5; n_bits = 18; break;
case 0xff5040f0: code = 0x179d5; n_bits = 18; break;
case 0xff9060a0: code = 0x17a35; n_bits = 18; break;
case 0xff9070e0: code = 0x17ab5; n_bits = 18; break;
case 0xffd0c060: code = 0x17ad5; n_bits = 18; break;
case 0xff0070e0: code = 0x17b35; n_bits = 18; break;
case 0xff50f080: code = 0x17b55; n_bits = 18; break;
case 0xff60e040: code = 0x17ba9; n_bits = 18; break;
case 0xff60e070: code = 0x17bb5; n_bits = 18; break;
case 0xff505070: code = 0x17bd5; n_bits = 18; break;
case 0xffe000a0: code = 0x17c35; n_bits = 18; break;
case 0xffc03000: code = 0x17cb5; n_bits = 18; break;
case 0xffb0e060: code = 0x17cd5; n_bits = 18; break;
case 0xfff0e0a0: code = 0x17d35; n_bits = 18; break;
case 0xffd060c0: code = 0x17d55; n_bits = 18; break;
case 0xff10c0c0: code = 0x17db5; n_bits = 18; break;
case 0xff30c070: code = 0x17dd5; n_bits = 18; break;
case 0xffe09090: code = 0x17e35; n_bits = 18; break;
case 0xffc0f0d0: code = 0x17ea9; n_bits = 18; break;
case 0xffe02090: code = 0x17eb5; n_bits = 18; break;
case 0xff3000a0: code = 0x17ed5; n_bits = 18; break;
case 0xffa0d070: code = 0x17f35; n_bits = 18; break;
case 0xff2000a0: code = 0x17f55; n_bits = 18; break;
case 0xff109040: code = 0x17fa9; n_bits = 18; break;
case 0xff00d060: code = 0x17fb5; n_bits = 18; break;
case 0xfff0e010: code = 0x17fd5; n_bits = 18; break;
case 0xff807030: code = 0x18035; n_bits = 18; break;
case 0xffd09080: code = 0x180b5; n_bits = 18; break;
case 0xff405010: code = 0x180d5; n_bits = 18; break;
case 0xff90f0a0: code = 0x18135; n_bits = 18; break;
case 0xff903090: code = 0x18155; n_bits = 18; break;
case 0xfff0e020: code = 0x181b5; n_bits = 18; break;
case 0xff6080a0: code = 0x181d5; n_bits = 18; break;
case 0xff90a020: code = 0x18235; n_bits = 18; break;
case 0xff10e0c0: code = 0x182b5; n_bits = 18; break;
case 0xff702040: code = 0x182d5; n_bits = 18; break;
case 0xff804000: code = 0x18335; n_bits = 18; break;
case 0xff5050e0: code = 0x18355; n_bits = 18; break;
case 0xff504070: code = 0x183a9; n_bits = 18; break;
case 0xff10b0e0: code = 0x183b5; n_bits = 18; break;
case 0xffc09070: code = 0x183d5; n_bits = 18; break;
case 0xff501060: code = 0x18435; n_bits = 18; break;
case 0xff204040: code = 0x184b5; n_bits = 18; break;
case 0xff401090: code = 0x184d5; n_bits = 18; break;
case 0xff80a0d0: code = 0x18535; n_bits = 18; break;
case 0xffb07030: code = 0x18555; n_bits = 18; break;
case 0xff80b010: code = 0x185b5; n_bits = 18; break;
case 0xff2010a0: code = 0x185d5; n_bits = 18; break;
case 0xffd00050: code = 0x18635; n_bits = 18; break;
case 0xff30c050: code = 0x186b5; n_bits = 18; break;
case 0xffe07030: code = 0x186d5; n_bits = 18; break;
case 0xffa03040: code = 0x18735; n_bits = 18; break;
case 0xfff0f060: code = 0x18755; n_bits = 18; break;
case 0xff90d030: code = 0x187a9; n_bits = 18; break;
case 0xffa070e0: code = 0x187b5; n_bits = 18; break;
case 0xff801010: code = 0x187d5; n_bits = 18; break;
case 0xfff0b0a0: code = 0x18835; n_bits = 18; break;
case 0xfff0c0e0: code = 0x188b5; n_bits = 18; break;
case 0xffd00000: code = 0x188d5; n_bits = 18; break;
case 0xff00c090: code = 0x18935; n_bits = 18; break;
case 0xffd020a0: code = 0x18955; n_bits = 18; break;
case 0xffa0c060: code = 0x189b5; n_bits = 18; break;
case 0xff80e0b0: code = 0x189d5; n_bits = 18; break;
case 0xffd0c0c0: code = 0x18a35; n_bits = 18; break;
case 0xff30e010: code = 0x18ab5; n_bits = 18; break;
case 0xff0020e0: code = 0x18ad5; n_bits = 18; break;
case 0xff1090d0: code = 0x18b35; n_bits = 18; break;
case 0xffc00090: code = 0x18b55; n_bits = 18; break;
case 0xffb0d030: code = 0x18ba9; n_bits = 18; break;
case 0xff0010d0: code = 0x18bb5; n_bits = 18; break;
case 0xff7050f0: code = 0x18bd5; n_bits = 18; break;
case 0xff605010: code = 0x18c35; n_bits = 18; break;
case 0xffc0e0a0: code = 0x18cb5; n_bits = 18; break;
case 0xffc080d0: code = 0x18cd5; n_bits = 18; break;
case 0xff705080: code = 0x18d35; n_bits = 18; break;
case 0xffb08040: code = 0x18d55; n_bits = 18; break;
case 0xff6000d0: code = 0x18db5; n_bits = 18; break;
case 0xff60d020: code = 0x18dd5; n_bits = 18; break;
case 0xff80f0c0: code = 0x18e35; n_bits = 18; break;
case 0xff207000: code = 0x18eb5; n_bits = 18; break;
case 0xff70d0f0: code = 0x18ed5; n_bits = 18; break;
case 0xffb00080: code = 0x18f35; n_bits = 18; break;
case 0xff803020: code = 0x18f55; n_bits = 18; break;
case 0xfff02060: code = 0x18fa9; n_bits = 18; break;
case 0xff902090: code = 0x18fb5; n_bits = 18; break;
case 0xff900080: code = 0x18fd5; n_bits = 18; break;
case 0xff708040: code = 0x19035; n_bits = 18; break;
case 0xfff0d0b0: code = 0x190b5; n_bits = 18; break;
case 0xffe05030: code = 0x190d5; n_bits = 18; break;
case 0xff40d070: code = 0x19135; n_bits = 18; break;
case 0xff306060: code = 0x19155; n_bits = 18; break;
case 0xffe0a0d0: code = 0x191b5; n_bits = 18; break;
case 0xff70f0f0: code = 0x191d5; n_bits = 18; break;
case 0xff3090f0: code = 0x19235; n_bits = 18; break;
case 0xffd0f0a0: code = 0x192b5; n_bits = 18; break;
case 0xff309040: code = 0x192d5; n_bits = 18; break;
case 0xff706050: code = 0x19335; n_bits = 18; break;
case 0xff50f0d0: code = 0x19355; n_bits = 18; break;
case 0xff10c0a0: code = 0x193a9; n_bits = 18; break;
case 0xff40b0c0: code = 0x193b5; n_bits = 18; break;
case 0xffa01070: code = 0x193d5; n_bits = 18; break;
case 0xff50e060: code = 0x19435; n_bits = 18; break;
case 0xffd000e0: code = 0x194b5; n_bits = 18; break;
case 0xffb040d0: code = 0x194d5; n_bits = 18; break;
case 0xff30f070: code = 0x19535; n_bits = 18; break;
case 0xffe0d020: code = 0x19555; n_bits = 18; break;
case 0xff008020: code = 0x195b5; n_bits = 18; break;
case 0xff601060: code = 0x195d5; n_bits = 18; break;
case 0xff00d0c0: code = 0x19635; n_bits = 18; break;
case 0xffc0b0f0: code = 0x196b5; n_bits = 18; break;
case 0xff000070: code = 0x196d5; n_bits = 18; break;
case 0xffd00010: code = 0x19735; n_bits = 18; break;
case 0xff404080: code = 0x19755; n_bits = 18; break;
case 0xffb0f090: code = 0x197a9; n_bits = 18; break;
case 0xffb04030: code = 0x197b5; n_bits = 18; break;
case 0xffb00010: code = 0x197d5; n_bits = 18; break;
case 0xff800030: code = 0x19835; n_bits = 18; break;
case 0xff70a070: code = 0x198b5; n_bits = 18; break;
case 0xff106090: code = 0x198d5; n_bits = 18; break;
case 0xff4020a0: code = 0x19935; n_bits = 18; break;
case 0xff00a0b0: code = 0x19955; n_bits = 18; break;
case 0xff30c0c0: code = 0x199b5; n_bits = 18; break;
case 0xff301030: code = 0x199d5; n_bits = 18; break;
case 0xffb080c0: code = 0x19a35; n_bits = 18; break;
case 0xff70d030: code = 0x19ab5; n_bits = 18; break;
case 0xff80b020: code = 0x19ad5; n_bits = 18; break;
case 0xff706040: code = 0x19b35; n_bits = 18; break;
case 0xffc01090: code = 0x19b55; n_bits = 18; break;
case 0xff00a0f0: code = 0x19ba9; n_bits = 18; break;
case 0xff709020: code = 0x19bb5; n_bits = 18; break;
case 0xff307080: code = 0x19bd5; n_bits = 18; break;
case 0xff80d050: code = 0x19c35; n_bits = 18; break;
case 0xff200060: code = 0x19cb5; n_bits = 18; break;
case 0xff30b000: code = 0x19cd5; n_bits = 18; break;
case 0xffe01030: code = 0x19d35; n_bits = 18; break;
case 0xff9060c0: code = 0x19d55; n_bits = 18; break;
case 0xff202060: code = 0x19db5; n_bits = 18; break;
case 0xff3060c0: code = 0x19dd5; n_bits = 18; break;
case 0xfff0e0c0: code = 0x19e35; n_bits = 18; break;
case 0xffd0c0e0: code = 0x19ea9; n_bits = 18; break;
case 0xff802030: code = 0x19eb5; n_bits = 18; break;
case 0xffa09080: code = 0x19ed5; n_bits = 18; break;
case 0xfff06040: code = 0x19f35; n_bits = 18; break;
case 0xff100070: code = 0x19f55; n_bits = 18; break;
case 0xffa08040: code = 0x19fa9; n_bits = 18; break;
case 0xffe060e0: code = 0x19fb5; n_bits = 18; break;
case 0xffd070a0: code = 0x19fd5; n_bits = 18; break;
case 0xff500070: code = 0x1a035; n_bits = 18; break;
case 0xffd0f0c0: code = 0x1a0b5; n_bits = 18; break;
case 0xffc07040: code = 0x1a0d5; n_bits = 18; break;
case 0xffa0b020: code = 0x1a135; n_bits = 18; break;
case 0xffc0f0c0: code = 0x1a155; n_bits = 18; break;
case 0xffb060f0: code = 0x1a1b5; n_bits = 18; break;
case 0xff60c060: code = 0x1a1d5; n_bits = 18; break;
case 0xffb0d0e0: code = 0x1a235; n_bits = 18; break;
case 0xffe070a0: code = 0x1a2b5; n_bits = 18; break;
case 0xff001040: code = 0x1a2d5; n_bits = 18; break;
case 0xfff030f0: code = 0x1a335; n_bits = 18; break;
case 0xff70a050: code = 0x1a355; n_bits = 18; break;
case 0xffe040a0: code = 0x1a3a9; n_bits = 18; break;
case 0xffa0e0d0: code = 0x1a3b5; n_bits = 18; break;
case 0xff101040: code = 0x1a3d5; n_bits = 18; break;
case 0xffa01080: code = 0x1a435; n_bits = 18; break;
case 0xff50e000: code = 0x1a4b5; n_bits = 18; break;
case 0xfff0c000: code = 0x1a4d5; n_bits = 18; break;
case 0xff107090: code = 0x1a535; n_bits = 18; break;
case 0xff609090: code = 0x1a555; n_bits = 18; break;
case 0xff708080: code = 0x1a5b5; n_bits = 18; break;
case 0xff30b0e0: code = 0x1a5d5; n_bits = 18; break;
case 0xfff08020: code = 0x1a635; n_bits = 18; break;
case 0xffe0f0d0: code = 0x1a6b5; n_bits = 18; break;
case 0xff70c050: code = 0x1a6d5; n_bits = 18; break;
case 0xff303070: code = 0x1a735; n_bits = 18; break;
case 0xff00b010: code = 0x1a755; n_bits = 18; break;
case 0xff4030e0: code = 0x1a7a9; n_bits = 18; break;
case 0xff905070: code = 0x1a7b5; n_bits = 18; break;
case 0xff6070e0: code = 0x1a7d5; n_bits = 18; break;
case 0xff600080: code = 0x1a835; n_bits = 18; break;
case 0xff1060d0: code = 0x1a8b5; n_bits = 18; break;
case 0xff003000: code = 0x1a8d5; n_bits = 18; break;
case 0xff1030b0: code = 0x1a935; n_bits = 18; break;
case 0xff70e0e0: code = 0x1a955; n_bits = 18; break;
case 0xff8040c0: code = 0x1a9b5; n_bits = 18; break;
case 0xffa0a010: code = 0x1a9d5; n_bits = 18; break;
case 0xff0000c0: code = 0x1aa35; n_bits = 18; break;
case 0xfff0c0c0: code = 0x1aab5; n_bits = 18; break;
case 0xffc0f060: code = 0x1aad5; n_bits = 18; break;
case 0xff4080c0: code = 0x1ab35; n_bits = 18; break;
case 0xff3000e0: code = 0x1ab55; n_bits = 18; break;
case 0xff102000: code = 0x1aba9; n_bits = 18; break;
case 0xffe070e0: code = 0x1abb5; n_bits = 18; break;
case 0xff40a0e0: code = 0x1abd5; n_bits = 18; break;
case 0xffd05050: code = 0x1ac35; n_bits = 18; break;
case 0xffe0c090: code = 0x1acb5; n_bits = 18; break;
case 0xff505030: code = 0x1acd5; n_bits = 18; break;
case 0xffa04080: code = 0x1ad35; n_bits = 18; break;
case 0xff80b080: code = 0x1ad55; n_bits = 18; break;
case 0xff80b000: code = 0x1adb5; n_bits = 18; break;
case 0xff0070d0: code = 0x1add5; n_bits = 18; break;
case 0xff409080: code = 0x1ae35; n_bits = 18; break;
case 0xffc0b0c0: code = 0x1aeb5; n_bits = 18; break;
case 0xffe0f040: code = 0x1aed5; n_bits = 18; break;
case 0xff509080: code = 0x1af35; n_bits = 18; break;
case 0xffa01010: code = 0x1af55; n_bits = 18; break;
case 0xffd0c0b0: code = 0x1afa9; n_bits = 18; break;
case 0xff307000: code = 0x1afb5; n_bits = 18; break;
case 0xff001030: code = 0x1afd5; n_bits = 18; break;
case 0xff80b0d0: code = 0x1b035; n_bits = 18; break;
case 0xffc000b0: code = 0x1b0b5; n_bits = 18; break;
case 0xff00d0d0: code = 0x1b0d5; n_bits = 18; break;
case 0xff80f0f0: code = 0x1b135; n_bits = 18; break;
case 0xffb0b0a0: code = 0x1b155; n_bits = 18; break;
case 0xff10d0d0: code = 0x1b1b5; n_bits = 18; break;
case 0xfff07050: code = 0x1b1d5; n_bits = 18; break;
case 0xfff0d010: code = 0x1b235; n_bits = 18; break;
case 0xfff0d090: code = 0x1b2b5; n_bits = 18; break;
case 0xff00e010: code = 0x1b2d5; n_bits = 18; break;
case 0xff507050: code = 0x1b335; n_bits = 18; break;
case 0xffb01060: code = 0x1b355; n_bits = 18; break;
case 0xff30f090: code = 0x1b3a9; n_bits = 18; break;
case 0xff805040: code = 0x1b3b5; n_bits = 18; break;
case 0xfff0a0f0: code = 0x1b3d5; n_bits = 18; break;
case 0xffc04050: code = 0x1b435; n_bits = 18; break;
case 0xff8080e0: code = 0x1b4b5; n_bits = 18; break;
case 0xffe00030: code = 0x1b4d5; n_bits = 18; break;
case 0xff60e060: code = 0x1b535; n_bits = 18; break;
case 0xff90e030: code = 0x1b555; n_bits = 18; break;
case 0xff102070: code = 0x1b5b5; n_bits = 18; break;
case 0xff20b090: code = 0x1b5d5; n_bits = 18; break;
case 0xfff0c010: code = 0x1b635; n_bits = 18; break;
case 0xff80e030: code = 0x1b6a9; n_bits = 18; break;
case 0xffd0a0a0: code = 0x1b6b5; n_bits = 18; break;
case 0xffa03060: code = 0x1b6d5; n_bits = 18; break;
case 0xff20d0f0: code = 0x1b735; n_bits = 18; break;
case 0xff108010: code = 0x1b755; n_bits = 18; break;
case 0xff60c080: code = 0x1b7a9; n_bits = 18; break;
case 0xff00b070: code = 0x1b7b5; n_bits = 18; break;
case 0xff0010f0: code = 0x1b7d5; n_bits = 18; break;
case 0xffa02070: code = 0x1b835; n_bits = 18; break;
case 0xffb0d0a0: code = 0x1b8b5; n_bits = 18; break;
case 0xff702000: code = 0x1b8d5; n_bits = 18; break;
case 0xffd01000: code = 0x1b935; n_bits = 18; break;
case 0xffe01040: code = 0x1b955; n_bits = 18; break;
case 0xff20a0c0: code = 0x1b9b5; n_bits = 18; break;
case 0xff902040: code = 0x1b9d5; n_bits = 18; break;
case 0xff4080f0: code = 0x1ba35; n_bits = 18; break;
case 0xff804050: code = 0x1bab5; n_bits = 18; break;
case 0xff20a0d0: code = 0x1bad5; n_bits = 18; break;
case 0xff10c020: code = 0x1bb35; n_bits = 18; break;
case 0xffc03030: code = 0x1bb55; n_bits = 18; break;
case 0xffc020a0: code = 0x1bba9; n_bits = 18; break;
case 0xffa0b070: code = 0x1bbb5; n_bits = 18; break;
case 0xffb010d0: code = 0x1bbd5; n_bits = 18; break;
case 0xff90d080: code = 0x1bc35; n_bits = 18; break;
case 0xffe0b0c0: code = 0x1bcb5; n_bits = 18; break;
case 0xffc080a0: code = 0x1bcd5; n_bits = 18; break;
case 0xff104030: code = 0x1bd35; n_bits = 18; break;
case 0xff40e0c0: code = 0x1bd55; n_bits = 18; break;
case 0xff40a020: code = 0x1bdb5; n_bits = 18; break;
case 0xffc040d0: code = 0x1bdd5; n_bits = 18; break;
case 0xff10d060: code = 0x1be35; n_bits = 18; break;
case 0xffb02000: code = 0x1bea9; n_bits = 18; break;
case 0xff806040: code = 0x1beb5; n_bits = 18; break;
case 0xffb05030: code = 0x1bed5; n_bits = 18; break;
case 0xfff000d0: code = 0x1bf35; n_bits = 18; break;
case 0xff10a0c0: code = 0x1bf55; n_bits = 18; break;
case 0xff800000: code = 0x1bfa9; n_bits = 18; break;
case 0xff704020: code = 0x1bfb5; n_bits = 18; break;
case 0xff2090c0: code = 0x1bfd5; n_bits = 18; break;
case 0xff60a050: code = 0x1c035; n_bits = 18; break;
case 0xffc05020: code = 0x1c0b5; n_bits = 18; break;
case 0xffc09040: code = 0x1c0d5; n_bits = 18; break;
case 0xff4070c0: code = 0x1c135; n_bits = 18; break;
case 0xff70c000: code = 0x1c155; n_bits = 18; break;
case 0xfff06000: code = 0x1c1b5; n_bits = 18; break;
case 0xffc060a0: code = 0x1c1d5; n_bits = 18; break;
case 0xff207010: code = 0x1c235; n_bits = 18; break;
case 0xff80e090: code = 0x1c2b5; n_bits = 18; break;
case 0xff006040: code = 0x1c2d5; n_bits = 18; break;
case 0xff6040a0: code = 0x1c335; n_bits = 18; break;
case 0xfff090b0: code = 0x1c355; n_bits = 18; break;
case 0xff9030b0: code = 0x1c3a9; n_bits = 18; break;
case 0xff1050a0: code = 0x1c3b5; n_bits = 18; break;
case 0xff80b0f0: code = 0x1c3d5; n_bits = 18; break;
case 0xff208020: code = 0x1c435; n_bits = 18; break;
case 0xff1010c0: code = 0x1c4b5; n_bits = 18; break;
case 0xff90f0f0: code = 0x1c4d5; n_bits = 18; break;
case 0xff609070: code = 0x1c535; n_bits = 18; break;
case 0xff008050: code = 0x1c555; n_bits = 18; break;
case 0xff40d090: code = 0x1c5b5; n_bits = 18; break;
case 0xff501090: code = 0x1c5d5; n_bits = 18; break;
case 0xff90c050: code = 0x1c635; n_bits = 18; break;
case 0xff80a060: code = 0x1c6b5; n_bits = 18; break;
case 0xfff06010: code = 0x1c6d5; n_bits = 18; break;
case 0xfff090a0: code = 0x1c735; n_bits = 18; break;
case 0xffa0d080: code = 0x1c755; n_bits = 18; break;
case 0xff5060a0: code = 0x1c7a9; n_bits = 18; break;
case 0xffc09060: code = 0x1c7b5; n_bits = 18; break;
case 0xff90c040: code = 0x1c7d5; n_bits = 18; break;
case 0xff30d070: code = 0x1c835; n_bits = 18; break;
case 0xff10c090: code = 0x1c8b5; n_bits = 18; break;
case 0xff901000: code = 0x1c8d5; n_bits = 18; break;
case 0xffd020c0: code = 0x1c935; n_bits = 18; break;
case 0xff8060a0: code = 0x1c955; n_bits = 18; break;
case 0xff203080: code = 0x1c9b5; n_bits = 18; break;
case 0xff3070a0: code = 0x1c9d5; n_bits = 18; break;
case 0xff008040: code = 0x1ca35; n_bits = 18; break;
case 0xff200090: code = 0x1cab5; n_bits = 18; break;
case 0xff5090a0: code = 0x1cad5; n_bits = 18; break;
case 0xff9030c0: code = 0x1cb35; n_bits = 18; break;
case 0xff9010d0: code = 0x1cb55; n_bits = 18; break;
case 0xffc050c0: code = 0x1cba9; n_bits = 18; break;
case 0xff508090: code = 0x1cbb5; n_bits = 18; break;
case 0xff6090a0: code = 0x1cbd5; n_bits = 18; break;
case 0xff405020: code = 0x1cc35; n_bits = 18; break;
case 0xffc030b0: code = 0x1ccb5; n_bits = 18; break;
case 0xffe09040: code = 0x1ccd5; n_bits = 18; break;
case 0xff40c040: code = 0x1cd35; n_bits = 18; break;
case 0xffc09000: code = 0x1cd55; n_bits = 18; break;
case 0xffe0e0e0: code = 0x1cdb5; n_bits = 18; break;
case 0xffa06090: code = 0x1cdd5; n_bits = 18; break;
case 0xffe0b030: code = 0x1ce35; n_bits = 18; break;
case 0xff90b0d0: code = 0x1ceb5; n_bits = 18; break;
case 0xff8030d0: code = 0x1ced5; n_bits = 18; break;
case 0xffd08050: code = 0x1cf35; n_bits = 18; break;
case 0xffe08000: code = 0x1cf55; n_bits = 18; break;
case 0xffb040e0: code = 0x1cfa9; n_bits = 18; break;
case 0xff609050: code = 0x1cfb5; n_bits = 18; break;
case 0xff105060: code = 0x1cfd5; n_bits = 18; break;
case 0xffc09050: code = 0x1d035; n_bits = 18; break;
case 0xff0080e0: code = 0x1d0b5; n_bits = 18; break;
case 0xffa070b0: code = 0x1d0d5; n_bits = 18; break;
case 0xff20e0b0: code = 0x1d135; n_bits = 18; break;
case 0xff200070: code = 0x1d155; n_bits = 18; break;
case 0xff604060: code = 0x1d1b5; n_bits = 18; break;
case 0xff308070: code = 0x1d1d5; n_bits = 18; break;
case 0xffa0a070: code = 0x1d235; n_bits = 18; break;
case 0xff80d0c0: code = 0x1d2b5; n_bits = 18; break;
case 0xfff00060: code = 0x1d2d5; n_bits = 18; break;
case 0xffe00060: code = 0x1d335; n_bits = 18; break;
case 0xff508030: code = 0x1d355; n_bits = 18; break;
case 0xff70d0e0: code = 0x1d3a9; n_bits = 18; break;
case 0xff80f020: code = 0x1d3b5; n_bits = 18; break;
case 0xff801020: code = 0x1d3d5; n_bits = 18; break;
case 0xffc0e030: code = 0x1d435; n_bits = 18; break;
case 0xff2030c0: code = 0x1d4b5; n_bits = 18; break;
case 0xff0090c0: code = 0x1d4d5; n_bits = 18; break;
case 0xff80d020: code = 0x1d535; n_bits = 18; break;
case 0xffb0f070: code = 0x1d555; n_bits = 18; break;
case 0xffe0f0b0: code = 0x1d5b5; n_bits = 18; break;
case 0xffc0c0d0: code = 0x1d5d5; n_bits = 18; break;
case 0xffc04030: code = 0x1d635; n_bits = 18; break;
case 0xff307070: code = 0x1d6a9; n_bits = 18; break;
case 0xffa01050: code = 0x1d6b5; n_bits = 18; break;
case 0xff50a030: code = 0x1d6d5; n_bits = 18; break;
case 0xff4030a0: code = 0x1d735; n_bits = 18; break;
case 0xffc0a0d0: code = 0x1d755; n_bits = 18; break;
case 0xff80c070: code = 0x1d7a9; n_bits = 18; break;
case 0xff707040: code = 0x1d7b5; n_bits = 18; break;
case 0xffa0e0c0: code = 0x1d7d5; n_bits = 18; break;
case 0xff609000: code = 0x1d835; n_bits = 18; break;
case 0xffa00050: code = 0x1d8b5; n_bits = 18; break;
case 0xff500020: code = 0x1d8d5; n_bits = 18; break;
case 0xfff01090: code = 0x1d935; n_bits = 18; break;
case 0xff0000d0: code = 0x1d955; n_bits = 18; break;
case 0xffb06060: code = 0x1d9b5; n_bits = 18; break;
case 0xff90c0c0: code = 0x1d9d5; n_bits = 18; break;
case 0xffd0b000: code = 0x1da35; n_bits = 18; break;
case 0xff2050e0: code = 0x1dab5; n_bits = 18; break;
case 0xff80e040: code = 0x1dad5; n_bits = 18; break;
case 0xff8000c0: code = 0x1db35; n_bits = 18; break;
case 0xfff06050: code = 0x1db55; n_bits = 18; break;
case 0xff00c0f0: code = 0x1dba9; n_bits = 18; break;
case 0xffd0e090: code = 0x1dbb5; n_bits = 18; break;
case 0xff30d000: code = 0x1dbd5; n_bits = 18; break;
case 0xff4060c0: code = 0x1dc35; n_bits = 18; break;
case 0xffa050e0: code = 0x1dcb5; n_bits = 18; break;
case 0xff10c040: code = 0x1dcd5; n_bits = 18; break;
case 0xff802050: code = 0x1dd35; n_bits = 18; break;
case 0xff60d080: code = 0x1dd55; n_bits = 18; break;
case 0xff30f0d0: code = 0x1ddb5; n_bits = 18; break;
case 0xffd0e0a0: code = 0x1ddd5; n_bits = 18; break;
case 0xffa0c0e0: code = 0x1de35; n_bits = 18; break;
case 0xfff0a0c0: code = 0x1dea9; n_bits = 18; break;
case 0xff901080: code = 0x1deb5; n_bits = 18; break;
case 0xff00a0c0: code = 0x1ded5; n_bits = 18; break;
case 0xff40f080: code = 0x1df35; n_bits = 18; break;
case 0xff707000: code = 0x1df55; n_bits = 18; break;
case 0xffe06040: code = 0x1dfa9; n_bits = 18; break;
case 0xffc06000: code = 0x1dfb5; n_bits = 18; break;
case 0xffa0d000: code = 0x1dfd5; n_bits = 18; break;
case 0xff7080a0: code = 0x1e035; n_bits = 18; break;
case 0xff908040: code = 0x1e0b5; n_bits = 18; break;
case 0xff8090c0: code = 0x1e0d5; n_bits = 18; break;
case 0xffb050a0: code = 0x1e135; n_bits = 18; break;
case 0xff206080: code = 0x1e155; n_bits = 18; break;
case 0xff209000: code = 0x1e1b5; n_bits = 18; break;
case 0xff60e050: code = 0x1e1d5; n_bits = 18; break;
case 0xffd04080: code = 0x1e235; n_bits = 18; break;
case 0xff30b0c0: code = 0x1e2b5; n_bits = 18; break;
case 0xff602080: code = 0x1e2d5; n_bits = 18; break;
case 0xff108090: code = 0x1e335; n_bits = 18; break;
case 0xff408000: code = 0x1e355; n_bits = 18; break;
case 0xff302050: code = 0x1e3a9; n_bits = 18; break;
case 0xff601070: code = 0x1e3b5; n_bits = 18; break;
case 0xff400030: code = 0x1e3d5; n_bits = 18; break;
case 0xff4020d0: code = 0x1e435; n_bits = 18; break;
case 0xfff09080: code = 0x1e4b5; n_bits = 18; break;
case 0xfff05060: code = 0x1e4d5; n_bits = 18; break;
case 0xffd09040: code = 0x1e535; n_bits = 18; break;
case 0xff000020: code = 0x1e555; n_bits = 18; break;
case 0xff5090c0: code = 0x1e5b5; n_bits = 18; break;
case 0xff70f010: code = 0x1e5d5; n_bits = 18; break;
case 0xffb05080: code = 0x1e635; n_bits = 18; break;
case 0xffe050f0: code = 0x1e6b5; n_bits = 18; break;
case 0xffa02030: code = 0x1e6d5; n_bits = 18; break;
case 0xff001020: code = 0x1e735; n_bits = 18; break;
case 0xff2070e0: code = 0x1e755; n_bits = 18; break;
case 0xffc0a0e0: code = 0x1e7a9; n_bits = 18; break;
case 0xffe07050: code = 0x1e7b5; n_bits = 18; break;
case 0xffe03030: code = 0x1e7d5; n_bits = 18; break;
case 0xff70f0b0: code = 0x1e835; n_bits = 18; break;
case 0xff2030b0: code = 0x1e8b5; n_bits = 18; break;
case 0xff503080: code = 0x1e8d5; n_bits = 18; break;
case 0xff305090: code = 0x1e935; n_bits = 18; break;
case 0xffa04090: code = 0x1e955; n_bits = 18; break;
case 0xff907030: code = 0x1e9b5; n_bits = 18; break;
case 0xff6090f0: code = 0x1e9d5; n_bits = 18; break;
case 0xff60b030: code = 0x1ea35; n_bits = 18; break;
case 0xffe0b020: code = 0x1eab5; n_bits = 18; break;
case 0xffd02060: code = 0x1ead5; n_bits = 18; break;
case 0xffa09090: code = 0x1eb35; n_bits = 18; break;
case 0xffd08060: code = 0x1eb55; n_bits = 18; break;
case 0xffc03070: code = 0x1eba9; n_bits = 18; break;
case 0xff5060e0: code = 0x1ebb5; n_bits = 18; break;
case 0xff705000: code = 0x1ebd5; n_bits = 18; break;
case 0xffb08030: code = 0x1ec35; n_bits = 18; break;
case 0xffa05010: code = 0x1ecb5; n_bits = 18; break;
case 0xff60d050: code = 0x1ecd5; n_bits = 18; break;
case 0xff701060: code = 0x1ed35; n_bits = 18; break;
case 0xff305080: code = 0x1ed55; n_bits = 18; break;
case 0xffc0f030: code = 0x1edb5; n_bits = 18; break;
case 0xff505080: code = 0x1edd5; n_bits = 18; break;
case 0xff8020f0: code = 0x1ee35; n_bits = 18; break;
case 0xff0020f0: code = 0x1eeb5; n_bits = 18; break;
case 0xff50b0d0: code = 0x1eed5; n_bits = 18; break;
case 0xff1020f0: code = 0x1ef35; n_bits = 18; break;
case 0xff10b090: code = 0x1ef55; n_bits = 18; break;
case 0xff70e060: code = 0x1efa9; n_bits = 18; break;
case 0xff20b0d0: code = 0x1efb5; n_bits = 18; break;
case 0xff502010: code = 0x1efd5; n_bits = 18; break;
case 0xff3070c0: code = 0x1f035; n_bits = 18; break;
case 0xff80c060: code = 0x1f0b5; n_bits = 18; break;
case 0xffc0f080: code = 0x1f0d5; n_bits = 18; break;
case 0xff70c070: code = 0x1f135; n_bits = 18; break;
case 0xff6050a0: code = 0x1f155; n_bits = 18; break;
case 0xff1030f0: code = 0x1f1b5; n_bits = 18; break;
case 0xffc07000: code = 0x1f1d5; n_bits = 18; break;
case 0xfff0d040: code = 0x1f235; n_bits = 18; break;
case 0xffc0a070: code = 0x1f2b5; n_bits = 18; break;
case 0xffa010a0: code = 0x1f2d5; n_bits = 18; break;
case 0xff004070: code = 0x1f335; n_bits = 18; break;
case 0xffc0e0d0: code = 0x1f355; n_bits = 18; break;
case 0xff30d0e0: code = 0x1f3a9; n_bits = 18; break;
case 0xff106010: code = 0x1f3b5; n_bits = 18; break;
case 0xff70f0d0: code = 0x1f3d5; n_bits = 18; break;
case 0xff8010f0: code = 0x1f435; n_bits = 18; break;
case 0xff1070b0: code = 0x1f4b5; n_bits = 18; break;
case 0xff20e030: code = 0x1f4d5; n_bits = 18; break;
case 0xfff01000: code = 0x1f535; n_bits = 18; break;
case 0xffe060a0: code = 0x1f555; n_bits = 18; break;
case 0xff60a0b0: code = 0x1f5b5; n_bits = 18; break;
case 0xffe0a0e0: code = 0x1f5d5; n_bits = 18; break;
case 0xff4030d0: code = 0x1f635; n_bits = 18; break;
case 0xff800020: code = 0x1f6a9; n_bits = 18; break;
case 0xffd000c0: code = 0x1f6b5; n_bits = 18; break;
case 0xff10c0b0: code = 0x1f6d5; n_bits = 18; break;
case 0xff400040: code = 0x1f735; n_bits = 18; break;
case 0xffb06040: code = 0x1f755; n_bits = 18; break;
case 0xfff0c040: code = 0x1f7a9; n_bits = 18; break;
case 0xff20a010: code = 0x1f7b5; n_bits = 18; break;
case 0xff806000: code = 0x1f7d5; n_bits = 18; break;
case 0xff700020: code = 0x1f835; n_bits = 18; break;
case 0xff508050: code = 0x1f8b5; n_bits = 18; break;
case 0xff600050: code = 0x1f8d5; n_bits = 18; break;
case 0xffe0e070: code = 0x1f935; n_bits = 18; break;
case 0xfff0e0b0: code = 0x1f955; n_bits = 18; break;
case 0xffb0e030: code = 0x1f9b5; n_bits = 18; break;
case 0xff00c0c0: code = 0x1f9d5; n_bits = 18; break;
case 0xff10f0b0: code = 0x1fa35; n_bits = 18; break;
case 0xffe060c0: code = 0x1fab5; n_bits = 18; break;
case 0xff603010: code = 0x1fad5; n_bits = 18; break;
case 0xfff070a0: code = 0x1fb35; n_bits = 18; break;
case 0xfff0e000: code = 0x1fb55; n_bits = 18; break;
case 0xff2080c0: code = 0x1fba9; n_bits = 18; break;
case 0xff4060a0: code = 0x1fbb5; n_bits = 18; break;
case 0xff70f080: code = 0x1fbd5; n_bits = 18; break;
case 0xff103090: code = 0x1fc35; n_bits = 18; break;
case 0xff50d0e0: code = 0x1fcb5; n_bits = 18; break;
case 0xff20c070: code = 0x1fcd5; n_bits = 18; break;
case 0xffa000b0: code = 0x1fd35; n_bits = 18; break;
case 0xff7040a0: code = 0x1fd55; n_bits = 18; break;
case 0xffb0a000: code = 0x1fdb5; n_bits = 18; break;
case 0xff1040a0: code = 0x1fdd5; n_bits = 18; break;
case 0xff20d010: code = 0x1fe35; n_bits = 18; break;
case 0xff60c010: code = 0x1fea9; n_bits = 18; break;
case 0xff70b0d0: code = 0x1feb5; n_bits = 18; break;
case 0xff20f030: code = 0x1fed5; n_bits = 18; break;
case 0xff60f060: code = 0x1ff35; n_bits = 18; break;
case 0xff90f030: code = 0x1ff55; n_bits = 18; break;
case 0xff402080: code = 0x1ffa9; n_bits = 18; break;
case 0xff507060: code = 0x1ffb5; n_bits = 18; break;
case 0xff206060: code = 0x1ffd5; n_bits = 18; break;
case 0xff309080: code = 0x20035; n_bits = 18; break;
case 0xff60f0f0: code = 0x200b5; n_bits = 18; break;
case 0xff60b0d0: code = 0x200d5; n_bits = 18; break;
case 0xfff040c0: code = 0x20135; n_bits = 18; break;
case 0xff70a0f0: code = 0x20155; n_bits = 18; break;
case 0xfff040e0: code = 0x201b5; n_bits = 18; break;
case 0xff9010e0: code = 0x201d5; n_bits = 18; break;
case 0xff101010: code = 0x20235; n_bits = 18; break;
case 0xfff0f030: code = 0x202b5; n_bits = 18; break;
case 0xff80b040: code = 0x202d5; n_bits = 18; break;
case 0xffb07020: code = 0x20335; n_bits = 18; break;
case 0xff60a020: code = 0x20355; n_bits = 18; break;
case 0xffb0c050: code = 0x203a9; n_bits = 18; break;
case 0xffe03040: code = 0x203b5; n_bits = 18; break;
case 0xff00a020: code = 0x203d5; n_bits = 18; break;
case 0xfff09010: code = 0x20435; n_bits = 18; break;
case 0xfff0a050: code = 0x204b5; n_bits = 18; break;
case 0xff30f000: code = 0x204d5; n_bits = 18; break;
case 0xffd0a010: code = 0x20535; n_bits = 18; break;
case 0xffd0f0f0: code = 0x20555; n_bits = 18; break;
case 0xffe07070: code = 0x205b5; n_bits = 18; break;
case 0xff400060: code = 0x205d5; n_bits = 18; break;
case 0xff604050: code = 0x20635; n_bits = 18; break;
case 0xff60e0a0: code = 0x206b5; n_bits = 18; break;
case 0xffc0d0c0: code = 0x206d5; n_bits = 18; break;
case 0xff00e0b0: code = 0x20735; n_bits = 18; break;
case 0xff10e0f0: code = 0x20755; n_bits = 18; break;
case 0xff104060: code = 0x207a9; n_bits = 18; break;
case 0xff30c020: code = 0x207b5; n_bits = 18; break;
case 0xff404020: code = 0x207d5; n_bits = 18; break;
case 0xffa0d0c0: code = 0x20835; n_bits = 18; break;
case 0xff60d0a0: code = 0x208b5; n_bits = 18; break;
case 0xfff080c0: code = 0x208d5; n_bits = 18; break;
case 0xff30e0e0: code = 0x20935; n_bits = 18; break;
case 0xff50b020: code = 0x20955; n_bits = 18; break;
case 0xffd0f080: code = 0x209b5; n_bits = 18; break;
case 0xfff00040: code = 0x209d5; n_bits = 18; break;
case 0xffe030f0: code = 0x20a35; n_bits = 18; break;
case 0xffb06010: code = 0x20ab5; n_bits = 18; break;
case 0xff107020: code = 0x20ad5; n_bits = 18; break;
case 0xff20e010: code = 0x20b35; n_bits = 18; break;
case 0xffa06010: code = 0x20b55; n_bits = 18; break;
case 0xff80a0f0: code = 0x20ba9; n_bits = 18; break;
case 0xffe0a0b0: code = 0x20bb5; n_bits = 18; break;
case 0xffa07020: code = 0x20bd5; n_bits = 18; break;
case 0xff50b000: code = 0x20c35; n_bits = 18; break;
case 0xff3070d0: code = 0x20cb5; n_bits = 18; break;
case 0xff1000e0: code = 0x20cd5; n_bits = 18; break;
case 0xffb0c0f0: code = 0x20d35; n_bits = 18; break;
case 0xff404010: code = 0x20d55; n_bits = 18; break;
case 0xff40b0f0: code = 0x20db5; n_bits = 18; break;
case 0xfff05020: code = 0x20dd5; n_bits = 18; break;
case 0xffd0b010: code = 0x20e35; n_bits = 18; break;
case 0xff20c060: code = 0x20eb5; n_bits = 18; break;
case 0xfff04070: code = 0x20ed5; n_bits = 18; break;
case 0xff90b0a0: code = 0x20f35; n_bits = 18; break;
case 0xffb060a0: code = 0x20f55; n_bits = 18; break;
case 0xffd0d080: code = 0x20fa9; n_bits = 18; break;
case 0xff4040e0: code = 0x20fb5; n_bits = 18; break;
case 0xff509050: code = 0x20fd5; n_bits = 18; break;
case 0xff60e020: code = 0x21035; n_bits = 18; break;
case 0xffc01080: code = 0x210b5; n_bits = 18; break;
case 0xff109000: code = 0x210d5; n_bits = 18; break;
case 0xff9060e0: code = 0x21135; n_bits = 18; break;
case 0xffe050a0: code = 0x21155; n_bits = 18; break;
case 0xfff04010: code = 0x211b5; n_bits = 18; break;
case 0xffa09010: code = 0x211d5; n_bits = 18; break;
case 0xff509040: code = 0x21235; n_bits = 18; break;
case 0xffb08090: code = 0x212b5; n_bits = 18; break;
case 0xff60b090: code = 0x212d5; n_bits = 18; break;
case 0xffc040e0: code = 0x21335; n_bits = 18; break;
case 0xff5050f0: code = 0x21355; n_bits = 18; break;
case 0xffc050f0: code = 0x213a9; n_bits = 18; break;
case 0xff408090: code = 0x213b5; n_bits = 18; break;
case 0xff5030c0: code = 0x213d5; n_bits = 18; break;
case 0xff308050: code = 0x21435; n_bits = 18; break;
case 0xffd0a0c0: code = 0x214b5; n_bits = 18; break;
case 0xffe01000: code = 0x214d5; n_bits = 18; break;
case 0xffc070e0: code = 0x21535; n_bits = 18; break;
case 0xff908080: code = 0x21555; n_bits = 18; break;
case 0xff3010f0: code = 0x215b5; n_bits = 18; break;
case 0xffa060b0: code = 0x215d5; n_bits = 18; break;
case 0xff0040b0: code = 0x21635; n_bits = 18; break;
case 0xff809090: code = 0x216b5; n_bits = 18; break;
case 0xff30e0d0: code = 0x216d5; n_bits = 18; break;
case 0xffe04070: code = 0x21735; n_bits = 18; break;
case 0xffc0b070: code = 0x21755; n_bits = 18; break;
case 0xff50b0f0: code = 0x217a9; n_bits = 18; break;
case 0xff8070e0: code = 0x217b5; n_bits = 18; break;
case 0xff1050f0: code = 0x217d5; n_bits = 18; break;
case 0xff404090: code = 0x21835; n_bits = 18; break;
case 0xff60c090: code = 0x218b5; n_bits = 18; break;
case 0xff4090b0: code = 0x218d5; n_bits = 18; break;
case 0xff8090f0: code = 0x21935; n_bits = 18; break;
case 0xff30d0d0: code = 0x21955; n_bits = 18; break;
case 0xff200020: code = 0x219b5; n_bits = 18; break;
case 0xff00d090: code = 0x219d5; n_bits = 18; break;
case 0xff40d000: code = 0x21a35; n_bits = 18; break;
case 0xffa0a0e0: code = 0x21ab5; n_bits = 18; break;
case 0xff506040: code = 0x21ad5; n_bits = 18; break;
case 0xfff050d0: code = 0x21b35; n_bits = 18; break;
case 0xff40f050: code = 0x21b55; n_bits = 18; break;
case 0xff1010d0: code = 0x21ba9; n_bits = 18; break;
case 0xffd05030: code = 0x21bb5; n_bits = 18; break;
case 0xff7000c0: code = 0x21bd5; n_bits = 18; break;
case 0xffe01070: code = 0x21c35; n_bits = 18; break;
case 0xff60c070: code = 0x21cb5; n_bits = 18; break;
case 0xffd04010: code = 0x21cd5; n_bits = 18; break;
case 0xffc0c050: code = 0x21d35; n_bits = 18; break;
case 0xff205040: code = 0x21d55; n_bits = 18; break;
case 0xff404070: code = 0x21db5; n_bits = 18; break;
case 0xff30b0b0: code = 0x21dd5; n_bits = 18; break;
case 0xff5000a0: code = 0x21e35; n_bits = 18; break;
case 0xff706090: code = 0x21ea9; n_bits = 18; break;
case 0xff908070: code = 0x21eb5; n_bits = 18; break;
case 0xffa00070: code = 0x21ed5; n_bits = 18; break;
case 0xffb0a0f0: code = 0x21f35; n_bits = 18; break;
case 0xff4040d0: code = 0x21f55; n_bits = 18; break;
case 0xff501080: code = 0x21fa9; n_bits = 18; break;
case 0xff004050: code = 0x21fb5; n_bits = 18; break;
case 0xff408010: code = 0x21fd5; n_bits = 18; break;
case 0xff209030: code = 0x22035; n_bits = 18; break;
case 0xfff0e080: code = 0x220b5; n_bits = 18; break;
case 0xfff0a060: code = 0x220d5; n_bits = 18; break;
case 0xff105070: code = 0x22135; n_bits = 18; break;
case 0xff604000: code = 0x22155; n_bits = 18; break;
case 0xff80f090: code = 0x221b5; n_bits = 18; break;
case 0xff4090e0: code = 0x221d5; n_bits = 18; break;
case 0xff7050c0: code = 0x22235; n_bits = 18; break;
case 0xffc02030: code = 0x222b5; n_bits = 18; break;
case 0xffe060d0: code = 0x222d5; n_bits = 18; break;
case 0xffd05010: code = 0x22335; n_bits = 18; break;
case 0xffd0a0f0: code = 0x22355; n_bits = 18; break;
case 0xff803060: code = 0x223a9; n_bits = 18; break;
case 0xff302080: code = 0x223b5; n_bits = 18; break;
case 0xfff070c0: code = 0x223d5; n_bits = 18; break;
case 0xff000050: code = 0x22435; n_bits = 18; break;
case 0xff8090b0: code = 0x224b5; n_bits = 18; break;
case 0xff00a070: code = 0x224d5; n_bits = 18; break;
case 0xff9020b0: code = 0x22535; n_bits = 18; break;
case 0xff406090: code = 0x22555; n_bits = 18; break;
case 0xff7060d0: code = 0x225b5; n_bits = 18; break;
case 0xff5030f0: code = 0x225d5; n_bits = 18; break;
case 0xff20f0e0: code = 0x22635; n_bits = 18; break;
case 0xfff050c0: code = 0x226b5; n_bits = 18; break;
case 0xff408030: code = 0x226d5; n_bits = 18; break;
case 0xff502030: code = 0x22735; n_bits = 18; break;
case 0xffe01020: code = 0x22755; n_bits = 18; break;
case 0xffb0a0a0: code = 0x227a9; n_bits = 18; break;
case 0xff40c050: code = 0x227b5; n_bits = 18; break;
case 0xff80f0b0: code = 0x227d5; n_bits = 18; break;
case 0xff801000: code = 0x22835; n_bits = 18; break;
case 0xff7040c0: code = 0x228b5; n_bits = 18; break;
case 0xffd09010: code = 0x228d5; n_bits = 18; break;
case 0xffb02070: code = 0x22935; n_bits = 18; break;
case 0xff602040: code = 0x22955; n_bits = 18; break;
case 0xfff060c0: code = 0x229b5; n_bits = 18; break;
case 0xffd0a090: code = 0x229d5; n_bits = 18; break;
case 0xff105000: code = 0x22a35; n_bits = 18; break;
case 0xff80d0a0: code = 0x22ab5; n_bits = 18; break;
case 0xffc070d0: code = 0x22ad5; n_bits = 18; break;
case 0xffa050a0: code = 0x22b35; n_bits = 18; break;
case 0xffa010d0: code = 0x22b55; n_bits = 18; break;
case 0xff80a0b0: code = 0x22ba9; n_bits = 18; break;
case 0xff40e010: code = 0x22bb5; n_bits = 18; break;
case 0xff50f020: code = 0x22bd5; n_bits = 18; break;
case 0xffa02080: code = 0x22c35; n_bits = 18; break;
case 0xff304070: code = 0x22cb5; n_bits = 18; break;
case 0xff4080e0: code = 0x22cd5; n_bits = 18; break;
case 0xffa04070: code = 0x22d35; n_bits = 18; break;
case 0xffe0b000: code = 0x22d55; n_bits = 18; break;
case 0xffb05090: code = 0x22db5; n_bits = 18; break;
case 0xffc0b010: code = 0x22dd5; n_bits = 18; break;
case 0xff2050f0: code = 0x22e35; n_bits = 18; break;
case 0xff40a050: code = 0x22eb5; n_bits = 18; break;
case 0xff207070: code = 0x22ed5; n_bits = 18; break;
case 0xffb09090: code = 0x22f35; n_bits = 18; break;
case 0xffd04030: code = 0x22f55; n_bits = 18; break;
case 0xff508080: code = 0x22fa9; n_bits = 18; break;
case 0xfff00010: code = 0x22fb5; n_bits = 18; break;
case 0xffb08050: code = 0x22fd5; n_bits = 18; break;
case 0xffe0e030: code = 0x23035; n_bits = 18; break;
case 0xffa02010: code = 0x230b5; n_bits = 18; break;
case 0xff8080f0: code = 0x230d5; n_bits = 18; break;
case 0xff80b090: code = 0x23135; n_bits = 18; break;
case 0xff203020: code = 0x23155; n_bits = 18; break;
case 0xff10d020: code = 0x231b5; n_bits = 18; break;
case 0xff204010: code = 0x231d5; n_bits = 18; break;
case 0xff7030f0: code = 0x23235; n_bits = 18; break;
case 0xff9050c0: code = 0x232b5; n_bits = 18; break;
case 0xffd010a0: code = 0x232d5; n_bits = 18; break;
case 0xffc090e0: code = 0x23335; n_bits = 18; break;
case 0xff60b0c0: code = 0x23355; n_bits = 18; break;
case 0xff7000d0: code = 0x233a9; n_bits = 18; break;
case 0xffb08060: code = 0x233b5; n_bits = 18; break;
case 0xffd0c010: code = 0x233d5; n_bits = 18; break;
case 0xff400020: code = 0x23435; n_bits = 18; break;
case 0xff2020a0: code = 0x234b5; n_bits = 18; break;
case 0xff70f040: code = 0x234d5; n_bits = 18; break;
case 0xffe0c0d0: code = 0x23535; n_bits = 18; break;
case 0xffa0b010: code = 0x23555; n_bits = 18; break;
case 0xffd0b050: code = 0x235b5; n_bits = 18; break;
case 0xff9090c0: code = 0x235d5; n_bits = 18; break;
case 0xff901010: code = 0x23635; n_bits = 18; break;
case 0xff00f0d0: code = 0x236a9; n_bits = 18; break;
case 0xffe080e0: code = 0x236b5; n_bits = 18; break;
case 0xffe0d0c0: code = 0x236d5; n_bits = 18; break;
case 0xff00e0c0: code = 0x23735; n_bits = 18; break;
case 0xff2070b0: code = 0x23755; n_bits = 18; break;
case 0xffe03070: code = 0x237a9; n_bits = 18; break;
case 0xff5070f0: code = 0x237b5; n_bits = 18; break;
case 0xff5030d0: code = 0x237d5; n_bits = 18; break;
case 0xffd0b020: code = 0x23835; n_bits = 18; break;
case 0xff3030e0: code = 0x238b5; n_bits = 18; break;
case 0xff60c0c0: code = 0x238d5; n_bits = 18; break;
case 0xffb0c020: code = 0x23935; n_bits = 18; break;
case 0xffc0c060: code = 0x23955; n_bits = 18; break;
case 0xffc09080: code = 0x239b5; n_bits = 18; break;
case 0xff10b080: code = 0x239d5; n_bits = 18; break;
case 0xffb0c040: code = 0x23a35; n_bits = 18; break;
case 0xff101080: code = 0x23ab5; n_bits = 18; break;
case 0xff50d0f0: code = 0x23ad5; n_bits = 18; break;
case 0xff90e010: code = 0x23b35; n_bits = 18; break;
case 0xff70e040: code = 0x23b55; n_bits = 18; break;
case 0xffb00040: code = 0x23ba9; n_bits = 18; break;
case 0xffc0a030: code = 0x23bb5; n_bits = 18; break;
case 0xff409020: code = 0x23bd5; n_bits = 18; break;
case 0xfff0e0e0: code = 0x23c35; n_bits = 18; break;
case 0xff600000: code = 0x23cb5; n_bits = 18; break;
case 0xfff0e070: code = 0x23cd5; n_bits = 18; break;
case 0xff30c0f0: code = 0x23d35; n_bits = 18; break;
case 0xff805010: code = 0x23d55; n_bits = 18; break;
case 0xfff0c070: code = 0x23db5; n_bits = 18; break;
case 0xffc0a040: code = 0x23dd5; n_bits = 18; break;
case 0xffb040b0: code = 0x23e35; n_bits = 18; break;
case 0xffe06060: code = 0x23ea9; n_bits = 18; break;
case 0xff905010: code = 0x23eb5; n_bits = 18; break;
case 0xff2060a0: code = 0x23ed5; n_bits = 18; break;
case 0xff8050a0: code = 0x23f35; n_bits = 18; break;
case 0xffa00040: code = 0x23f55; n_bits = 18; break;
case 0xff60a0c0: code = 0x23fa9; n_bits = 18; break;
case 0xffe040e0: code = 0x23fb5; n_bits = 18; break;
case 0xff90e0c0: code = 0x23fd5; n_bits = 18; break;
case 0xff90a0c0: code = 0x24035; n_bits = 18; break;
case 0xff905040: code = 0x240b5; n_bits = 18; break;
case 0xffb0a0d0: code = 0x240d5; n_bits = 18; break;
case 0xff008030: code = 0x24135; n_bits = 18; break;
case 0xff7040d0: code = 0x24155; n_bits = 18; break;
case 0xff3080d0: code = 0x241b5; n_bits = 18; break;
case 0xff4000d0: code = 0x241d5; n_bits = 18; break;
case 0xff003080: code = 0x24235; n_bits = 18; break;
case 0xff0030c0: code = 0x242b5; n_bits = 18; break;
case 0xff309060: code = 0x242d5; n_bits = 18; break;
case 0xff7030c0: code = 0x24335; n_bits = 18; break;
case 0xff40b060: code = 0x24355; n_bits = 18; break;
case 0xff2020d0: code = 0x243a9; n_bits = 18; break;
case 0xff50a050: code = 0x243b5; n_bits = 18; break;
case 0xffb05010: code = 0x243d5; n_bits = 18; break;
case 0xffa07030: code = 0x24435; n_bits = 18; break;
case 0xffc07030: code = 0x244b5; n_bits = 18; break;
case 0xff805090: code = 0x244d5; n_bits = 18; break;
case 0xff2020e0: code = 0x24535; n_bits = 18; break;
case 0xffe00070: code = 0x24555; n_bits = 18; break;
case 0xffb04050: code = 0x245b5; n_bits = 18; break;
case 0xff003090: code = 0x245d5; n_bits = 18; break;
case 0xffb01090: code = 0x24635; n_bits = 18; break;
case 0xffb070f0: code = 0x246b5; n_bits = 18; break;
case 0xff40d060: code = 0x246d5; n_bits = 18; break;
case 0xffe0f020: code = 0x24735; n_bits = 18; break;
case 0xff0080f0: code = 0x24755; n_bits = 18; break;
case 0xff10d070: code = 0x247a9; n_bits = 18; break;
case 0xfff0c080: code = 0x247b5; n_bits = 18; break;
case 0xff20e070: code = 0x247d5; n_bits = 18; break;
case 0xff50c030: code = 0x24835; n_bits = 18; break;
case 0xffe08080: code = 0x248b5; n_bits = 18; break;
case 0xffb01040: code = 0x248d5; n_bits = 18; break;
case 0xff10a0a0: code = 0x24935; n_bits = 18; break;
case 0xffc04020: code = 0x24955; n_bits = 18; break;
case 0xffe00000: code = 0x249b5; n_bits = 18; break;
case 0xff503050: code = 0x249d5; n_bits = 18; break;
case 0xff5010d0: code = 0x24a35; n_bits = 18; break;
case 0xff10c030: code = 0x24ab5; n_bits = 18; break;
case 0xff903040: code = 0x24ad5; n_bits = 18; break;
case 0xff40d0f0: code = 0x24b35; n_bits = 18; break;
case 0xff306010: code = 0x24b55; n_bits = 18; break;
case 0xffa0f060: code = 0x24ba9; n_bits = 18; break;
case 0xff000040: code = 0x24bb5; n_bits = 18; break;
case 0xff90b0f0: code = 0x24bd5; n_bits = 18; break;
case 0xffb000e0: code = 0x24c35; n_bits = 18; break;
case 0xff503030: code = 0x24cb5; n_bits = 18; break;
case 0xffd0e010: code = 0x24cd5; n_bits = 18; break;
case 0xffc0d020: code = 0x24d35; n_bits = 18; break;
case 0xff205050: code = 0x24d55; n_bits = 18; break;
case 0xff50c010: code = 0x24db5; n_bits = 18; break;
case 0xff5080e0: code = 0x24dd5; n_bits = 18; break;
case 0xff7020c0: code = 0x24e35; n_bits = 18; break;
case 0xff90c030: code = 0x24eb5; n_bits = 18; break;
case 0xff60e0f0: code = 0x24ed5; n_bits = 18; break;
case 0xff9010c0: code = 0x24f35; n_bits = 18; break;
case 0xff10c060: code = 0x24f55; n_bits = 18; break;
case 0xff401050: code = 0x24fa9; n_bits = 18; break;
case 0xff10b0a0: code = 0x24fb5; n_bits = 18; break;
case 0xffe0b070: code = 0x24fd5; n_bits = 18; break;
case 0xff603070: code = 0x25035; n_bits = 18; break;
case 0xffd0e0f0: code = 0x250b5; n_bits = 18; break;
case 0xff804030: code = 0x250d5; n_bits = 18; break;
case 0xffb0e0b0: code = 0x25135; n_bits = 18; break;
case 0xff202000: code = 0x25155; n_bits = 18; break;
case 0xff80e070: code = 0x251b5; n_bits = 18; break;
case 0xffa070c0: code = 0x251d5; n_bits = 18; break;
case 0xff1020b0: code = 0x25235; n_bits = 18; break;
case 0xffc0b040: code = 0x252b5; n_bits = 18; break;
case 0xfff01080: code = 0x252d5; n_bits = 18; break;
case 0xff30b0f0: code = 0x25335; n_bits = 18; break;
case 0xff80a080: code = 0x25355; n_bits = 18; break;
case 0xffd00080: code = 0x253a9; n_bits = 18; break;
case 0xffd0d030: code = 0x253b5; n_bits = 18; break;
case 0xfff010e0: code = 0x253d5; n_bits = 18; break;
case 0xffa03020: code = 0x25435; n_bits = 18; break;
case 0xffc0f070: code = 0x254b5; n_bits = 18; break;
case 0xff706030: code = 0x254d5; n_bits = 18; break;
case 0xff703000: code = 0x25535; n_bits = 18; break;
case 0xff7080e0: code = 0x25555; n_bits = 18; break;
case 0xff5070d0: code = 0x255b5; n_bits = 18; break;
case 0xff304040: code = 0x255d5; n_bits = 18; break;
case 0xffe0c0f0: code = 0x25635; n_bits = 18; break;
case 0xff400010: code = 0x256b5; n_bits = 18; break;
case 0xffc0c000: code = 0x256d5; n_bits = 18; break;
case 0xff60b070: code = 0x25735; n_bits = 18; break;
case 0xff902030: code = 0x25755; n_bits = 18; break;
case 0xfff070b0: code = 0x257a9; n_bits = 18; break;
case 0xffe060f0: code = 0x257b5; n_bits = 18; break;
case 0xff00c050: code = 0x257d5; n_bits = 18; break;
case 0xff104070: code = 0x25835; n_bits = 18; break;
case 0xff006050: code = 0x258b5; n_bits = 18; break;
case 0xffa0a0b0: code = 0x258d5; n_bits = 18; break;
case 0xff40b0b0: code = 0x25935; n_bits = 18; break;
case 0xff70b080: code = 0x25955; n_bits = 18; break;
case 0xff80a070: code = 0x259b5; n_bits = 18; break;
case 0xff40f020: code = 0x259d5; n_bits = 18; break;
case 0xff9000f0: code = 0x25a35; n_bits = 18; break;
case 0xfff0b0f0: code = 0x25ab5; n_bits = 18; break;
case 0xffb0a030: code = 0x25ad5; n_bits = 18; break;
case 0xffa0b090: code = 0x25b35; n_bits = 18; break;
case 0xff10f0c0: code = 0x25b55; n_bits = 18; break;
case 0xfff0f0a0: code = 0x25ba9; n_bits = 18; break;
case 0xffa02060: code = 0x25bb5; n_bits = 18; break;
case 0xffc06010: code = 0x25bd5; n_bits = 18; break;
case 0xffe05080: code = 0x25c35; n_bits = 18; break;
case 0xff4080d0: code = 0x25cb5; n_bits = 18; break;
case 0xff103030: code = 0x25cd5; n_bits = 18; break;
case 0xffc02070: code = 0x25d35; n_bits = 18; break;
case 0xff604070: code = 0x25d55; n_bits = 18; break;
case 0xff102040: code = 0x25db5; n_bits = 18; break;
case 0xff90b090: code = 0x25dd5; n_bits = 18; break;
case 0xff207060: code = 0x25e35; n_bits = 18; break;
case 0xffa080e0: code = 0x25ea9; n_bits = 18; break;
case 0xff60f030: code = 0x25eb5; n_bits = 18; break;
case 0xff8010b0: code = 0x25ed5; n_bits = 18; break;
case 0xff4010e0: code = 0x25f35; n_bits = 18; break;
case 0xfff030e0: code = 0x25f55; n_bits = 18; break;
case 0xffb090d0: code = 0x25fa9; n_bits = 18; break;
case 0xfff09020: code = 0x25fb5; n_bits = 18; break;
case 0xffb080b0: code = 0x25fd5; n_bits = 18; break;
case 0xff20a0f0: code = 0x26035; n_bits = 18; break;
case 0xff40d040: code = 0x260b5; n_bits = 18; break;
case 0xffb0e0e0: code = 0x260d5; n_bits = 18; break;
case 0xffd04060: code = 0x26135; n_bits = 18; break;
case 0xffa07000: code = 0x26155; n_bits = 18; break;
case 0xfff0f010: code = 0x261b5; n_bits = 18; break;
case 0xff508000: code = 0x261d5; n_bits = 18; break;
case 0xffc0a000: code = 0x26235; n_bits = 18; break;
case 0xff8040b0: code = 0x262b5; n_bits = 18; break;
case 0xff80a050: code = 0x262d5; n_bits = 18; break;
case 0xff40f090: code = 0x26335; n_bits = 18; break;
case 0xff00d0e0: code = 0x26355; n_bits = 18; break;
case 0xff5080a0: code = 0x263a9; n_bits = 18; break;
case 0xff1030c0: code = 0x263b5; n_bits = 18; break;
case 0xff10a050: code = 0x263d5; n_bits = 18; break;
case 0xff601090: code = 0x26435; n_bits = 18; break;
case 0xff306030: code = 0x264b5; n_bits = 18; break;
case 0xffa0a080: code = 0x264d5; n_bits = 18; break;
case 0xff007070: code = 0x26535; n_bits = 18; break;
case 0xff4010c0: code = 0x26555; n_bits = 18; break;
case 0xff60e000: code = 0x265b5; n_bits = 18; break;
case 0xff800080: code = 0x265d5; n_bits = 18; break;
case 0xffd09060: code = 0x26635; n_bits = 18; break;
case 0xff204020: code = 0x266b5; n_bits = 18; break;
case 0xff504080: code = 0x266d5; n_bits = 18; break;
case 0xffe0e050: code = 0x26735; n_bits = 18; break;
case 0xff90e0a0: code = 0x26755; n_bits = 18; break;
case 0xffa0c000: code = 0x267a9; n_bits = 18; break;
case 0xff10b020: code = 0x267b5; n_bits = 18; break;
case 0xff50d060: code = 0x267d5; n_bits = 18; break;
case 0xffe06070: code = 0x26835; n_bits = 18; break;
case 0xffb0b0e0: code = 0x268b5; n_bits = 18; break;
case 0xff70b050: code = 0x268d5; n_bits = 18; break;
case 0xff009030: code = 0x26935; n_bits = 18; break;
case 0xff403080: code = 0x26955; n_bits = 18; break;
case 0xffb0f0f0: code = 0x269b5; n_bits = 18; break;
case 0xff903010: code = 0x269d5; n_bits = 18; break;
case 0xff2040a0: code = 0x26a35; n_bits = 18; break;
case 0xff40e040: code = 0x26ab5; n_bits = 18; break;
case 0xfff080a0: code = 0x26ad5; n_bits = 18; break;
case 0xff1000f0: code = 0x26b35; n_bits = 18; break;
case 0xff60e010: code = 0x26b55; n_bits = 18; break;
case 0xff300090: code = 0x26ba9; n_bits = 18; break;
case 0xffc080f0: code = 0x26bb5; n_bits = 18; break;
case 0xff10f030: code = 0x26bd5; n_bits = 18; break;
case 0xffe0b050: code = 0x26c35; n_bits = 18; break;
case 0xffc0d0d0: code = 0x26cb5; n_bits = 18; break;
case 0xff10f0a0: code = 0x26cd5; n_bits = 18; break;
case 0xff900020: code = 0x26d35; n_bits = 18; break;
case 0xffb040c0: code = 0x26d55; n_bits = 18; break;
case 0xff8080a0: code = 0x26db5; n_bits = 18; break;
case 0xff1030e0: code = 0x26dd5; n_bits = 18; break;
case 0xffb0e0d0: code = 0x26e35; n_bits = 18; break;
case 0xff50f000: code = 0x26eb5; n_bits = 18; break;
case 0xff90d0c0: code = 0x26ed5; n_bits = 18; break;
case 0xff6070b0: code = 0x26f35; n_bits = 18; break;
case 0xff009050: code = 0x26f55; n_bits = 18; break;
case 0xffc08050: code = 0x26fa9; n_bits = 18; break;
case 0xff60a090: code = 0x26fb5; n_bits = 18; break;
case 0xff8040e0: code = 0x26fd5; n_bits = 18; break;
case 0xff40c000: code = 0x27035; n_bits = 18; break;
case 0xff003050: code = 0x270b5; n_bits = 18; break;
case 0xff30c030: code = 0x270d5; n_bits = 18; break;
case 0xff40a010: code = 0x27135; n_bits = 18; break;
case 0xfff060e0: code = 0x27155; n_bits = 18; break;
case 0xffa090c0: code = 0x271b5; n_bits = 18; break;
case 0xffe0f0c0: code = 0x271d5; n_bits = 18; break;
case 0xff3090d0: code = 0x27235; n_bits = 18; break;
case 0xff7010d0: code = 0x272b5; n_bits = 18; break;
case 0xfff09070: code = 0x272d5; n_bits = 18; break;
case 0xff60a0e0: code = 0x27335; n_bits = 18; break;
case 0xff9010a0: code = 0x27355; n_bits = 18; break;
case 0xff6000e0: code = 0x273a9; n_bits = 18; break;
case 0xff408060: code = 0x273b5; n_bits = 18; break;
case 0xff90e090: code = 0x273d5; n_bits = 18; break;
case 0xff106030: code = 0x27435; n_bits = 18; break;
case 0xffe0c050: code = 0x274b5; n_bits = 18; break;
case 0xffc01070: code = 0x274d5; n_bits = 18; break;
case 0xff303000: code = 0x27535; n_bits = 18; break;
case 0xfff050b0: code = 0x27555; n_bits = 18; break;
case 0xff608000: code = 0x275b5; n_bits = 18; break;
case 0xff1040b0: code = 0x275d5; n_bits = 18; break;
case 0xffa0a090: code = 0x27635; n_bits = 18; break;
case 0xff7000e0: code = 0x276a9; n_bits = 18; break;
case 0xff708010: code = 0x276b5; n_bits = 18; break;
case 0xffc020d0: code = 0x276d5; n_bits = 18; break;
case 0xff608010: code = 0x27735; n_bits = 18; break;
case 0xffe09060: code = 0x27755; n_bits = 18; break;
case 0xffd080f0: code = 0x277a9; n_bits = 18; break;
case 0xffd0c000: code = 0x277b5; n_bits = 18; break;
case 0xff9000e0: code = 0x277d5; n_bits = 18; break;
case 0xffa03050: code = 0x27835; n_bits = 18; break;
case 0xff707010: code = 0x278b5; n_bits = 18; break;
case 0xff00b040: code = 0x278d5; n_bits = 18; break;
case 0xff50d070: code = 0x27935; n_bits = 18; break;
case 0xff0020a0: code = 0x27955; n_bits = 18; break;
case 0xff802000: code = 0x279b5; n_bits = 18; break;
case 0xffd00060: code = 0x279d5; n_bits = 18; break;
case 0xff803010: code = 0x27a35; n_bits = 18; break;
case 0xff20e0f0: code = 0x27ab5; n_bits = 18; break;
case 0xff002010: code = 0x27ad5; n_bits = 18; break;
case 0xff704050: code = 0x27b35; n_bits = 18; break;
case 0xff407010: code = 0x27b55; n_bits = 18; break;
case 0xff10e040: code = 0x27ba9; n_bits = 18; break;
case 0xff605060: code = 0x27bb5; n_bits = 18; break;
case 0xff8000f0: code = 0x27bd5; n_bits = 18; break;
case 0xff10e050: code = 0x27c35; n_bits = 18; break;
case 0xff401040: code = 0x27cb5; n_bits = 18; break;
case 0xff50e0c0: code = 0x27cd5; n_bits = 18; break;
case 0xffe0c0a0: code = 0x27d35; n_bits = 18; break;
case 0xff10c070: code = 0x27d55; n_bits = 18; break;
case 0xff0020d0: code = 0x27db5; n_bits = 18; break;
case 0xff303060: code = 0x27dd5; n_bits = 18; break;
case 0xff50f060: code = 0x27e35; n_bits = 18; break;
case 0xffa05080: code = 0x27ea9; n_bits = 18; break;
case 0xfff080f0: code = 0x27eb5; n_bits = 18; break;
case 0xff906070: code = 0x27ed5; n_bits = 18; break;
case 0xfff05070: code = 0x27f35; n_bits = 18; break;
case 0xff006060: code = 0x27f55; n_bits = 18; break;
case 0xff106080: code = 0x27fa9; n_bits = 18; break;
case 0xffc0f010: code = 0x27fb5; n_bits = 18; break;
case 0xff9080c0: code = 0x27fd5; n_bits = 18; break;
case 0xffe090d0: code = 0x28035; n_bits = 18; break;
case 0xff50b090: code = 0x280b5; n_bits = 18; break;
case 0xff3080b0: code = 0x280d5; n_bits = 18; break;
case 0xff7080f0: code = 0x28135; n_bits = 18; break;
case 0xff305010: code = 0x28155; n_bits = 18; break;
case 0xff90c0b0: code = 0x281b5; n_bits = 18; break;
case 0xff505010: code = 0x281d5; n_bits = 18; break;
case 0xff0070a0: code = 0x28235; n_bits = 18; break;
case 0xff701020: code = 0x282b5; n_bits = 18; break;
case 0xffa00020: code = 0x282d5; n_bits = 18; break;
case 0xff908060: code = 0x28335; n_bits = 18; break;
case 0xffa080a0: code = 0x28355; n_bits = 18; break;
case 0xffe05090: code = 0x283a9; n_bits = 18; break;
case 0xffd0d0d0: code = 0x283b5; n_bits = 18; break;
case 0xff602050: code = 0x283d5; n_bits = 18; break;
case 0xff50c050: code = 0x28435; n_bits = 18; break;
case 0xffb00020: code = 0x284b5; n_bits = 18; break;
case 0xfff00030: code = 0x284d5; n_bits = 18; break;
case 0xff004000: code = 0x28535; n_bits = 18; break;
case 0xff301090: code = 0x28555; n_bits = 18; break;
case 0xffd03010: code = 0x285b5; n_bits = 18; break;
case 0xff908020: code = 0x285d5; n_bits = 18; break;
case 0xffe0d060: code = 0x28635; n_bits = 18; break;
case 0xffd0c040: code = 0x286b5; n_bits = 18; break;
case 0xff404050: code = 0x286d5; n_bits = 18; break;
case 0xff203090: code = 0x28735; n_bits = 18; break;
case 0xff503010: code = 0x28755; n_bits = 18; break;
case 0xff104020: code = 0x287a9; n_bits = 18; break;
case 0xff0070b0: code = 0x287b5; n_bits = 18; break;
case 0xffa05060: code = 0x287d5; n_bits = 18; break;
case 0xffb0e000: code = 0x28835; n_bits = 18; break;
case 0xff8050b0: code = 0x288b5; n_bits = 18; break;
case 0xff60b020: code = 0x288d5; n_bits = 18; break;
case 0xffd0c0a0: code = 0x28935; n_bits = 18; break;
case 0xff303050: code = 0x28955; n_bits = 18; break;
case 0xfff04060: code = 0x289b5; n_bits = 18; break;
case 0xffd00090: code = 0x289d5; n_bits = 18; break;
case 0xffe07020: code = 0x28a35; n_bits = 18; break;
case 0xff3090b0: code = 0x28ab5; n_bits = 18; break;
case 0xff903030: code = 0x28ad5; n_bits = 18; break;
case 0xff1000c0: code = 0x28b35; n_bits = 18; break;
case 0xff807050: code = 0x28b55; n_bits = 18; break;
case 0xffc08030: code = 0x28ba9; n_bits = 18; break;
case 0xff90f020: code = 0x28bb5; n_bits = 18; break;
case 0xff800050: code = 0x28bd5; n_bits = 18; break;
case 0xffa0c0c0: code = 0x28c35; n_bits = 18; break;
case 0xffd09000: code = 0x28cb5; n_bits = 18; break;
case 0xff00f070: code = 0x28cd5; n_bits = 18; break;
case 0xff200050: code = 0x28d35; n_bits = 18; break;
case 0xffc070b0: code = 0x28d55; n_bits = 18; break;
case 0xffa010c0: code = 0x28db5; n_bits = 18; break;
case 0xffd06060: code = 0x28dd5; n_bits = 18; break;
case 0xffd070c0: code = 0x28e35; n_bits = 18; break;
case 0xfff08090: code = 0x28eb5; n_bits = 18; break;
case 0xffd050b0: code = 0x28ed5; n_bits = 18; break;
case 0xff201080: code = 0x28f35; n_bits = 18; break;
case 0xff00c0b0: code = 0x28f55; n_bits = 18; break;
case 0xff7030a0: code = 0x28fa9; n_bits = 18; break;
case 0xff30a060: code = 0x28fb5; n_bits = 18; break;
case 0xfff0f0d0: code = 0x28fd5; n_bits = 18; break;
case 0xff5090e0: code = 0x29035; n_bits = 18; break;
case 0xff70c030: code = 0x290b5; n_bits = 18; break;
case 0xffa06020: code = 0x290d5; n_bits = 18; break;
case 0xff30a080: code = 0x29135; n_bits = 18; break;
case 0xffe0d0b0: code = 0x29155; n_bits = 18; break;
case 0xffa0d030: code = 0x291b5; n_bits = 18; break;
case 0xff80e020: code = 0x291d5; n_bits = 18; break;
case 0xfff0c050: code = 0x29235; n_bits = 18; break;
case 0xffe0a000: code = 0x292b5; n_bits = 18; break;
case 0xff4030c0: code = 0x292d5; n_bits = 18; break;
case 0xffd0e020: code = 0x29335; n_bits = 18; break;
case 0xff602020: code = 0x29355; n_bits = 18; break;
case 0xff20c000: code = 0x293a9; n_bits = 18; break;
case 0xff00c0d0: code = 0x293b5; n_bits = 18; break;
case 0xff403060: code = 0x293d5; n_bits = 18; break;
case 0xff100080: code = 0x29435; n_bits = 18; break;
case 0xff5000e0: code = 0x294b5; n_bits = 18; break;
case 0xffa03080: code = 0x294d5; n_bits = 18; break;
case 0xff90b0c0: code = 0x29535; n_bits = 18; break;
case 0xff9070a0: code = 0x29555; n_bits = 18; break;
case 0xffd02040: code = 0x295b5; n_bits = 18; break;
case 0xff607060: code = 0x295d5; n_bits = 18; break;
case 0xff504060: code = 0x29635; n_bits = 18; break;
case 0xff7030d0: code = 0x296b5; n_bits = 18; break;
case 0xffc0a0c0: code = 0x296d5; n_bits = 18; break;
case 0xffb0d0d0: code = 0x29735; n_bits = 18; break;
case 0xffa0c0b0: code = 0x29755; n_bits = 18; break;
case 0xff304080: code = 0x297a9; n_bits = 18; break;
case 0xff601020: code = 0x297b5; n_bits = 18; break;
case 0xfff010f0: code = 0x297d5; n_bits = 18; break;
case 0xff40d0a0: code = 0x29835; n_bits = 18; break;
case 0xff801070: code = 0x298b5; n_bits = 18; break;
case 0xff607020: code = 0x298d5; n_bits = 18; break;
case 0xffb0d0c0: code = 0x29935; n_bits = 18; break;
case 0xff105010: code = 0x29955; n_bits = 18; break;
case 0xff30a0f0: code = 0x299b5; n_bits = 18; break;
case 0xff202070: code = 0x299d5; n_bits = 18; break;
case 0xff00e0f0: code = 0x29a35; n_bits = 18; break;
case 0xff802020: code = 0x29ab5; n_bits = 18; break;
case 0xffe0d050: code = 0x29ad5; n_bits = 18; break;
case 0xffb02020: code = 0x29b35; n_bits = 18; break;
case 0xff703020: code = 0x29b55; n_bits = 18; break;
case 0xff00a0d0: code = 0x29ba9; n_bits = 18; break;
case 0xff50e040: code = 0x29bb5; n_bits = 18; break;
case 0xffe0e0d0: code = 0x29bd5; n_bits = 18; break;
case 0xff20d050: code = 0x29c35; n_bits = 18; break;
case 0xff10f090: code = 0x29cb5; n_bits = 18; break;
case 0xffb05050: code = 0x29cd5; n_bits = 18; break;
case 0xff50c070: code = 0x29d35; n_bits = 18; break;
case 0xfff01070: code = 0x29d55; n_bits = 18; break;
case 0xffd090b0: code = 0x29db5; n_bits = 18; break;
case 0xff10c0f0: code = 0x29dd5; n_bits = 18; break;
case 0xff40f030: code = 0x29e35; n_bits = 18; break;
case 0xff30d020: code = 0x29ea9; n_bits = 18; break;
case 0xff7000a0: code = 0x29eb5; n_bits = 18; break;
case 0xffd01060: code = 0x29ed5; n_bits = 18; break;
case 0xff506020: code = 0x29f35; n_bits = 18; break;
case 0xffd0d040: code = 0x29f55; n_bits = 18; break;
case 0xff3020c0: code = 0x29fa9; n_bits = 18; break;
case 0xff5010b0: code = 0x29fb5; n_bits = 18; break;
case 0xffd090a0: code = 0x29fd5; n_bits = 18; break;
case 0xff306020: code = 0x2a035; n_bits = 18; break;
case 0xffe0a020: code = 0x2a0b5; n_bits = 18; break;
case 0xff102030: code = 0x2a0d5; n_bits = 18; break;
case 0xfff03020: code = 0x2a135; n_bits = 18; break;
case 0xff30d0f0: code = 0x2a155; n_bits = 18; break;
case 0xff6070c0: code = 0x2a1b5; n_bits = 18; break;
case 0xff90a030: code = 0x2a1d5; n_bits = 18; break;
case 0xffa0b0f0: code = 0x2a235; n_bits = 18; break;
case 0xffc0c0f0: code = 0x2a2b5; n_bits = 18; break;
case 0xff706010: code = 0x2a2d5; n_bits = 18; break;
case 0xffb06050: code = 0x2a335; n_bits = 18; break;
case 0xffc06090: code = 0x2a355; n_bits = 18; break;
case 0xffd01010: code = 0x2a3a9; n_bits = 18; break;
case 0xffb09030: code = 0x2a3b5; n_bits = 18; break;
case 0xff5080d0: code = 0x2a3d5; n_bits = 18; break;
case 0xff306090: code = 0x2a435; n_bits = 18; break;
case 0xff80a0a0: code = 0x2a4b5; n_bits = 18; break;
case 0xff604030: code = 0x2a4d5; n_bits = 18; break;
case 0xff3090c0: code = 0x2a535; n_bits = 18; break;
case 0xff2070d0: code = 0x2a555; n_bits = 18; break;
case 0xffe0e010: code = 0x2a5b5; n_bits = 18; break;
case 0xffa08050: code = 0x2a5d5; n_bits = 18; break;
case 0xfff060a0: code = 0x2a635; n_bits = 18; break;
case 0xfff0a030: code = 0x2a6b5; n_bits = 18; break;
case 0xff0060d0: code = 0x2a6d5; n_bits = 18; break;
case 0xff50b040: code = 0x2a735; n_bits = 18; break;
case 0xff70a060: code = 0x2a755; n_bits = 18; break;
case 0xff3070e0: code = 0x2a7a9; n_bits = 18; break;
case 0xff80b0e0: code = 0x2a7b5; n_bits = 18; break;
case 0xff703060: code = 0x2a7d5; n_bits = 18; break;
case 0xff50f040: code = 0x2a835; n_bits = 18; break;
case 0xff3090a0: code = 0x2a8b5; n_bits = 18; break;
case 0xff803030: code = 0x2a8d5; n_bits = 18; break;
case 0xff403040: code = 0x2a935; n_bits = 18; break;
case 0xffa0e070: code = 0x2a955; n_bits = 18; break;
case 0xffd0e0b0: code = 0x2a9b5; n_bits = 18; break;
case 0xffc06030: code = 0x2a9d5; n_bits = 18; break;
case 0xfff0a0b0: code = 0x2aa35; n_bits = 18; break;
case 0xffb0f020: code = 0x2aab5; n_bits = 18; break;
case 0xff30a0e0: code = 0x2aad5; n_bits = 18; break;
case 0xffa0e080: code = 0x2ab35; n_bits = 18; break;
case 0xffb07040: code = 0x2ab55; n_bits = 18; break;
case 0xff106000: code = 0x2aba9; n_bits = 18; break;
case 0xffa06040: code = 0x2abb5; n_bits = 18; break;
case 0xffb0c080: code = 0x2abd5; n_bits = 18; break;
case 0xff703030: code = 0x2ac35; n_bits = 18; break;
case 0xff30d080: code = 0x2acb5; n_bits = 18; break;
case 0xff906090: code = 0x2acd5; n_bits = 18; break;
case 0xff20d080: code = 0x2ad35; n_bits = 18; break;
case 0xff80f0a0: code = 0x2ad55; n_bits = 18; break;
case 0xff003060: code = 0x2adb5; n_bits = 18; break;
case 0xffe090f0: code = 0x2add5; n_bits = 18; break;
case 0xffa0d0b0: code = 0x2ae35; n_bits = 18; break;
case 0xff609080: code = 0x2aeb5; n_bits = 18; break;
case 0xfff020c0: code = 0x2aed5; n_bits = 18; break;
case 0xffa070a0: code = 0x2af35; n_bits = 18; break;
case 0xff30b0a0: code = 0x2af55; n_bits = 18; break;
case 0xffe07010: code = 0x2afa9; n_bits = 18; break;
case 0xffd01050: code = 0x2afb5; n_bits = 18; break;
case 0xff701050: code = 0x2afd5; n_bits = 18; break;
case 0xffd030d0: code = 0x2b035; n_bits = 18; break;
case 0xff30e0b0: code = 0x2b0b5; n_bits = 18; break;
case 0xff00a010: code = 0x2b0d5; n_bits = 18; break;
case 0xffd060f0: code = 0x2b135; n_bits = 18; break;
case 0xffb0f0c0: code = 0x2b155; n_bits = 18; break;
case 0xff6050d0: code = 0x2b1b5; n_bits = 18; break;
case 0xff803050: code = 0x2b1d5; n_bits = 18; break;
case 0xff60c0f0: code = 0x2b235; n_bits = 18; break;
case 0xff1090a0: code = 0x2b2b5; n_bits = 18; break;
case 0xffb020e0: code = 0x2b2d5; n_bits = 18; break;
case 0xff6010d0: code = 0x2b335; n_bits = 18; break;
case 0xff309070: code = 0x2b355; n_bits = 18; break;
case 0xff100030: code = 0x2b3a9; n_bits = 18; break;
case 0xff906040: code = 0x2b3b5; n_bits = 18; break;
case 0xffb0d050: code = 0x2b3d5; n_bits = 18; break;
case 0xff201060: code = 0x2b435; n_bits = 18; break;
case 0xffb01030: code = 0x2b4b5; n_bits = 18; break;
case 0xff507070: code = 0x2b4d5; n_bits = 18; break;
case 0xffc04010: code = 0x2b535; n_bits = 18; break;
case 0xff105020: code = 0x2b555; n_bits = 18; break;
case 0xff50f070: code = 0x2b5b5; n_bits = 18; break;
case 0xff605050: code = 0x2b5d5; n_bits = 18; break;
case 0xff10f0f0: code = 0x2b635; n_bits = 18; break;
case 0xff00c010: code = 0x2b6a9; n_bits = 18; break;
case 0xff90d000: code = 0x2b6b5; n_bits = 18; break;
case 0xff30b070: code = 0x2b6d5; n_bits = 18; break;
case 0xffe0e020: code = 0x2b735; n_bits = 18; break;
case 0xff40a030: code = 0x2b755; n_bits = 18; break;
case 0xff30a090: code = 0x2b7a9; n_bits = 18; break;
case 0xff9050f0: code = 0x2b7b5; n_bits = 18; break;
case 0xff40e0d0: code = 0x2b7d5; n_bits = 18; break;
case 0xffa08000: code = 0x2b835; n_bits = 18; break;
case 0xffc08000: code = 0x2b8b5; n_bits = 18; break;
case 0xff30a070: code = 0x2b8d5; n_bits = 18; break;
case 0xff5020d0: code = 0x2b935; n_bits = 18; break;
case 0xff20a070: code = 0x2b955; n_bits = 18; break;
case 0xffa0a0c0: code = 0x2b9b5; n_bits = 18; break;
case 0xff70c0c0: code = 0x2b9d5; n_bits = 18; break;
case 0xffd01020: code = 0x2ba35; n_bits = 18; break;
case 0xff40d0b0: code = 0x2bab5; n_bits = 18; break;
case 0xff900050: code = 0x2bad5; n_bits = 18; break;
case 0xff10d080: code = 0x2bb35; n_bits = 18; break;
case 0xff1050e0: code = 0x2bb55; n_bits = 18; break;
case 0xff605030: code = 0x2bba9; n_bits = 18; break;
case 0xff1060f0: code = 0x2bbb5; n_bits = 18; break;
case 0xffa080c0: code = 0x2bbd5; n_bits = 18; break;
case 0xffd06020: code = 0x2bc35; n_bits = 18; break;
case 0xffa0e020: code = 0x2bcb5; n_bits = 18; break;
case 0xff30d010: code = 0x2bcd5; n_bits = 18; break;
case 0xff5060b0: code = 0x2bd35; n_bits = 18; break;
case 0xff100010: code = 0x2bd55; n_bits = 18; break;
case 0xff5040a0: code = 0x2bdb5; n_bits = 18; break;
case 0xff3050b0: code = 0x2bdd5; n_bits = 18; break;
case 0xff506050: code = 0x2be35; n_bits = 18; break;
case 0xff40d050: code = 0x2bea9; n_bits = 18; break;
case 0xff2080a0: code = 0x2beb5; n_bits = 18; break;
case 0xff002050: code = 0x2bed5; n_bits = 18; break;
case 0xff00e020: code = 0x2bf35; n_bits = 18; break;
case 0xff205020: code = 0x2bf55; n_bits = 18; break;
case 0xffe0f050: code = 0x2bfa9; n_bits = 18; break;
case 0xff706020: code = 0x2bfb5; n_bits = 18; break;
case 0xff6020c0: code = 0x2bfd5; n_bits = 18; break;
case 0xff608070: code = 0x2c035; n_bits = 18; break;
case 0xff0090b0: code = 0x2c0b5; n_bits = 18; break;
case 0xff206050: code = 0x2c0d5; n_bits = 18; break;
case 0xff304030: code = 0x2c135; n_bits = 18; break;
case 0xffa090e0: code = 0x2c155; n_bits = 18; break;
case 0xff806080: code = 0x2c1b5; n_bits = 18; break;
case 0xff306050: code = 0x2c1d5; n_bits = 18; break;
case 0xff503090: code = 0x2c235; n_bits = 18; break;
case 0xffd06090: code = 0x2c2b5; n_bits = 18; break;
case 0xffb0d090: code = 0x2c2d5; n_bits = 18; break;
case 0xff401070: code = 0x2c335; n_bits = 18; break;
case 0xffb0c010: code = 0x2c355; n_bits = 18; break;
case 0xffa02020: code = 0x2c3a9; n_bits = 18; break;
case 0xff60d0e0: code = 0x2c3b5; n_bits = 18; break;
case 0xff300000: code = 0x2c3d5; n_bits = 18; break;
case 0xff3020a0: code = 0x2c435; n_bits = 18; break;
case 0xffa08070: code = 0x2c4b5; n_bits = 18; break;
case 0xff40a0a0: code = 0x2c4d5; n_bits = 18; break;
case 0xff8020a0: code = 0x2c535; n_bits = 18; break;
case 0xff7090b0: code = 0x2c555; n_bits = 18; break;
case 0xff905090: code = 0x2c5b5; n_bits = 18; break;
case 0xff80c0f0: code = 0x2c5d5; n_bits = 18; break;
case 0xff103040: code = 0x2c635; n_bits = 18; break;
case 0xff00a000: code = 0x2c6b5; n_bits = 18; break;
case 0xff90b010: code = 0x2c6d5; n_bits = 18; break;
case 0xffb0c000: code = 0x2c735; n_bits = 18; break;
case 0xffd050c0: code = 0x2c755; n_bits = 18; break;
case 0xff103000: code = 0x2c7a9; n_bits = 18; break;
case 0xff70e0a0: code = 0x2c7b5; n_bits = 18; break;
case 0xff00b0a0: code = 0x2c7d5; n_bits = 18; break;
case 0xff304060: code = 0x2c835; n_bits = 18; break;
case 0xff903080: code = 0x2c8b5; n_bits = 18; break;
case 0xff40a080: code = 0x2c8d5; n_bits = 18; break;
case 0xff905020: code = 0x2c935; n_bits = 18; break;
case 0xff80a010: code = 0x2c955; n_bits = 18; break;
case 0xffb060c0: code = 0x2c9b5; n_bits = 18; break;
case 0xffe0e0f0: code = 0x2c9d5; n_bits = 18; break;
case 0xffd020e0: code = 0x2ca35; n_bits = 18; break;
case 0xff10f050: code = 0x2cab5; n_bits = 18; break;
case 0xff3060f0: code = 0x2cad5; n_bits = 18; break;
case 0xff607080: code = 0x2cb35; n_bits = 18; break;
case 0xff4090a0: code = 0x2cb55; n_bits = 18; break;
case 0xffb090e0: code = 0x2cba9; n_bits = 18; break;
case 0xff9080d0: code = 0x2cbb5; n_bits = 18; break;
case 0xff506010: code = 0x2cbd5; n_bits = 18; break;
case 0xff20f070: code = 0x2cc35; n_bits = 18; break;
case 0xff6060c0: code = 0x2ccb5; n_bits = 18; break;
case 0xff50d020: code = 0x2ccd5; n_bits = 18; break;
case 0xffa0e060: code = 0x2cd35; n_bits = 18; break;
case 0xff20e060: code = 0x2cd55; n_bits = 18; break;
case 0xfff09040: code = 0x2cdb5; n_bits = 18; break;
case 0xff804080: code = 0x2cdd5; n_bits = 18; break;
case 0xff608040: code = 0x2ce35; n_bits = 18; break;
case 0xffb01010: code = 0x2ceb5; n_bits = 18; break;
case 0xff40b0a0: code = 0x2ced5; n_bits = 18; break;
case 0xff0020c0: code = 0x2cf35; n_bits = 18; break;
case 0xff50a060: code = 0x2cf55; n_bits = 18; break;
case 0xff5040e0: code = 0x2cfa9; n_bits = 18; break;
case 0xffd0b030: code = 0x2cfb5; n_bits = 18; break;
case 0xffc0c0b0: code = 0x2cfd5; n_bits = 18; break;
case 0xffd0d0b0: code = 0x2d035; n_bits = 18; break;
case 0xffd0d070: code = 0x2d0b5; n_bits = 18; break;
case 0xffb02010: code = 0x2d0d5; n_bits = 18; break;
case 0xffa0a050: code = 0x2d135; n_bits = 18; break;
case 0xfff060b0: code = 0x2d155; n_bits = 18; break;
case 0xffb070b0: code = 0x2d1b5; n_bits = 18; break;
case 0xff800070: code = 0x2d1d5; n_bits = 18; break;
case 0xfff02070: code = 0x2d235; n_bits = 18; break;
case 0xff308060: code = 0x2d2b5; n_bits = 18; break;
case 0xff10a080: code = 0x2d2d5; n_bits = 18; break;
case 0xff000090: code = 0x2d335; n_bits = 18; break;
case 0xffb0b040: code = 0x2d355; n_bits = 18; break;
case 0xff1090f0: code = 0x2d3a9; n_bits = 18; break;
case 0xffd07020: code = 0x2d3b5; n_bits = 18; break;
case 0xff0020b0: code = 0x2d3d5; n_bits = 18; break;
case 0xff607040: code = 0x2d435; n_bits = 18; break;
case 0xff401060: code = 0x2d4b5; n_bits = 18; break;
case 0xff208060: code = 0x2d4d5; n_bits = 18; break;
case 0xff00c040: code = 0x2d535; n_bits = 18; break;
case 0xff407070: code = 0x2d555; n_bits = 18; break;
case 0xfff0a010: code = 0x2d5b5; n_bits = 18; break;
case 0xff80f030: code = 0x2d5d5; n_bits = 18; break;
case 0xff50b070: code = 0x2d635; n_bits = 18; break;
case 0xff50c0b0: code = 0x2d6b5; n_bits = 18; break;
case 0xffa0d040: code = 0x2d6d5; n_bits = 18; break;
case 0xff40a090: code = 0x2d735; n_bits = 18; break;
case 0xffc070f0: code = 0x2d755; n_bits = 18; break;
case 0xffd04070: code = 0x2d7a9; n_bits = 18; break;
case 0xff7060b0: code = 0x2d7b5; n_bits = 18; break;
case 0xff90f0e0: code = 0x2d7d5; n_bits = 18; break;
case 0xff703080: code = 0x2d835; n_bits = 18; break;
case 0xffe0d010: code = 0x2d8b5; n_bits = 18; break;
case 0xffa0f000: code = 0x2d8d5; n_bits = 18; break;
case 0xff0040f0: code = 0x2d935; n_bits = 18; break;
case 0xffc0d0e0: code = 0x2d955; n_bits = 18; break;
case 0xff508020: code = 0x2d9b5; n_bits = 18; break;
case 0xff902070: code = 0x2d9d5; n_bits = 18; break;
case 0xff80f080: code = 0x2da35; n_bits = 18; break;
case 0xff300040: code = 0x2dab5; n_bits = 18; break;
case 0xff807010: code = 0x2dad5; n_bits = 18; break;
case 0xff403020: code = 0x2db35; n_bits = 18; break;
case 0xff0080c0: code = 0x2db55; n_bits = 18; break;
case 0xffc0c080: code = 0x2dba9; n_bits = 18; break;
case 0xff30f080: code = 0x2dbb5; n_bits = 18; break;
case 0xffa07050: code = 0x2dbd5; n_bits = 18; break;
case 0xff90d0a0: code = 0x2dc35; n_bits = 18; break;
case 0xff1050b0: code = 0x2dcb5; n_bits = 18; break;
case 0xff805000: code = 0x2dcd5; n_bits = 18; break;
case 0xff50b0b0: code = 0x2dd35; n_bits = 18; break;
case 0xff00f090: code = 0x2dd55; n_bits = 18; break;
case 0xff8070d0: code = 0x2ddb5; n_bits = 18; break;
case 0xffe09000: code = 0x2ddd5; n_bits = 18; break;
case 0xff705010: code = 0x2de35; n_bits = 18; break;
case 0xffb0d020: code = 0x2dea9; n_bits = 18; break;
case 0xff407060: code = 0x2deb5; n_bits = 18; break;
case 0xfff0c0b0: code = 0x2ded5; n_bits = 18; break;
case 0xfff0c020: code = 0x2df35; n_bits = 18; break;
case 0xff7010b0: code = 0x2df55; n_bits = 18; break;
case 0xff6010b0: code = 0x2dfa9; n_bits = 18; break;
case 0xff3020f0: code = 0x2dfb5; n_bits = 18; break;
case 0xfff05000: code = 0x2dfd5; n_bits = 18; break;
case 0xffc0a020: code = 0x2e035; n_bits = 18; break;
case 0xffe00040: code = 0x2e0b5; n_bits = 18; break;
case 0xffd010c0: code = 0x2e0d5; n_bits = 18; break;
case 0xff60c030: code = 0x2e135; n_bits = 18; break;
case 0xff808040: code = 0x2e155; n_bits = 18; break;
case 0xff701000: code = 0x2e1b5; n_bits = 18; break;
case 0xffd0c030: code = 0x2e1d5; n_bits = 18; break;
case 0xffb06080: code = 0x2e235; n_bits = 18; break;
case 0xff10d0f0: code = 0x2e2b5; n_bits = 18; break;
case 0xffc01020: code = 0x2e2d5; n_bits = 18; break;
case 0xff0030f0: code = 0x2e335; n_bits = 18; break;
case 0xffe08040: code = 0x2e355; n_bits = 18; break;
case 0xff108020: code = 0x2e3a9; n_bits = 18; break;
case 0xff70b0b0: code = 0x2e3b5; n_bits = 18; break;
case 0xff70b090: code = 0x2e3d5; n_bits = 18; break;
case 0xffc0f000: code = 0x2e435; n_bits = 18; break;
case 0xff107070: code = 0x2e4b5; n_bits = 18; break;
case 0xff5010c0: code = 0x2e4d5; n_bits = 18; break;
case 0xff505020: code = 0x2e535; n_bits = 18; break;
case 0xffb080a0: code = 0x2e555; n_bits = 18; break;
case 0xffd0c020: code = 0x2e5b5; n_bits = 18; break;
case 0xff808000: code = 0x2e5d5; n_bits = 18; break;
case 0xffe030e0: code = 0x2e635; n_bits = 18; break;
case 0xfff00050: code = 0x2e6b5; n_bits = 18; break;
case 0xff10e0b0: code = 0x2e6d5; n_bits = 18; break;
case 0xff108040: code = 0x2e735; n_bits = 18; break;
case 0xff603040: code = 0x2e755; n_bits = 18; break;
case 0xff70b010: code = 0x2e7a9; n_bits = 18; break;
case 0xff0050c0: code = 0x2e7b5; n_bits = 18; break;
case 0xffa0e090: code = 0x2e7d5; n_bits = 18; break;
case 0xffb030d0: code = 0x2e835; n_bits = 18; break;
case 0xffd03050: code = 0x2e8b5; n_bits = 18; break;
case 0xfff020a0: code = 0x2e8d5; n_bits = 18; break;
case 0xfff000b0: code = 0x2e935; n_bits = 18; break;
case 0xffe050c0: code = 0x2e955; n_bits = 18; break;
case 0xff803070: code = 0x2e9b5; n_bits = 18; break;
case 0xffb010f0: code = 0x2e9d5; n_bits = 18; break;
case 0xffb03030: code = 0x2ea35; n_bits = 18; break;
case 0xff206070: code = 0x2eab5; n_bits = 18; break;
case 0xffd090e0: code = 0x2ead5; n_bits = 18; break;
case 0xff10f080: code = 0x2eb35; n_bits = 18; break;
case 0xff5000c0: code = 0x2eb55; n_bits = 18; break;
case 0xff200080: code = 0x2eba9; n_bits = 18; break;
case 0xff70d000: code = 0x2ebb5; n_bits = 18; break;
case 0xff80e010: code = 0x2ebd5; n_bits = 18; break;
case 0xff00a0e0: code = 0x2ec35; n_bits = 18; break;
case 0xff002020: code = 0x2ecb5; n_bits = 18; break;
case 0xfff0c0d0: code = 0x2ecd5; n_bits = 18; break;
case 0xff907090: code = 0x2ed35; n_bits = 18; break;
case 0xfff0b050: code = 0x2ed55; n_bits = 18; break;
case 0xff60c040: code = 0x2edb5; n_bits = 18; break;
case 0xff6080d0: code = 0x2edd5; n_bits = 18; break;
case 0xffa030d0: code = 0x2ee35; n_bits = 18; break;
case 0xffa020f0: code = 0x2eeb5; n_bits = 18; break;
case 0xffc0a060: code = 0x2eed5; n_bits = 18; break;
case 0xff304090: code = 0x2ef35; n_bits = 18; break;
case 0xff603090: code = 0x2ef55; n_bits = 18; break;
case 0xffd040c0: code = 0x2efa9; n_bits = 18; break;
case 0xff40b0d0: code = 0x2efb5; n_bits = 18; break;
case 0xff502090: code = 0x2efd5; n_bits = 18; break;
case 0xfff0f040: code = 0x2f035; n_bits = 18; break;
case 0xff405090: code = 0x2f0b5; n_bits = 18; break;
case 0xff90d070: code = 0x2f0d5; n_bits = 18; break;
case 0xfff0d030: code = 0x2f135; n_bits = 18; break;
case 0xff002070: code = 0x2f155; n_bits = 18; break;
case 0xff20f0f0: code = 0x2f1b5; n_bits = 18; break;
case 0xff3070f0: code = 0x2f1d5; n_bits = 18; break;
case 0xff108060: code = 0x2f235; n_bits = 18; break;
case 0xff607050: code = 0x2f2b5; n_bits = 18; break;
case 0xffd0a0b0: code = 0x2f2d5; n_bits = 18; break;
case 0xffa010b0: code = 0x2f335; n_bits = 18; break;
case 0xffd09030: code = 0x2f355; n_bits = 18; break;
case 0xff701070: code = 0x2f3a9; n_bits = 18; break;
case 0xff502020: code = 0x2f3b5; n_bits = 18; break;
case 0xff80a030: code = 0x2f3d5; n_bits = 18; break;
case 0xff90f040: code = 0x2f435; n_bits = 18; break;
case 0xff40c010: code = 0x2f4b5; n_bits = 18; break;
case 0xff50a0b0: code = 0x2f4d5; n_bits = 18; break;
case 0xff30e070: code = 0x2f535; n_bits = 18; break;
case 0xfff050a0: code = 0x2f555; n_bits = 18; break;
case 0xffb020b0: code = 0x2f5b5; n_bits = 18; break;
case 0xfff020d0: code = 0x2f5d5; n_bits = 18; break;
case 0xff0010b0: code = 0x2f635; n_bits = 18; break;
case 0xffe0f070: code = 0x2f6a9; n_bits = 18; break;
case 0xff6030d0: code = 0x2f6b5; n_bits = 18; break;
case 0xffa0f0e0: code = 0x2f6d5; n_bits = 18; break;
case 0xffb0a060: code = 0x2f735; n_bits = 18; break;
case 0xff20b070: code = 0x2f755; n_bits = 18; break;
case 0xff102060: code = 0x2f7a9; n_bits = 18; break;
case 0xff301050: code = 0x2f7b5; n_bits = 18; break;
case 0xff7040b0: code = 0x2f7d5; n_bits = 18; break;
case 0xffe0c040: code = 0x2f835; n_bits = 18; break;
case 0xff20e020: code = 0x2f8b5; n_bits = 18; break;
case 0xffe0b0d0: code = 0x2f8d5; n_bits = 18; break;
case 0xff209090: code = 0x2f935; n_bits = 18; break;
case 0xff500050: code = 0x2f955; n_bits = 18; break;
case 0xff7020d0: code = 0x2f9b5; n_bits = 18; break;
case 0xffc0e070: code = 0x2f9d5; n_bits = 18; break;
case 0xffc00040: code = 0x2fa35; n_bits = 18; break;
case 0xff006030: code = 0x2fab5; n_bits = 18; break;
case 0xffe0c080: code = 0x2fad5; n_bits = 18; break;
case 0xff70d060: code = 0x2fb35; n_bits = 18; break;
case 0xff20d030: code = 0x2fb55; n_bits = 18; break;
case 0xffc06070: code = 0x2fba9; n_bits = 18; break;
case 0xff303010: code = 0x2fbb5; n_bits = 18; break;
case 0xff202050: code = 0x2fbd5; n_bits = 18; break;
case 0xffc03060: code = 0x2fc35; n_bits = 18; break;
case 0xff1080b0: code = 0x2fcb5; n_bits = 18; break;
case 0xffa0a000: code = 0x2fcd5; n_bits = 18; break;
case 0xff60f070: code = 0x2fd35; n_bits = 18; break;
case 0xff2080b0: code = 0x2fd55; n_bits = 18; break;
case 0xff20b060: code = 0x2fdb5; n_bits = 18; break;
case 0xff10c000: code = 0x2fdd5; n_bits = 18; break;
case 0xff80d030: code = 0x2fe35; n_bits = 18; break;
case 0xfff03030: code = 0x2fea9; n_bits = 18; break;
case 0xff0090e0: code = 0x2feb5; n_bits = 18; break;
case 0xff20f0b0: code = 0x2fed5; n_bits = 18; break;
case 0xffd060b0: code = 0x2ff35; n_bits = 18; break;
case 0xff106020: code = 0x2ff55; n_bits = 18; break;
case 0xfff090d0: code = 0x2ffa9; n_bits = 18; break;
case 0xffe0d0f0: code = 0x2ffb5; n_bits = 18; break;
case 0xff30c060: code = 0x2ffd5; n_bits = 18; break;
case 0xff9010b0: code = 0x30035; n_bits = 18; break;
case 0xff6040b0: code = 0x300b5; n_bits = 18; break;
case 0xffd090c0: code = 0x300d5; n_bits = 18; break;
case 0xff00e050: code = 0x30135; n_bits = 18; break;
case 0xffa070f0: code = 0x30155; n_bits = 18; break;
case 0xff9000b0: code = 0x301b5; n_bits = 18; break;
case 0xff2050d0: code = 0x301d5; n_bits = 18; break;
case 0xffe090b0: code = 0x30235; n_bits = 18; break;
case 0xff805080: code = 0x302b5; n_bits = 18; break;
case 0xff0040a0: code = 0x302d5; n_bits = 18; break;
case 0xff102080: code = 0x30335; n_bits = 18; break;
case 0xffb03000: code = 0x30355; n_bits = 18; break;
case 0xff70c040: code = 0x303a9; n_bits = 18; break;
case 0xffd080e0: code = 0x303b5; n_bits = 18; break;
case 0xff3050e0: code = 0x303d5; n_bits = 18; break;
case 0xff80c0c0: code = 0x30435; n_bits = 18; break;
case 0xff3080a0: code = 0x304b5; n_bits = 18; break;
case 0xff609060: code = 0x304d5; n_bits = 18; break;
case 0xff0010c0: code = 0x30535; n_bits = 18; break;
case 0xffc0b090: code = 0x30555; n_bits = 18; break;
case 0xff300020: code = 0x305b5; n_bits = 18; break;
case 0xffe03050: code = 0x305d5; n_bits = 18; break;
case 0xff7070e0: code = 0x30635; n_bits = 18; break;
case 0xff90a0b0: code = 0x306b5; n_bits = 18; break;
case 0xff60c020: code = 0x306d5; n_bits = 18; break;
case 0xff50e0a0: code = 0x30735; n_bits = 18; break;
case 0xff005060: code = 0x30755; n_bits = 18; break;
case 0xffb07050: code = 0x307a9; n_bits = 18; break;
case 0xffe080a0: code = 0x307b5; n_bits = 18; break;
case 0xff40d030: code = 0x307d5; n_bits = 18; break;
case 0xff805070: code = 0x30835; n_bits = 18; break;
case 0xffc06040: code = 0x308b5; n_bits = 18; break;
case 0xff80e000: code = 0x308d5; n_bits = 18; break;
case 0xff803080: code = 0x30935; n_bits = 18; break;
case 0xffa0f040: code = 0x30955; n_bits = 18; break;
case 0xffc0b020: code = 0x309b5; n_bits = 18; break;
case 0xff90d0e0: code = 0x309d5; n_bits = 18; break;
case 0xfff030c0: code = 0x30a35; n_bits = 18; break;
case 0xffa0b0b0: code = 0x30ab5; n_bits = 18; break;
case 0xff50f090: code = 0x30ad5; n_bits = 18; break;
case 0xffd03070: code = 0x30b35; n_bits = 18; break;
case 0xff80a000: code = 0x30b55; n_bits = 18; break;
case 0xff002090: code = 0x30ba9; n_bits = 18; break;
case 0xffd06050: code = 0x30bb5; n_bits = 18; break;
case 0xff40c0b0: code = 0x30bd5; n_bits = 18; break;
case 0xff3040f0: code = 0x30c35; n_bits = 18; break;
case 0xff2010d0: code = 0x30cb5; n_bits = 18; break;
case 0xff806060: code = 0x30cd5; n_bits = 18; break;
case 0xff10d050: code = 0x30d35; n_bits = 18; break;
case 0xff4040f0: code = 0x30d55; n_bits = 18; break;
case 0xff307090: code = 0x30db5; n_bits = 18; break;
case 0xffe0a0c0: code = 0x30dd5; n_bits = 18; break;
case 0xff40c0e0: code = 0x30e35; n_bits = 18; break;
case 0xff10b0b0: code = 0x30eb5; n_bits = 18; break;
case 0xff7040e0: code = 0x30ed5; n_bits = 18; break;
case 0xff0030b0: code = 0x30f35; n_bits = 18; break;
case 0xff0030a0: code = 0x30f55; n_bits = 18; break;
case 0xff600010: code = 0x30fa9; n_bits = 18; break;
case 0xff30f0c0: code = 0x30fb5; n_bits = 18; break;
case 0xffa040e0: code = 0x30fd5; n_bits = 18; break;
case 0xff907000: code = 0x31035; n_bits = 18; break;
case 0xff8060b0: code = 0x310b5; n_bits = 18; break;
case 0xfff09090: code = 0x310d5; n_bits = 18; break;
case 0xff404060: code = 0x31135; n_bits = 18; break;
case 0xff704030: code = 0x31155; n_bits = 18; break;
case 0xff003020: code = 0x311b5; n_bits = 18; break;
case 0xff406080: code = 0x311d5; n_bits = 18; break;
case 0xff30b060: code = 0x31235; n_bits = 18; break;
case 0xff8010d0: code = 0x312b5; n_bits = 18; break;
case 0xff005070: code = 0x312d5; n_bits = 18; break;
case 0xff407020: code = 0x31335; n_bits = 18; break;
case 0xff3030c0: code = 0x31355; n_bits = 18; break;
case 0xff2040b0: code = 0x313a9; n_bits = 18; break;
case 0xff4020b0: code = 0x313b5; n_bits = 18; break;
case 0xff409040: code = 0x313d5; n_bits = 18; break;
case 0xff40b0e0: code = 0x31435; n_bits = 18; break;
case 0xff605020: code = 0x314b5; n_bits = 18; break;
case 0xff708020: code = 0x314d5; n_bits = 18; break;
case 0xff4000e0: code = 0x31535; n_bits = 18; break;
case 0xff7000b0: code = 0x31555; n_bits = 18; break;
case 0xffa09000: code = 0x315b5; n_bits = 18; break;
case 0xff806020: code = 0x315d5; n_bits = 18; break;
case 0xff70a030: code = 0x31635; n_bits = 18; break;
case 0xffb020d0: code = 0x316b5; n_bits = 18; break;
case 0xff90d0f0: code = 0x316d5; n_bits = 18; break;
case 0xff10d0c0: code = 0x31735; n_bits = 18; break;
case 0xffb07010: code = 0x31755; n_bits = 18; break;
case 0xffe0f0e0: code = 0x317a9; n_bits = 18; break;
case 0xff503070: code = 0x317b5; n_bits = 18; break;
case 0xff30e0a0: code = 0x317d5; n_bits = 18; break;
case 0xff904090: code = 0x31835; n_bits = 18; break;
case 0xff40d0d0: code = 0x318b5; n_bits = 18; break;
case 0xff3040c0: code = 0x318d5; n_bits = 18; break;
case 0xff705090: code = 0x31935; n_bits = 18; break;
case 0xff20a030: code = 0x31955; n_bits = 18; break;
case 0xff5090b0: code = 0x319b5; n_bits = 18; break;
case 0xff3060d0: code = 0x319d5; n_bits = 18; break;
case 0xffa05030: code = 0x31a35; n_bits = 18; break;
case 0xffc020b0: code = 0x31ab5; n_bits = 18; break;
case 0xff50f050: code = 0x31ad5; n_bits = 18; break;
case 0xffb0a050: code = 0x31b35; n_bits = 18; break;
case 0xffa05040: code = 0x31b55; n_bits = 18; break;
case 0xff90a0e0: code = 0x31ba9; n_bits = 18; break;
case 0xffb04090: code = 0x31bb5; n_bits = 18; break;
case 0xff7090d0: code = 0x31bd5; n_bits = 18; break;
case 0xffc070a0: code = 0x31c35; n_bits = 18; break;
case 0xff70b0f0: code = 0x31cb5; n_bits = 18; break;
case 0xffc090b0: code = 0x31cd5; n_bits = 18; break;
case 0xfff05090: code = 0x31d35; n_bits = 18; break;
case 0xff901020: code = 0x31d55; n_bits = 18; break;
case 0xffe04010: code = 0x31db5; n_bits = 18; break;
case 0xff702060: code = 0x31dd5; n_bits = 18; break;
case 0xff406020: code = 0x31e35; n_bits = 18; break;
case 0xff4070a0: code = 0x31ea9; n_bits = 18; break;
case 0xffb0a020: code = 0x31eb5; n_bits = 18; break;
case 0xff907040: code = 0x31ed5; n_bits = 18; break;
case 0xff6000a0: code = 0x31f35; n_bits = 18; break;
case 0xff1010b0: code = 0x31f55; n_bits = 18; break;
case 0xff5070b0: code = 0x31fa9; n_bits = 18; break;
case 0xffa09040: code = 0x31fb5; n_bits = 18; break;
case 0xff2080f0: code = 0x31fd5; n_bits = 18; break;
case 0xff6060d0: code = 0x32035; n_bits = 18; break;
case 0xff404030: code = 0x320b5; n_bits = 18; break;
case 0xffe06000: code = 0x320d5; n_bits = 18; break;
case 0xffb0f080: code = 0x32135; n_bits = 18; break;
case 0xff60d010: code = 0x32155; n_bits = 18; break;
case 0xff504030: code = 0x321b5; n_bits = 18; break;
case 0xff30f060: code = 0x321d5; n_bits = 18; break;
case 0xffa01040: code = 0x32235; n_bits = 18; break;
case 0xff60f0d0: code = 0x322b5; n_bits = 18; break;
case 0xffd02070: code = 0x322d5; n_bits = 18; break;
case 0xffc0a0b0: code = 0x32335; n_bits = 18; break;
case 0xffd030a0: code = 0x32355; n_bits = 18; break;
case 0xff004030: code = 0x323a9; n_bits = 18; break;
case 0xff106040: code = 0x323b5; n_bits = 18; break;
case 0xffb000a0: code = 0x323d5; n_bits = 18; break;
case 0xff40a0f0: code = 0x32435; n_bits = 18; break;
case 0xff60a0f0: code = 0x324b5; n_bits = 18; break;
case 0xff3030b0: code = 0x324d5; n_bits = 18; break;
case 0xff206030: code = 0x32535; n_bits = 18; break;
case 0xffe00080: code = 0x32555; n_bits = 18; break;
case 0xff107040: code = 0x325b5; n_bits = 18; break;
case 0xff90c060: code = 0x325d5; n_bits = 18; break;
case 0xff60a000: code = 0x32635; n_bits = 18; break;
case 0xff80e0a0: code = 0x326b5; n_bits = 18; break;
case 0xffd07050: code = 0x326d5; n_bits = 18; break;
case 0xff6050c0: code = 0x32735; n_bits = 18; break;
case 0xffd0b0e0: code = 0x32755; n_bits = 18; break;
case 0xffa04050: code = 0x327a9; n_bits = 18; break;
case 0xff50f0e0: code = 0x327b5; n_bits = 18; break;
case 0xff8070c0: code = 0x327d5; n_bits = 18; break;
case 0xff9050a0: code = 0x32835; n_bits = 18; break;
case 0xff30a040: code = 0x328b5; n_bits = 18; break;
case 0xff107060: code = 0x328d5; n_bits = 18; break;
case 0xff30b080: code = 0x32935; n_bits = 18; break;
case 0xff40e0f0: code = 0x32955; n_bits = 18; break;
case 0xff701030: code = 0x329b5; n_bits = 18; break;
case 0xffa01000: code = 0x329d5; n_bits = 18; break;
case 0xff10e010: code = 0x32a35; n_bits = 18; break;
case 0xffe040c0: code = 0x32ab5; n_bits = 18; break;
case 0xff0030d0: code = 0x32ad5; n_bits = 18; break;
case 0xffd020f0: code = 0x32b35; n_bits = 18; break;
case 0xff1060b0: code = 0x32b55; n_bits = 18; break;
case 0xff6020e0: code = 0x32ba9; n_bits = 18; break;
case 0xff3000c0: code = 0x32bb5; n_bits = 18; break;
case 0xffd0b040: code = 0x32bd5; n_bits = 18; break;
case 0xfff0d020: code = 0x32c35; n_bits = 18; break;
case 0xff608060: code = 0x32cb5; n_bits = 18; break;
case 0xff30e060: code = 0x32cd5; n_bits = 18; break;
case 0xff70b040: code = 0x32d35; n_bits = 18; break;
case 0xff70c010: code = 0x32d55; n_bits = 18; break;
case 0xffc06020: code = 0x32db5; n_bits = 18; break;
case 0xfff04050: code = 0x32dd5; n_bits = 18; break;
case 0xff10e060: code = 0x32e35; n_bits = 18; break;
case 0xff703090: code = 0x32eb5; n_bits = 18; break;
case 0xff809030: code = 0x32ed5; n_bits = 18; break;
case 0xff003070: code = 0x32f35; n_bits = 18; break;
case 0xff208010: code = 0x32f55; n_bits = 18; break;
case 0xfff0b070: code = 0x32fa9; n_bits = 18; break;
case 0xff90d0b0: code = 0x32fb5; n_bits = 18; break;
case 0xff10f040: code = 0x32fd5; n_bits = 18; break;
case 0xff70e050: code = 0x33035; n_bits = 18; break;
case 0xff907070: code = 0x330b5; n_bits = 18; break;
case 0xff60e080: code = 0x330d5; n_bits = 18; break;
case 0xff8060e0: code = 0x33135; n_bits = 18; break;
case 0xff6080b0: code = 0x33155; n_bits = 18; break;
case 0xff804090: code = 0x331b5; n_bits = 18; break;
case 0xff005050: code = 0x331d5; n_bits = 18; break;
case 0xff400090: code = 0x33235; n_bits = 18; break;
case 0xff605000: code = 0x332b5; n_bits = 18; break;
case 0xff70b0c0: code = 0x332d5; n_bits = 18; break;
case 0xff0090a0: code = 0x33335; n_bits = 18; break;
case 0xffd00020: code = 0x33355; n_bits = 18; break;
case 0xffa06050: code = 0x333a9; n_bits = 18; break;
case 0xffe010a0: code = 0x333b5; n_bits = 18; break;
case 0xff10a060: code = 0x333d5; n_bits = 18; break;
case 0xff109060: code = 0x33435; n_bits = 18; break;
case 0xff705050: code = 0x334b5; n_bits = 18; break;
case 0xfff04090: code = 0x334d5; n_bits = 18; break;
case 0xffd08070: code = 0x33535; n_bits = 18; break;
case 0xffd04050: code = 0x33555; n_bits = 18; break;
case 0xffb0e0a0: code = 0x335b5; n_bits = 18; break;
case 0xff9090b0: code = 0x335d5; n_bits = 18; break;
case 0xff702050: code = 0x33635; n_bits = 18; break;
case 0xff805020: code = 0x336a9; n_bits = 18; break;
case 0xff20a060: code = 0x336b5; n_bits = 18; break;
case 0xffc02020: code = 0x336d5; n_bits = 18; break;
case 0xff80e080: code = 0x33735; n_bits = 18; break;
case 0xff70c080: code = 0x33755; n_bits = 18; break;
case 0xffd010d0: code = 0x337a9; n_bits = 18; break;
case 0xff10b0d0: code = 0x337b5; n_bits = 18; break;
case 0xff302030: code = 0x337d5; n_bits = 18; break;
case 0xffb0c060: code = 0x33835; n_bits = 18; break;
case 0xffa09060: code = 0x338b5; n_bits = 18; break;
case 0xffd030f0: code = 0x338d5; n_bits = 18; break;
case 0xff70a0a0: code = 0x33935; n_bits = 18; break;
case 0xffa0e0f0: code = 0x33955; n_bits = 18; break;
case 0xffb05020: code = 0x339b5; n_bits = 18; break;
case 0xff600020: code = 0x339d5; n_bits = 18; break;
case 0xffd040a0: code = 0x33a35; n_bits = 18; break;
case 0xff3060a0: code = 0x33ab5; n_bits = 18; break;
case 0xff50f010: code = 0x33ad5; n_bits = 18; break;
case 0xff204060: code = 0x33b35; n_bits = 18; break;
case 0xffd07090: code = 0x33b55; n_bits = 18; break;
case 0xff909060: code = 0x33ba9; n_bits = 18; break;
case 0xff00d030: code = 0x33bb5; n_bits = 18; break;
case 0xff808090: code = 0x33bd5; n_bits = 18; break;
case 0xffd050a0: code = 0x33c35; n_bits = 18; break;
case 0xff609010: code = 0x33cb5; n_bits = 18; break;
case 0xfff0b030: code = 0x33cd5; n_bits = 18; break;
case 0xff208090: code = 0x33d35; n_bits = 18; break;
case 0xffb0b030: code = 0x33d55; n_bits = 18; break;
case 0xff401010: code = 0x33db5; n_bits = 18; break;
case 0xff00c0a0: code = 0x33dd5; n_bits = 18; break;
case 0xff804020: code = 0x33e35; n_bits = 18; break;
case 0xff100050: code = 0x33ea9; n_bits = 18; break;
case 0xffd08010: code = 0x33eb5; n_bits = 18; break;
case 0xffc09090: code = 0x33ed5; n_bits = 18; break;
case 0xffb01020: code = 0x33f35; n_bits = 18; break;
case 0xff409010: code = 0x33f55; n_bits = 18; break;
case 0xffc020f0: code = 0x33fa9; n_bits = 18; break;
case 0xffd02080: code = 0x33fb5; n_bits = 18; break;
case 0xffc0b0e0: code = 0x33fd5; n_bits = 18; break;
case 0xff709010: code = 0x34035; n_bits = 18; break;
case 0xff90e050: code = 0x340b5; n_bits = 18; break;
case 0xff40e020: code = 0x340d5; n_bits = 18; break;
case 0xff10f060: code = 0x34135; n_bits = 18; break;
case 0xffa000d0: code = 0x34155; n_bits = 18; break;
case 0xff20e050: code = 0x341b5; n_bits = 18; break;
case 0xffb0e040: code = 0x341d5; n_bits = 18; break;
case 0xff70b060: code = 0x34235; n_bits = 18; break;
case 0xffe0a0f0: code = 0x342b5; n_bits = 18; break;
case 0xff205000: code = 0x342d5; n_bits = 18; break;
case 0xff70c0d0: code = 0x34335; n_bits = 18; break;
case 0xff0090f0: code = 0x34355; n_bits = 18; break;
case 0xffe020f0: code = 0x343a9; n_bits = 18; break;
case 0xff409060: code = 0x343b5; n_bits = 18; break;
case 0xff60b060: code = 0x343d5; n_bits = 18; break;
case 0xff90c0d0: code = 0x34435; n_bits = 18; break;
case 0xffc0d0f0: code = 0x344b5; n_bits = 18; break;
case 0xfff02050: code = 0x344d5; n_bits = 18; break;
case 0xffc050d0: code = 0x34535; n_bits = 18; break;
case 0xff804010: code = 0x34555; n_bits = 18; break;
case 0xffa090f0: code = 0x345b5; n_bits = 18; break;
case 0xff50d0d0: code = 0x345d5; n_bits = 18; break;
case 0xff209070: code = 0x34635; n_bits = 18; break;
case 0xffa09020: code = 0x346b5; n_bits = 18; break;
case 0xff503020: code = 0x346d5; n_bits = 18; break;
case 0xfff09030: code = 0x34735; n_bits = 18; break;
case 0xffc0c040: code = 0x34755; n_bits = 18; break;
case 0xff4060b0: code = 0x347a9; n_bits = 18; break;
case 0xffe08020: code = 0x347b5; n_bits = 18; break;
case 0xff703010: code = 0x347d5; n_bits = 18; break;
case 0xff60f0c0: code = 0x34835; n_bits = 18; break;
case 0xffd04020: code = 0x348b5; n_bits = 18; break;
case 0xff40c060: code = 0x348d5; n_bits = 18; break;
case 0xfff010c0: code = 0x34935; n_bits = 18; break;
case 0xffb090c0: code = 0x34955; n_bits = 18; break;
case 0xff50e0e0: code = 0x349b5; n_bits = 18; break;
case 0xff6060e0: code = 0x349d5; n_bits = 18; break;
case 0xffc07050: code = 0x34a35; n_bits = 18; break;
case 0xff2090d0: code = 0x34ab5; n_bits = 18; break;
case 0xff5050b0: code = 0x34ad5; n_bits = 18; break;
case 0xff801090: code = 0x34b35; n_bits = 18; break;
case 0xff608090: code = 0x34b55; n_bits = 18; break;
case 0xffe03000: code = 0x34ba9; n_bits = 18; break;
case 0xffa03030: code = 0x34bb5; n_bits = 18; break;
case 0xffb090b0: code = 0x34bd5; n_bits = 18; break;
case 0xffa06060: code = 0x34c35; n_bits = 18; break;
case 0xff20b0a0: code = 0x34cb5; n_bits = 18; break;
case 0xfff0d0a0: code = 0x34cd5; n_bits = 18; break;
case 0xff5060c0: code = 0x34d35; n_bits = 18; break;
case 0xff3080e0: code = 0x34d55; n_bits = 18; break;
case 0xff60f0a0: code = 0x34db5; n_bits = 18; break;
case 0xff807090: code = 0x34dd5; n_bits = 18; break;
case 0xff8050e0: code = 0x34e35; n_bits = 18; break;
case 0xffc05070: code = 0x34eb5; n_bits = 18; break;
case 0xffa02090: code = 0x34ed5; n_bits = 18; break;
case 0xffa0f010: code = 0x34f35; n_bits = 18; break;
case 0xffb0f050: code = 0x34f55; n_bits = 18; break;
case 0xffd000b0: code = 0x34fa9; n_bits = 18; break;
case 0xff800040: code = 0x34fb5; n_bits = 18; break;
case 0xffd07010: code = 0x34fd5; n_bits = 18; break;
case 0xff10d010: code = 0x35035; n_bits = 18; break;
case 0xff6070f0: code = 0x350b5; n_bits = 18; break;
case 0xff1070c0: code = 0x350d5; n_bits = 18; break;
case 0xfff0f090: code = 0x35135; n_bits = 18; break;
case 0xffb0a090: code = 0x35155; n_bits = 18; break;
case 0xff1040c0: code = 0x351b5; n_bits = 18; break;
case 0xff40c0d0: code = 0x351d5; n_bits = 18; break;
case 0xffb040a0: code = 0x35235; n_bits = 18; break;
case 0xff4020e0: code = 0x352b5; n_bits = 18; break;
case 0xffd02090: code = 0x352d5; n_bits = 18; break;
case 0xffa0b000: code = 0x35335; n_bits = 18; break;
case 0xffc0f0a0: code = 0x35355; n_bits = 18; break;
case 0xff101020: code = 0x353a9; n_bits = 18; break;
case 0xff0090d0: code = 0x353b5; n_bits = 18; break;
case 0xff905080: code = 0x353d5; n_bits = 18; break;
case 0xff703040: code = 0x35435; n_bits = 18; break;
case 0xff904010: code = 0x354b5; n_bits = 18; break;
case 0xffd0f0b0: code = 0x354d5; n_bits = 18; break;
case 0xff70a080: code = 0x35535; n_bits = 18; break;
case 0xff5010f0: code = 0x35555; n_bits = 18; break;
case 0xff0080b0: code = 0x355b5; n_bits = 18; break;
case 0xff902050: code = 0x355d5; n_bits = 18; break;
case 0xffa01020: code = 0x35635; n_bits = 18; break;
case 0xffd06080: code = 0x356b5; n_bits = 18; break;
case 0xff501020: code = 0x356d5; n_bits = 18; break;
case 0xff50e0f0: code = 0x35735; n_bits = 18; break;
case 0xffa04020: code = 0x35755; n_bits = 18; break;
case 0xffe080d0: code = 0x357a9; n_bits = 18; break;
case 0xffa0f0f0: code = 0x357b5; n_bits = 18; break;
case 0xff8060f0: code = 0x357d5; n_bits = 18; break;
case 0xff10b050: code = 0x35835; n_bits = 18; break;
case 0xff5020a0: code = 0x358b5; n_bits = 18; break;
case 0xff00b080: code = 0x358d5; n_bits = 18; break;
case 0xffa030e0: code = 0x35935; n_bits = 18; break;
case 0xffe000d0: code = 0x35955; n_bits = 18; break;
case 0xff6020a0: code = 0x359b5; n_bits = 18; break;
case 0xffc0f040: code = 0x359d5; n_bits = 18; break;
case 0xffe0f060: code = 0x35a35; n_bits = 18; break;
case 0xffe07090: code = 0x35ab5; n_bits = 18; break;
case 0xff005030: code = 0x35ad5; n_bits = 18; break;
case 0xff40e070: code = 0x35b35; n_bits = 18; break;
case 0xffc0d010: code = 0x35b55; n_bits = 18; break;
case 0xffe0b040: code = 0x35ba9; n_bits = 18; break;
case 0xff406000: code = 0x35bb5; n_bits = 18; break;
case 0xff407080: code = 0x35bd5; n_bits = 18; break;
case 0xff303030: code = 0x35c35; n_bits = 18; break;
case 0xff102050: code = 0x35cb5; n_bits = 18; break;
case 0xffa060c0: code = 0x35cd5; n_bits = 18; break;
case 0xff20a020: code = 0x35d35; n_bits = 18; break;
case 0xff60b0f0: code = 0x35d55; n_bits = 18; break;
case 0xffa080d0: code = 0x35db5; n_bits = 18; break;
case 0xfff0d060: code = 0x35dd5; n_bits = 18; break;
case 0xffc0b0a0: code = 0x35e35; n_bits = 18; break;
case 0xff0050f0: code = 0x35ea9; n_bits = 18; break;
case 0xffa03000: code = 0x35eb5; n_bits = 18; break;
case 0xff707030: code = 0x35ed5; n_bits = 18; break;
case 0xff307060: code = 0x35f35; n_bits = 18; break;
case 0xffa0a020: code = 0x35f55; n_bits = 18; break;
case 0xffb0d000: code = 0x35fa9; n_bits = 18; break;
case 0xff50a0c0: code = 0x35fb5; n_bits = 18; break;
case 0xff30c0e0: code = 0x35fd5; n_bits = 18; break;
case 0xff20e040: code = 0x36035; n_bits = 18; break;
case 0xfff040a0: code = 0x360b5; n_bits = 18; break;
case 0xffb050d0: code = 0x360d5; n_bits = 18; break;
case 0xffa000c0: code = 0x36135; n_bits = 18; break;
case 0xff90c0a0: code = 0x36155; n_bits = 18; break;
case 0xff805060: code = 0x361b5; n_bits = 18; break;
case 0xfff09060: code = 0x361d5; n_bits = 18; break;
case 0xffc090d0: code = 0x36235; n_bits = 18; break;
case 0xff208030: code = 0x362b5; n_bits = 18; break;
case 0xff800090: code = 0x362d5; n_bits = 18; break;
case 0xffc000d0: code = 0x36335; n_bits = 18; break;
case 0xffc0b0d0: code = 0x36355; n_bits = 18; break;
case 0xff101000: code = 0x363a9; n_bits = 18; break;
case 0xff806010: code = 0x363b5; n_bits = 18; break;
case 0xff20d0e0: code = 0x363d5; n_bits = 18; break;
case 0xffd070f0: code = 0x36435; n_bits = 18; break;
case 0xff30f040: code = 0x364b5; n_bits = 18; break;
case 0xffd030c0: code = 0x364d5; n_bits = 18; break;
case 0xfff08000: code = 0x36535; n_bits = 18; break;
case 0xfff0d0e0: code = 0x36555; n_bits = 18; break;
case 0xff80c0b0: code = 0x365b5; n_bits = 18; break;
case 0xffc0d0a0: code = 0x365d5; n_bits = 18; break;
case 0xffc05000: code = 0x36635; n_bits = 18; break;
case 0xffb0c0b0: code = 0x366b5; n_bits = 18; break;
case 0xff701010: code = 0x366d5; n_bits = 18; break;
case 0xff30c080: code = 0x36735; n_bits = 18; break;
case 0xff407040: code = 0x36755; n_bits = 18; break;
case 0xff005090: code = 0x367a9; n_bits = 18; break;
case 0xffb0e010: code = 0x367b5; n_bits = 18; break;
case 0xffa0f090: code = 0x367d5; n_bits = 18; break;
case 0xff7060e0: code = 0x36835; n_bits = 18; break;
case 0xff90f0b0: code = 0x368b5; n_bits = 18; break;
case 0xff00e0e0: code = 0x368d5; n_bits = 18; break;
case 0xff100020: code = 0x36935; n_bits = 18; break;
case 0xff309000: code = 0x36955; n_bits = 18; break;
case 0xff5020e0: code = 0x369b5; n_bits = 18; break;
case 0xff8080b0: code = 0x369d5; n_bits = 18; break;
case 0xff70f050: code = 0x36a35; n_bits = 18; break;
case 0xffd04000: code = 0x36ab5; n_bits = 18; break;
case 0xffe04040: code = 0x36ad5; n_bits = 18; break;
case 0xffd0c080: code = 0x36b35; n_bits = 18; break;
case 0xffa0f020: code = 0x36b55; n_bits = 18; break;
case 0xffd070d0: code = 0x36ba9; n_bits = 18; break;
case 0xff807080: code = 0x36bb5; n_bits = 18; break;
case 0xff908090: code = 0x36bd5; n_bits = 18; break;
case 0xffc0c090: code = 0x36c35; n_bits = 18; break;
case 0xff60f090: code = 0x36cb5; n_bits = 18; break;
case 0xff604040: code = 0x36cd5; n_bits = 18; break;
case 0xff70b030: code = 0x36d35; n_bits = 18; break;
case 0xffa00060: code = 0x36d55; n_bits = 18; break;
case 0xff9040e0: code = 0x36db5; n_bits = 18; break;
case 0xffb060d0: code = 0x36dd5; n_bits = 18; break;
case 0xff107030: code = 0x36e35; n_bits = 18; break;
case 0xff307030: code = 0x36eb5; n_bits = 18; break;
case 0xffd0e0c0: code = 0x36ed5; n_bits = 18; break;
case 0xff00b050: code = 0x36f35; n_bits = 18; break;
case 0xffd0f030: code = 0x36f55; n_bits = 18; break;
case 0xff0060a0: code = 0x36fa9; n_bits = 18; break;
case 0xffa020c0: code = 0x36fb5; n_bits = 18; break;
case 0xff008010: code = 0x36fd5; n_bits = 18; break;
case 0xff5080b0: code = 0x37035; n_bits = 18; break;
case 0xff5090f0: code = 0x370b5; n_bits = 18; break;
case 0xff2070f0: code = 0x370d5; n_bits = 18; break;
case 0xfff0b010: code = 0x37135; n_bits = 18; break;
case 0xff00d070: code = 0x37155; n_bits = 18; break;
case 0xffa060e0: code = 0x371b5; n_bits = 18; break;
case 0xff50f0c0: code = 0x371d5; n_bits = 18; break;
case 0xff205070: code = 0x37235; n_bits = 18; break;
case 0xffd0e0d0: code = 0x372b5; n_bits = 18; break;
case 0xffe05010: code = 0x372d5; n_bits = 18; break;
case 0xffb0e090: code = 0x37335; n_bits = 18; break;
case 0xff7030e0: code = 0x37355; n_bits = 18; break;
case 0xff909040: code = 0x373a9; n_bits = 18; break;
case 0xffa00090: code = 0x373b5; n_bits = 18; break;
case 0xff2040e0: code = 0x373d5; n_bits = 18; break;
case 0xff901030: code = 0x37435; n_bits = 18; break;
case 0xff7030b0: code = 0x374b5; n_bits = 18; break;
case 0xffa05020: code = 0x374d5; n_bits = 18; break;
case 0xff30c010: code = 0x37535; n_bits = 18; break;
case 0xff706060: code = 0x37555; n_bits = 18; break;
case 0xff50b0c0: code = 0x375b5; n_bits = 18; break;
case 0xff106060: code = 0x375d5; n_bits = 18; break;
case 0xff508010: code = 0x37635; n_bits = 18; break;
case 0xfff010b0: code = 0x376a9; n_bits = 18; break;
case 0xffb070c0: code = 0x376b5; n_bits = 18; break;
case 0xffd0f090: code = 0x376d5; n_bits = 18; break;
case 0xffc0e0c0: code = 0x37735; n_bits = 18; break;
case 0xffd05000: code = 0x37755; n_bits = 18; break;
case 0xff800010: code = 0x377a9; n_bits = 18; break;
case 0xff40d010: code = 0x377b5; n_bits = 18; break;
case 0xff90c080: code = 0x377d5; n_bits = 18; break;
case 0xff20b080: code = 0x37835; n_bits = 18; break;
case 0xff00a0a0: code = 0x378b5; n_bits = 18; break;
case 0xfff06030: code = 0x378d5; n_bits = 18; break;
case 0xffb030b0: code = 0x37935; n_bits = 18; break;
case 0xff606020: code = 0x37955; n_bits = 18; break;
case 0xff90a0a0: code = 0x379b5; n_bits = 18; break;
case 0xff1070f0: code = 0x379d5; n_bits = 18; break;
case 0xffe0e090: code = 0x37a35; n_bits = 18; break;
case 0xff10a090: code = 0x37ab5; n_bits = 18; break;
case 0xffa080f0: code = 0x37ad5; n_bits = 18; break;
case 0xff8090d0: code = 0x37b35; n_bits = 18; break;
case 0xff3070b0: code = 0x37b55; n_bits = 18; break;
case 0xff5000f0: code = 0x37ba9; n_bits = 18; break;
case 0xff708050: code = 0x37bb5; n_bits = 18; break;
case 0xff706070: code = 0x37bd5; n_bits = 18; break;
case 0xff70e0c0: code = 0x37c35; n_bits = 18; break;
case 0xff70b000: code = 0x37cb5; n_bits = 18; break;
case 0xff203060: code = 0x37cd5; n_bits = 18; break;
case 0xff301040: code = 0x37d35; n_bits = 18; break;
case 0xfff0a080: code = 0x37d55; n_bits = 18; break;
case 0xff101090: code = 0x37db5; n_bits = 18; break;
case 0xffc00060: code = 0x37dd5; n_bits = 18; break;
case 0xff204000: code = 0x37e35; n_bits = 18; break;
case 0xff900060: code = 0x37ea9; n_bits = 18; break;
case 0xff90a090: code = 0x37eb5; n_bits = 18; break;
case 0xff206020: code = 0x37ed5; n_bits = 18; break;
case 0xff7090e0: code = 0x37f35; n_bits = 18; break;
case 0xfff01050: code = 0x37f55; n_bits = 18; break;
case 0xff006020: code = 0x37fa9; n_bits = 18; break;
case 0xff6010e0: code = 0x37fb5; n_bits = 18; break;
case 0xff300070: code = 0x37fd5; n_bits = 18; break;
case 0xffd05070: code = 0x38035; n_bits = 18; break;
case 0xff8040d0: code = 0x380b5; n_bits = 18; break;
case 0xfff0d000: code = 0x380d5; n_bits = 18; break;
case 0xff101060: code = 0x38135; n_bits = 18; break;
case 0xff40b090: code = 0x38155; n_bits = 18; break;
case 0xff7010f0: code = 0x381b5; n_bits = 18; break;
case 0xffd0d000: code = 0x381d5; n_bits = 18; break;
case 0xffb06090: code = 0x38235; n_bits = 18; break;
case 0xff700030: code = 0x382b5; n_bits = 18; break;
case 0xff502050: code = 0x382d5; n_bits = 18; break;
case 0xffc010a0: code = 0x38335; n_bits = 18; break;
case 0xffd010e0: code = 0x38355; n_bits = 18; break;
case 0xffd01030: code = 0x383a9; n_bits = 18; break;
case 0xff6040d0: code = 0x383b5; n_bits = 18; break;
case 0xff102020: code = 0x383d5; n_bits = 18; break;
case 0xffb0b090: code = 0x38435; n_bits = 18; break;
case 0xff206000: code = 0x384b5; n_bits = 18; break;
case 0xff9090f0: code = 0x384d5; n_bits = 18; break;
case 0xffb0d060: code = 0x38535; n_bits = 18; break;
case 0xfff040d0: code = 0x38555; n_bits = 18; break;
case 0xffc080b0: code = 0x385b5; n_bits = 18; break;
case 0xffc04090: code = 0x385d5; n_bits = 18; break;
case 0xff302000: code = 0x38635; n_bits = 18; break;
case 0xffb0d080: code = 0x386b5; n_bits = 18; break;
case 0xff5070e0: code = 0x386d5; n_bits = 18; break;
case 0xffb0b0c0: code = 0x38735; n_bits = 18; break;
case 0xff90b000: code = 0x38755; n_bits = 18; break;
case 0xffc010d0: code = 0x387a9; n_bits = 18; break;
case 0xff90d060: code = 0x387b5; n_bits = 18; break;
case 0xffe04000: code = 0x387d5; n_bits = 18; break;
case 0xff60b050: code = 0x38835; n_bits = 18; break;
case 0xff30b050: code = 0x388b5; n_bits = 18; break;
case 0xff403050: code = 0x388d5; n_bits = 18; break;
case 0xffc08040: code = 0x38935; n_bits = 18; break;
case 0xffc03090: code = 0x38955; n_bits = 18; break;
case 0xff5050d0: code = 0x389b5; n_bits = 18; break;
case 0xff705020: code = 0x389d5; n_bits = 18; break;
case 0xff7090a0: code = 0x38a35; n_bits = 18; break;
case 0xff6060b0: code = 0x38ab5; n_bits = 18; break;
case 0xff8080d0: code = 0x38ad5; n_bits = 18; break;
case 0xff60c0b0: code = 0x38b35; n_bits = 18; break;
case 0xff70c0f0: code = 0x38b55; n_bits = 18; break;
case 0xffd0b0c0: code = 0x38ba9; n_bits = 18; break;
case 0xffb07090: code = 0x38bb5; n_bits = 18; break;
case 0xff1020e0: code = 0x38bd5; n_bits = 18; break;
case 0xff40e030: code = 0x38c35; n_bits = 18; break;
case 0xff00e090: code = 0x38cb5; n_bits = 18; break;
case 0xff504010: code = 0x38cd5; n_bits = 18; break;
case 0xff70e090: code = 0x38d35; n_bits = 18; break;
case 0xff40d020: code = 0x38d55; n_bits = 18; break;
case 0xff606090: code = 0x38db5; n_bits = 18; break;
case 0xffc02000: code = 0x38dd5; n_bits = 18; break;
case 0xff007000: code = 0x38e35; n_bits = 18; break;
case 0xffe0a080: code = 0x38eb5; n_bits = 18; break;
case 0xffc01050: code = 0x38ed5; n_bits = 18; break;
case 0xff608080: code = 0x38f35; n_bits = 18; break;
case 0xff501050: code = 0x38f55; n_bits = 18; break;
case 0xff70c0b0: code = 0x38fa9; n_bits = 18; break;
case 0xff808010: code = 0x38fb5; n_bits = 18; break;
case 0xff408080: code = 0x38fd5; n_bits = 18; break;
case 0xff40f060: code = 0x39035; n_bits = 18; break;
case 0xff00f0c0: code = 0x390b5; n_bits = 18; break;
case 0xff2060e0: code = 0x390d5; n_bits = 18; break;
case 0xff102010: code = 0x39135; n_bits = 18; break;
case 0xfff0d080: code = 0x39155; n_bits = 18; break;
case 0xff4050d0: code = 0x391b5; n_bits = 18; break;
case 0xff904030: code = 0x391d5; n_bits = 18; break;
case 0xffd0d090: code = 0x39235; n_bits = 18; break;
case 0xff507020: code = 0x392b5; n_bits = 18; break;
case 0xff50a020: code = 0x392d5; n_bits = 18; break;
case 0xff3020e0: code = 0x39335; n_bits = 18; break;
case 0xff001070: code = 0x39355; n_bits = 18; break;
case 0xffa040c0: code = 0x393a9; n_bits = 18; break;
case 0xff4070f0: code = 0x393b5; n_bits = 18; break;
case 0xffc0e020: code = 0x393d5; n_bits = 18; break;
case 0xff00f010: code = 0x39435; n_bits = 18; break;
case 0xff406060: code = 0x394b5; n_bits = 18; break;
case 0xff90e000: code = 0x394d5; n_bits = 18; break;
case 0xff807060: code = 0x39535; n_bits = 18; break;
case 0xff7090c0: code = 0x39555; n_bits = 18; break;
case 0xff906060: code = 0x395b5; n_bits = 18; break;
case 0xff308080: code = 0x395d5; n_bits = 18; break;
case 0xff102090: code = 0x39635; n_bits = 18; break;
case 0xff8050f0: code = 0x396b5; n_bits = 18; break;
case 0xff00c080: code = 0x396d5; n_bits = 18; break;
case 0xffc050b0: code = 0x39735; n_bits = 18; break;
case 0xffe00050: code = 0x39755; n_bits = 18; break;
case 0xff20a000: code = 0x397a9; n_bits = 18; break;
case 0xfff010d0: code = 0x397b5; n_bits = 18; break;
case 0xff803040: code = 0x397d5; n_bits = 18; break;
case 0xff7050d0: code = 0x39835; n_bits = 18; break;
case 0xff2040d0: code = 0x398b5; n_bits = 18; break;
case 0xff20a040: code = 0x398d5; n_bits = 18; break;
case 0xff100090: code = 0x39935; n_bits = 18; break;
case 0xfff0f020: code = 0x39955; n_bits = 18; break;
case 0xff9040f0: code = 0x399b5; n_bits = 18; break;
case 0xff10c050: code = 0x399d5; n_bits = 18; break;
case 0xffa0b060: code = 0x39a35; n_bits = 18; break;
case 0xffd0d010: code = 0x39ab5; n_bits = 18; break;
case 0xffc0e090: code = 0x39ad5; n_bits = 18; break;
case 0xffb030e0: code = 0x39b35; n_bits = 18; break;
case 0xff10d000: code = 0x39b55; n_bits = 18; break;
case 0xff50e010: code = 0x39ba9; n_bits = 18; break;
case 0xff60e0c0: code = 0x39bb5; n_bits = 18; break;
case 0xff60f050: code = 0x39bd5; n_bits = 18; break;
case 0xffa030f0: code = 0x39c35; n_bits = 18; break;
case 0xff4040a0: code = 0x39cb5; n_bits = 18; break;
case 0xffa0a0f0: code = 0x39cd5; n_bits = 18; break;
case 0xff909030: code = 0x39d35; n_bits = 18; break;
case 0xff10f0d0: code = 0x39d55; n_bits = 18; break;
case 0xffc05050: code = 0x39db5; n_bits = 18; break;
case 0xffc00050: code = 0x39dd5; n_bits = 18; break;
case 0xffb010e0: code = 0x39e35; n_bits = 18; break;
case 0xff00e030: code = 0x39ea9; n_bits = 18; break;
case 0xffe03060: code = 0x39eb5; n_bits = 18; break;
case 0xffc00080: code = 0x39ed5; n_bits = 18; break;
case 0xff50f030: code = 0x39f35; n_bits = 18; break;
case 0xff005020: code = 0x39f55; n_bits = 18; break;
case 0xffd080c0: code = 0x39fa9; n_bits = 18; break;
case 0xfff08080: code = 0x39fb5; n_bits = 18; break;
case 0xff3030d0: code = 0x39fd5; n_bits = 18; break;
case 0xff30f030: code = 0x3a035; n_bits = 18; break;
case 0xff5070c0: code = 0x3a0b5; n_bits = 18; break;
case 0xff70d010: code = 0x3a0d5; n_bits = 18; break;
case 0xff10e080: code = 0x3a135; n_bits = 18; break;
case 0xff0070f0: code = 0x3a155; n_bits = 18; break;
case 0xff50d040: code = 0x3a1b5; n_bits = 18; break;
case 0xff00d010: code = 0x3a1d5; n_bits = 18; break;
case 0xffd0e060: code = 0x3a235; n_bits = 18; break;
case 0xff50a080: code = 0x3a2b5; n_bits = 18; break;
case 0xff60b0b0: code = 0x3a2d5; n_bits = 18; break;
case 0xff2020b0: code = 0x3a335; n_bits = 18; break;
case 0xff0040e0: code = 0x3a355; n_bits = 18; break;
case 0xfff09000: code = 0x3a3a9; n_bits = 18; break;
case 0xff000030: code = 0x3a3b5; n_bits = 18; break;
case 0xff10e030: code = 0x3a3d5; n_bits = 18; break;
case 0xff202030: code = 0x3a435; n_bits = 18; break;
case 0xff4000b0: code = 0x3a4b5; n_bits = 18; break;
case 0xff700080: code = 0x3a4d5; n_bits = 18; break;
case 0xff20f040: code = 0x3a535; n_bits = 18; break;
case 0xff80d040: code = 0x3a555; n_bits = 18; break;
case 0xffd0e030: code = 0x3a5b5; n_bits = 18; break;
case 0xff20c030: code = 0x3a5d5; n_bits = 18; break;
case 0xfff020f0: code = 0x3a635; n_bits = 18; break;
case 0xff403070: code = 0x3a6b5; n_bits = 18; break;
case 0xff80f0e0: code = 0x3a6d5; n_bits = 18; break;
case 0xff903060: code = 0x3a735; n_bits = 18; break;
case 0xff50b0a0: code = 0x3a755; n_bits = 18; break;
case 0xff20d060: code = 0x3a7a9; n_bits = 18; break;
case 0xff204080: code = 0x3a7b5; n_bits = 18; break;
case 0xffc0e050: code = 0x3a7d5; n_bits = 18; break;
case 0xfff0a0d0: code = 0x3a835; n_bits = 18; break;
case 0xff402070: code = 0x3a8b5; n_bits = 18; break;
case 0xff8050d0: code = 0x3a8d5; n_bits = 18; break;
case 0xffe06030: code = 0x3a935; n_bits = 18; break;
case 0xffd070b0: code = 0x3a955; n_bits = 18; break;
case 0xfff08030: code = 0x3a9b5; n_bits = 18; break;
case 0xff30d0a0: code = 0x3a9d5; n_bits = 18; break;
case 0xffe06050: code = 0x3aa35; n_bits = 18; break;
case 0xff5080c0: code = 0x3aab5; n_bits = 18; break;
case 0xff607030: code = 0x3aad5; n_bits = 18; break;
case 0xff30e040: code = 0x3ab35; n_bits = 18; break;
case 0xff708090: code = 0x3ab55; n_bits = 18; break;
case 0xfff06090: code = 0x3aba9; n_bits = 18; break;
case 0xff20f050: code = 0x3abb5; n_bits = 18; break;
case 0xfff00020: code = 0x3abd5; n_bits = 18; break;
case 0xfff0f0b0: code = 0x3ac35; n_bits = 18; break;
case 0xff9050b0: code = 0x3acb5; n_bits = 18; break;
case 0xff803000: code = 0x3acd5; n_bits = 18; break;
case 0xfff000c0: code = 0x3ad35; n_bits = 18; break;
case 0xfff0e050: code = 0x3ad55; n_bits = 18; break;
case 0xff603030: code = 0x3adb5; n_bits = 18; break;
case 0xffd05090: code = 0x3add5; n_bits = 18; break;
case 0xffb0f000: code = 0x3ae35; n_bits = 18; break;
case 0xffb010a0: code = 0x3aeb5; n_bits = 18; break;
case 0xff701080: code = 0x3aed5; n_bits = 18; break;
case 0xff40f000: code = 0x3af35; n_bits = 18; break;
case 0xff9060b0: code = 0x3af55; n_bits = 18; break;
case 0xff205060: code = 0x3afa9; n_bits = 18; break;
case 0xff70e0f0: code = 0x3afb5; n_bits = 18; break;
case 0xff30d040: code = 0x3afd5; n_bits = 18; break;
case 0xff1040f0: code = 0x3b035; n_bits = 18; break;
case 0xff7080b0: code = 0x3b0b5; n_bits = 18; break;
case 0xff303020: code = 0x3b0d5; n_bits = 18; break;
case 0xff401000: code = 0x3b135; n_bits = 18; break;
case 0xffb09040: code = 0x3b155; n_bits = 18; break;
case 0xff30b020: code = 0x3b1b5; n_bits = 18; break;
case 0xff40c030: code = 0x3b1d5; n_bits = 18; break;
case 0xffb06030: code = 0x3b235; n_bits = 18; break;
case 0xff8030e0: code = 0x3b2b5; n_bits = 18; break;
case 0xff80a0c0: code = 0x3b2d5; n_bits = 18; break;
case 0xff802060: code = 0x3b335; n_bits = 18; break;
case 0xff505000: code = 0x3b355; n_bits = 18; break;
case 0xffa030c0: code = 0x3b3a9; n_bits = 18; break;
case 0xffa0c070: code = 0x3b3b5; n_bits = 18; break;
case 0xff500060: code = 0x3b3d5; n_bits = 18; break;
case 0xff30e000: code = 0x3b435; n_bits = 18; break;
case 0xff50e0d0: code = 0x3b4b5; n_bits = 18; break;
case 0xff20c010: code = 0x3b4d5; n_bits = 18; break;
case 0xff002060: code = 0x3b535; n_bits = 18; break;
case 0xff60d090: code = 0x3b555; n_bits = 18; break;
case 0xffa08030: code = 0x3b5b5; n_bits = 18; break;
case 0xff305020: code = 0x3b5d5; n_bits = 18; break;
case 0xff706080: code = 0x3b635; n_bits = 18; break;
case 0xffa070d0: code = 0x3b6a9; n_bits = 18; break;
case 0xff802090: code = 0x3b6b5; n_bits = 18; break;
case 0xff000010: code = 0x3b6d5; n_bits = 18; break;
case 0xff702090: code = 0x3b735; n_bits = 18; break;
case 0xfff0d0c0: code = 0x3b755; n_bits = 18; break;
case 0xffb000c0: code = 0x3b7a9; n_bits = 18; break;
case 0xff500010: code = 0x3b7b5; n_bits = 18; break;
case 0xff103070: code = 0x3b7d5; n_bits = 18; break;
case 0xffd01040: code = 0x3b835; n_bits = 18; break;
case 0xff001090: code = 0x3b8b5; n_bits = 18; break;
case 0xff1020a0: code = 0x3b8d5; n_bits = 18; break;
case 0xff408050: code = 0x3b935; n_bits = 18; break;
case 0xffd060e0: code = 0x3b955; n_bits = 18; break;
case 0xff901090: code = 0x3b9b5; n_bits = 18; break;
case 0xff40a040: code = 0x3b9d5; n_bits = 18; break;
case 0xffb0e070: code = 0x3ba35; n_bits = 18; break;
case 0xff801050: code = 0x3bab5; n_bits = 18; break;
case 0xff304020: code = 0x3bad5; n_bits = 18; break;
case 0xffe010d0: code = 0x3bb35; n_bits = 18; break;
case 0xffb080d0: code = 0x3bb55; n_bits = 18; break;
case 0xffb01000: code = 0x3bba9; n_bits = 18; break;
case 0xff907010: code = 0x3bbb5; n_bits = 18; break;
case 0xff6090d0: code = 0x3bbd5; n_bits = 18; break;
case 0xff605080: code = 0x3bc35; n_bits = 18; break;
case 0xff70c0a0: code = 0x3bcb5; n_bits = 18; break;
case 0xff40b030: code = 0x3bcd5; n_bits = 18; break;
case 0xff500000: code = 0x3bd35; n_bits = 18; break;
case 0xff2060f0: code = 0x3bd55; n_bits = 18; break;
case 0xffc090c0: code = 0x3bdb5; n_bits = 18; break;
case 0xffc04060: code = 0x3bdd5; n_bits = 18; break;
case 0xff6090e0: code = 0x3be35; n_bits = 18; break;
case 0xffb03040: code = 0x3bea9; n_bits = 18; break;
case 0xff90e020: code = 0x3beb5; n_bits = 18; break;
case 0xff60d030: code = 0x3bed5; n_bits = 18; break;
case 0xffc0c030: code = 0x3bf35; n_bits = 18; break;
case 0xffc08010: code = 0x3bf55; n_bits = 18; break;
case 0xfff07020: code = 0x3bfa9; n_bits = 18; break;
case 0xff20c020: code = 0x3bfb5; n_bits = 18; break;
case 0xff508040: code = 0x3bfd5; n_bits = 18; break;
case 0xff001000: code = 0x3c035; n_bits = 18; break;
case 0xfff06080: code = 0x3c0b5; n_bits = 18; break;
case 0xff3090e0: code = 0x3c0d5; n_bits = 18; break;
case 0xffb0d040: code = 0x3c135; n_bits = 18; break;
case 0xff90f060: code = 0x3c155; n_bits = 18; break;
case 0xffa0e000: code = 0x3c1b5; n_bits = 18; break;
case 0xffe07080: code = 0x3c1d5; n_bits = 18; break;
case 0xffc09010: code = 0x3c235; n_bits = 18; break;
case 0xff501070: code = 0x3c2b5; n_bits = 18; break;
case 0xff303090: code = 0x3c2d5; n_bits = 18; break;
case 0xffe09070: code = 0x3c335; n_bits = 18; break;
case 0xff20c0a0: code = 0x3c355; n_bits = 18; break;
case 0xff20b030: code = 0x3c3a9; n_bits = 18; break;
case 0xff305000: code = 0x3c3b5; n_bits = 18; break;
case 0xff309010: code = 0x3c3d5; n_bits = 18; break;
case 0xffb010b0: code = 0x3c435; n_bits = 18; break;
case 0xffe010f0: code = 0x3c4b5; n_bits = 18; break;
case 0xff10e0d0: code = 0x3c4d5; n_bits = 18; break;
case 0xff40e000: code = 0x3c535; n_bits = 18; break;
case 0xff50a0f0: code = 0x3c555; n_bits = 18; break;
case 0xfff03070: code = 0x3c5b5; n_bits = 18; break;
case 0xff20a0b0: code = 0x3c5d5; n_bits = 18; break;
case 0xff202010: code = 0x3c635; n_bits = 18; break;
case 0xff706000: code = 0x3c6b5; n_bits = 18; break;
case 0xffa0e010: code = 0x3c6d5; n_bits = 18; break;
case 0xff70a000: code = 0x3c735; n_bits = 18; break;
case 0xff4070e0: code = 0x3c755; n_bits = 18; break;
case 0xffe0d030: code = 0x3c7a9; n_bits = 18; break;
case 0xff8030f0: code = 0x3c7b5; n_bits = 18; break;
case 0xffe020c0: code = 0x3c7d5; n_bits = 18; break;
case 0xff905060: code = 0x3c835; n_bits = 18; break;
case 0xff601030: code = 0x3c8b5; n_bits = 18; break;
case 0xffe0d070: code = 0x3c8d5; n_bits = 18; break;
case 0xff0010a0: code = 0x3c935; n_bits = 18; break;
case 0xff10d0a0: code = 0x3c955; n_bits = 18; break;
case 0xff9070d0: code = 0x3c9b5; n_bits = 18; break;
case 0xff50c060: code = 0x3c9d5; n_bits = 18; break;
case 0xffc00070: code = 0x3ca35; n_bits = 18; break;
case 0xff707080: code = 0x3cab5; n_bits = 18; break;
case 0xffc0f020: code = 0x3cad5; n_bits = 18; break;
case 0xff205030: code = 0x3cb35; n_bits = 18; break;
case 0xff4090d0: code = 0x3cb55; n_bits = 18; break;
case 0xff8010a0: code = 0x3cba9; n_bits = 18; break;
case 0xff4020f0: code = 0x3cbb5; n_bits = 18; break;
case 0xfff0a000: code = 0x3cbd5; n_bits = 18; break;
case 0xffe02040: code = 0x3cc35; n_bits = 18; break;
case 0xff50c040: code = 0x3ccb5; n_bits = 18; break;
case 0xffd0e0e0: code = 0x3ccd5; n_bits = 18; break;
case 0xffe02000: code = 0x3cd35; n_bits = 18; break;
case 0xffb09070: code = 0x3cd55; n_bits = 18; break;
case 0xff30d050: code = 0x3cdb5; n_bits = 18; break;
case 0xffd0f070: code = 0x3cdd5; n_bits = 18; break;
case 0xfff02010: code = 0x3ce35; n_bits = 18; break;
case 0xff50e0b0: code = 0x3ceb5; n_bits = 18; break;
case 0xff30b0d0: code = 0x3ced5; n_bits = 18; break;
case 0xff201000: code = 0x3cf35; n_bits = 18; break;
case 0xffa02040: code = 0x3cf55; n_bits = 18; break;
case 0xffb00030: code = 0x3cfa9; n_bits = 18; break;
case 0xffb0c070: code = 0x3cfb5; n_bits = 18; break;
case 0xffa030a0: code = 0x3cfd5; n_bits = 18; break;
case 0xffb0e0f0: code = 0x3d035; n_bits = 18; break;
case 0xff400080: code = 0x3d0b5; n_bits = 18; break;
case 0xffe05070: code = 0x3d0d5; n_bits = 18; break;
case 0xff108080: code = 0x3d135; n_bits = 18; break;
case 0xff50e080: code = 0x3d155; n_bits = 18; break;
case 0xff60d070: code = 0x3d1b5; n_bits = 18; break;
case 0xff705070: code = 0x3d1d5; n_bits = 18; break;
case 0xff10b0c0: code = 0x3d235; n_bits = 18; break;
case 0xffe0a030: code = 0x3d2b5; n_bits = 18; break;
case 0xff7020b0: code = 0x3d2d5; n_bits = 18; break;
case 0xffd04040: code = 0x3d335; n_bits = 18; break;
case 0xffb070a0: code = 0x3d355; n_bits = 18; break;
case 0xffc05010: code = 0x3d3a9; n_bits = 18; break;
case 0xffc0c0c0: code = 0x3d3b5; n_bits = 18; break;
case 0xff7060c0: code = 0x3d3d5; n_bits = 18; break;
case 0xffb05060: code = 0x3d435; n_bits = 18; break;
case 0xff70c020: code = 0x3d4b5; n_bits = 18; break;
case 0xffc0b050: code = 0x3d4d5; n_bits = 18; break;
case 0xfff07030: code = 0x3d535; n_bits = 18; break;
case 0xff704010: code = 0x3d555; n_bits = 18; break;
case 0xff800060: code = 0x3d5b5; n_bits = 18; break;
case 0xff806030: code = 0x3d5d5; n_bits = 18; break;
case 0xff200010: code = 0x3d635; n_bits = 18; break;
case 0xff603000: code = 0x3d6a9; n_bits = 18; break;
case 0xff50d000: code = 0x3d6b5; n_bits = 18; break;
case 0xfff0b040: code = 0x3d6d5; n_bits = 18; break;
case 0xff2020c0: code = 0x3d735; n_bits = 18; break;
case 0xff20e0d0: code = 0x3d755; n_bits = 18; break;
case 0xffc00010: code = 0x3d7a9; n_bits = 18; break;
case 0xffa0a030: code = 0x3d7b5; n_bits = 18; break;
case 0xff604080: code = 0x3d7d5; n_bits = 18; break;
case 0xff60f0b0: code = 0x3d835; n_bits = 18; break;
case 0xff1000d0: code = 0x3d8b5; n_bits = 18; break;
case 0xffd08040: code = 0x3d8d5; n_bits = 18; break;
case 0xff00f0e0: code = 0x3d935; n_bits = 18; break;
case 0xff50c0c0: code = 0x3d955; n_bits = 18; break;
case 0xffd0d0e0: code = 0x3d9b5; n_bits = 18; break;
case 0xffe04020: code = 0x3d9d5; n_bits = 18; break;
case 0xff701090: code = 0x3da35; n_bits = 18; break;
case 0xffd03030: code = 0x3dab5; n_bits = 18; break;
case 0xff606070: code = 0x3dad5; n_bits = 18; break;
case 0xff103010: code = 0x3db35; n_bits = 18; break;
case 0xffa0e050: code = 0x3db55; n_bits = 18; break;
case 0xffb08020: code = 0x3dba9; n_bits = 18; break;
case 0xff207040: code = 0x3dbb5; n_bits = 18; break;
case 0xff90c0f0: code = 0x3dbd5; n_bits = 18; break;
case 0xfff0e040: code = 0x3dc35; n_bits = 18; break;
case 0xff10b060: code = 0x3dcb5; n_bits = 18; break;
case 0xff704070: code = 0x3dcd5; n_bits = 18; break;
case 0xff90b080: code = 0x3dd35; n_bits = 18; break;
case 0xff1040e0: code = 0x3dd55; n_bits = 18; break;
case 0xffe04090: code = 0x3ddb5; n_bits = 18; break;
case 0xff6050b0: code = 0x3ddd5; n_bits = 18; break;
case 0xffa00030: code = 0x3de35; n_bits = 18; break;
case 0xff70f0a0: code = 0x3dea9; n_bits = 18; break;
case 0xffc010b0: code = 0x3deb5; n_bits = 18; break;
case 0xffe08050: code = 0x3ded5; n_bits = 18; break;
case 0xff005010: code = 0x3df35; n_bits = 18; break;
case 0xff20f000: code = 0x3df55; n_bits = 18; break;
case 0xff507030: code = 0x3dfa9; n_bits = 18; break;
case 0xff2010e0: code = 0x3dfb5; n_bits = 18; break;
case 0xffe0a0a0: code = 0x3dfd5; n_bits = 18; break;
case 0xffe04050: code = 0x3e035; n_bits = 18; break;
case 0xff80d0e0: code = 0x3e0b5; n_bits = 18; break;
case 0xff50e050: code = 0x3e0d5; n_bits = 18; break;
case 0xff70f0c0: code = 0x3e135; n_bits = 18; break;
case 0xffb01080: code = 0x3e155; n_bits = 18; break;
case 0xff10e0a0: code = 0x3e1b5; n_bits = 18; break;
case 0xffb0d070: code = 0x3e1d5; n_bits = 18; break;
case 0xff6030c0: code = 0x3e235; n_bits = 18; break;
case 0xff000060: code = 0x3e2b5; n_bits = 18; break;
case 0xff204030: code = 0x3e2d5; n_bits = 18; break;
case 0xfff0a070: code = 0x3e335; n_bits = 18; break;
case 0xff20c0b0: code = 0x3e355; n_bits = 18; break;
case 0xffb0b080: code = 0x3e3a9; n_bits = 18; break;
case 0xffa040f0: code = 0x3e3b5; n_bits = 18; break;
case 0xffb0e020: code = 0x3e3d5; n_bits = 18; break;
case 0xfff08040: code = 0x3e435; n_bits = 18; break;
case 0xff90a0d0: code = 0x3e4b5; n_bits = 18; break;
case 0xffa0d060: code = 0x3e4d5; n_bits = 18; break;
case 0xff50e030: code = 0x3e535; n_bits = 18; break;
case 0xffe010b0: code = 0x3e555; n_bits = 18; break;
case 0xff8070f0: code = 0x3e5b5; n_bits = 18; break;
case 0xffa0e0e0: code = 0x3e5d5; n_bits = 18; break;
case 0xffa0c080: code = 0x3e635; n_bits = 18; break;
case 0xffa040b0: code = 0x3e6b5; n_bits = 18; break;
case 0xff40c020: code = 0x3e6d5; n_bits = 18; break;
case 0xfff080d0: code = 0x3e735; n_bits = 18; break;
case 0xffd0f0d0: code = 0x3e755; n_bits = 18; break;
case 0xff00e0a0: code = 0x3e7a9; n_bits = 18; break;
case 0xff90f050: code = 0x3e7b5; n_bits = 18; break;
case 0xff90b030: code = 0x3e7d5; n_bits = 18; break;
case 0xff100060: code = 0x3e835; n_bits = 18; break;
case 0xff1010a0: code = 0x3e8b5; n_bits = 18; break;
case 0xff50c090: code = 0x3e8d5; n_bits = 18; break;
case 0xffe0a070: code = 0x3e935; n_bits = 18; break;
case 0xff200040: code = 0x3e955; n_bits = 18; break;
case 0xffd040d0: code = 0x3e9b5; n_bits = 18; break;
case 0xff90e0e0: code = 0x3e9d5; n_bits = 18; break;
case 0xff507080: code = 0x3ea35; n_bits = 18; break;
case 0xffb05040: code = 0x3eab5; n_bits = 18; break;
case 0xffc05080: code = 0x3ead5; n_bits = 18; break;
case 0xfff01060: code = 0x3eb35; n_bits = 18; break;
case 0xff406040: code = 0x3eb55; n_bits = 18; break;
case 0xff4000f0: code = 0x3eba9; n_bits = 18; break;
case 0xfff04040: code = 0x3ebb5; n_bits = 18; break;
case 0xffb020a0: code = 0x3ebd5; n_bits = 18; break;
case 0xffa0c010: code = 0x3ec35; n_bits = 18; break;
case 0xff50d010: code = 0x3ecb5; n_bits = 18; break;
case 0xffe08070: code = 0x3ecd5; n_bits = 18; break;
case 0xff209060: code = 0x3ed35; n_bits = 18; break;
case 0xffe000f0: code = 0x3ed55; n_bits = 18; break;
case 0xff9060d0: code = 0x3edb5; n_bits = 18; break;
case 0xff40b000: code = 0x3edd5; n_bits = 18; break;
case 0xff708070: code = 0x3ee35; n_bits = 18; break;
case 0xff108070: code = 0x3eeb5; n_bits = 18; break;
case 0xffb06000: code = 0x3eed5; n_bits = 18; break;
case 0xff808070: code = 0x3ef35; n_bits = 18; break;
case 0xff601080: code = 0x3ef55; n_bits = 18; break;
case 0xff80c0e0: code = 0x3efa9; n_bits = 18; break;
case 0xff700070: code = 0x3efb5; n_bits = 18; break;
case 0xff4070b0: code = 0x3efd5; n_bits = 18; break;
case 0xff205090: code = 0x3f035; n_bits = 18; break;
case 0xff604090: code = 0x3f0b5; n_bits = 18; break;
case 0xffe02010: code = 0x3f0d5; n_bits = 18; break;
case 0xffc08080: code = 0x3f135; n_bits = 18; break;
case 0xffc0e000: code = 0x3f155; n_bits = 18; break;
case 0xffd05080: code = 0x3f1b5; n_bits = 18; break;
case 0xff70f000: code = 0x3f1d5; n_bits = 18; break;
case 0xff904080: code = 0x3f235; n_bits = 18; break;
case 0xff103020: code = 0x3f2b5; n_bits = 18; break;
case 0xffc06050: code = 0x3f2d5; n_bits = 18; break;
case 0xfff02030: code = 0x3f335; n_bits = 18; break;
case 0xffb0a070: code = 0x3f355; n_bits = 18; break;
case 0xffe0e000: code = 0x3f3a9; n_bits = 18; break;
case 0xfff05010: code = 0x3f3b5; n_bits = 18; break;
case 0xffb03070: code = 0x3f3d5; n_bits = 18; break;
case 0xffe0c000: code = 0x3f435; n_bits = 18; break;
case 0xff50f0a0: code = 0x3f4b5; n_bits = 18; break;
case 0xff10b000: code = 0x3f4d5; n_bits = 18; break;
case 0xff40f0a0: code = 0x3f535; n_bits = 18; break;
case 0xff6030b0: code = 0x3f555; n_bits = 18; break;
case 0xff805050: code = 0x3f5b5; n_bits = 18; break;
case 0xff604010: code = 0x3f5d5; n_bits = 18; break;
case 0xffc0d040: code = 0x3f635; n_bits = 18; break;
case 0xffe05020: code = 0x3f6a9; n_bits = 18; break;
case 0xff8080c0: code = 0x3f6b5; n_bits = 18; break;
case 0xffc0b030: code = 0x3f6d5; n_bits = 18; break;
case 0xffa06000: code = 0x3f735; n_bits = 18; break;
case 0xff700010: code = 0x3f755; n_bits = 18; break;
case 0xff90b070: code = 0x3f7a9; n_bits = 18; break;
case 0xffe06080: code = 0x3f7b5; n_bits = 18; break;
case 0xffc030a0: code = 0x3f7d5; n_bits = 18; break;
case 0xff9080f0: code = 0x3f835; n_bits = 18; break;
case 0xff00f060: code = 0x3f8b5; n_bits = 18; break;
case 0xffd07070: code = 0x3f8d5; n_bits = 18; break;
case 0xff707020: code = 0x3f935; n_bits = 18; break;
case 0xff6030e0: code = 0x3f955; n_bits = 18; break;
case 0xfff0b0d0: code = 0x3f9b5; n_bits = 18; break;
case 0xffb0a010: code = 0x3f9d5; n_bits = 18; break;
case 0xffd0a030: code = 0x3fa35; n_bits = 18; break;
case 0xff502000: code = 0x3fab5; n_bits = 18; break;
case 0xffa080b0: code = 0x3fad5; n_bits = 18; break;
case 0xff402000: code = 0x3fb35; n_bits = 18; break;
case 0xffb0f040: code = 0x3fb55; n_bits = 18; break;
case 0xffd06010: code = 0x3fba9; n_bits = 18; break;
case 0xffc08090: code = 0x3fbb5; n_bits = 18; break;
case 0xff808050: code = 0x3fbd5; n_bits = 18; break;
case 0xff40c070: code = 0x3fc35; n_bits = 18; break;
case 0xffe010e0: code = 0x3fcb5; n_bits = 18; break;
case 0xffd0d0f0: code = 0x3fcd5; n_bits = 18; break;
case 0xffc0b080: code = 0x3fd35; n_bits = 18; break;
case 0xffb010c0: code = 0x3fd55; n_bits = 18; break;
case 0xffa0f0a0: code = 0x3fdb5; n_bits = 18; break;
case 0xfff0c090: code = 0x3fdd5; n_bits = 18; break;
case 0xff103080: code = 0x3fe35; n_bits = 18; break;
case 0xff1040d0: code = 0x3fea9; n_bits = 18; break;
case 0xffc010e0: code = 0x3feb5; n_bits = 18; break;
case 0xffa000f0: code = 0x3fed5; n_bits = 18; break;
case 0xffc02050: code = 0x3ff35; n_bits = 18; break;
case 0xffb0f0e0: code = 0x3ff55; n_bits = 18; break;
case 0xff7010e0: code = 0x3ffa9; n_bits = 18; break;
case 0xffd09090: code = 0x3ffb5; n_bits = 18; break;
case 0xffd0f050: code = 0x3ffd5; n_bits = 18; break;
