// DO NOT EDIT - file generated by game/gen_huffman.py
case 0xff707070: code = 0x000; n_bits =  2; break;
case 0xfff0f0f0: code = 0x002; n_bits =  2; break;
case 0xff305050: code = 0x003; n_bits =  2; break;
case 0xff000000: code = 0x005; n_bits =  4; break;
case 0xff202020: code = 0x009; n_bits =  5; break;
case 0xffe0a040: code = 0x00d; n_bits =  6; break;
case 0xff404040: code = 0x019; n_bits =  6; break;
case 0xfff0f000: code = 0x021; n_bits =  6; break;
case 0xfff00000: code = 0x02d; n_bits =  6; break;
case 0xff505050: code = 0x03d; n_bits =  6; break;
case 0xfff0a040: code = 0x001; n_bits =  7; break;
case 0xff00f000: code = 0x011; n_bits =  7; break;
case 0xff00f0f0: code = 0x031; n_bits =  7; break;
case 0xff400000: code = 0x039; n_bits =  7; break;
case 0xfff000f0: code = 0x041; n_bits =  7; break;
case 0xff0000f0: code = 0x051; n_bits =  7; break;
case 0xff009000: code = 0x079; n_bits =  7; break;
case 0xff909000: code = 0x0f1; n_bits =  9; break;
case 0xff404000: code = 0x171; n_bits =  9; break;
case 0xff900000: code = 0x1f1; n_bits =  9; break;
case 0xff402010: code = 0x271; n_bits = 10; break;
case 0xff002000: code = 0x01d; n_bits = 11; break;
case 0xffa0d0d0: code = 0x071; n_bits = 17; break;
case 0xff40f010: code = 0x41d; n_bits = 17; break;
case 0xffb07070: code = 0x471; n_bits = 17; break;
case 0xff4000f0: code = 0x871; n_bits = 17; break;
case 0xff608020: code = 0xc71; n_bits = 17; break;
case 0xffa0e0b0: code = 0x1071; n_bits = 17; break;
case 0xff60a030: code = 0x141d; n_bits = 17; break;
case 0xffb00070: code = 0x1471; n_bits = 17; break;
case 0xff00d0a0: code = 0x1871; n_bits = 17; break;
case 0xffa0b050: code = 0x1c71; n_bits = 17; break;
case 0xff60d040: code = 0x2071; n_bits = 17; break;
case 0xfff0c060: code = 0x241d; n_bits = 17; break;
case 0xff7090f0: code = 0x2471; n_bits = 17; break;
case 0xff80f000: code = 0x2871; n_bits = 17; break;
case 0xffd0e070: code = 0x2c71; n_bits = 17; break;
case 0xffa040d0: code = 0x3071; n_bits = 17; break;
case 0xff809050: code = 0x3471; n_bits = 17; break;
case 0xfff0e0f0: code = 0x3871; n_bits = 17; break;
case 0xff00b0e0: code = 0x3c71; n_bits = 17; break;
case 0xff2090e0: code = 0x4071; n_bits = 17; break;
case 0xff3010c0: code = 0x441d; n_bits = 17; break;
case 0xff9080b0: code = 0x4471; n_bits = 17; break;
case 0xff3060e0: code = 0x4871; n_bits = 17; break;
case 0xff50a040: code = 0x4c71; n_bits = 17; break;
case 0xff2060b0: code = 0x5071; n_bits = 17; break;
case 0xff906020: code = 0x541d; n_bits = 17; break;
case 0xff101060: code = 0x5471; n_bits = 17; break;
case 0xffc020c0: code = 0x5871; n_bits = 17; break;
case 0xff80c090: code = 0x5c71; n_bits = 17; break;
case 0xff405070: code = 0x6071; n_bits = 17; break;
case 0xff70e000: code = 0x641d; n_bits = 17; break;
case 0xffb0c0a0: code = 0x6471; n_bits = 17; break;
case 0xfff0a020: code = 0x6871; n_bits = 17; break;
case 0xffc0a010: code = 0x6c71; n_bits = 17; break;
case 0xff60c050: code = 0x7071; n_bits = 17; break;
case 0xffa0c020: code = 0x7471; n_bits = 17; break;
case 0xffd06030: code = 0x7871; n_bits = 17; break;
case 0xff9070f0: code = 0x7c71; n_bits = 17; break;
case 0xff70c060: code = 0x8071; n_bits = 17; break;
case 0xff6030f0: code = 0x841d; n_bits = 17; break;
case 0xff001020: code = 0x8471; n_bits = 17; break;
case 0xff203050: code = 0x8871; n_bits = 17; break;
case 0xff709000: code = 0x8c71; n_bits = 17; break;
case 0xffe02050: code = 0x9071; n_bits = 17; break;
case 0xfff02080: code = 0x941d; n_bits = 17; break;
case 0xff309030: code = 0x9471; n_bits = 17; break;
case 0xffd010b0: code = 0x9871; n_bits = 17; break;
case 0xff8020d0: code = 0x9c71; n_bits = 17; break;
case 0xffd0b090: code = 0xa071; n_bits = 17; break;
case 0xff50b0e0: code = 0xa41d; n_bits = 17; break;
case 0xffa08010: code = 0xa471; n_bits = 17; break;
case 0xff004090: code = 0xa871; n_bits = 17; break;
case 0xff6040c0: code = 0xac71; n_bits = 17; break;
case 0xff704060: code = 0xb071; n_bits = 17; break;
case 0xffc060f0: code = 0xb471; n_bits = 17; break;
case 0xffe0a090: code = 0xb871; n_bits = 17; break;
case 0xfff090e0: code = 0xbc71; n_bits = 17; break;
case 0xff901040: code = 0xc071; n_bits = 17; break;
case 0xff207040: code = 0xc41d; n_bits = 17; break;
case 0xff602070: code = 0xc471; n_bits = 17; break;
case 0xff30f0f0: code = 0xc871; n_bits = 17; break;
case 0xff803080: code = 0xcc71; n_bits = 17; break;
case 0xff90d0d0: code = 0xd071; n_bits = 17; break;
case 0xff90e0d0: code = 0xd471; n_bits = 17; break;
case 0xff606060: code = 0xd871; n_bits = 17; break;
case 0xff2030a0: code = 0xdc71; n_bits = 17; break;
case 0xff00b0c0: code = 0xe071; n_bits = 17; break;
case 0xff809020: code = 0xe41d; n_bits = 17; break;
case 0xffe050b0: code = 0xe471; n_bits = 17; break;
case 0xffa0d0e0: code = 0xe871; n_bits = 17; break;
case 0xff20a0a0: code = 0xec71; n_bits = 17; break;
case 0xff105050: code = 0xf071; n_bits = 17; break;
case 0xff7020a0: code = 0xf471; n_bits = 17; break;
case 0xff801030: code = 0xf871; n_bits = 17; break;
case 0xff8020b0: code = 0xfc71; n_bits = 17; break;
case 0xff00c000: code = 0x10071; n_bits = 17; break;
case 0xffe0f000: code = 0x1041d; n_bits = 17; break;
case 0xff9040c0: code = 0x10471; n_bits = 17; break;
case 0xff40b020: code = 0x10871; n_bits = 17; break;
case 0xffc01000: code = 0x10c71; n_bits = 17; break;
case 0xff40e080: code = 0x11071; n_bits = 17; break;
case 0xffc060c0: code = 0x1141d; n_bits = 17; break;
case 0xff300020: code = 0x11471; n_bits = 17; break;
case 0xfff000a0: code = 0x11871; n_bits = 17; break;
case 0xffe080f0: code = 0x11c71; n_bits = 17; break;
case 0xffe0c030: code = 0x12071; n_bits = 17; break;
case 0xff808080: code = 0x1241d; n_bits = 17; break;
case 0xffe0f030: code = 0x12471; n_bits = 17; break;
case 0xffc0c0a0: code = 0x12871; n_bits = 17; break;
case 0xff207020: code = 0x12c71; n_bits = 17; break;
case 0xff50c0d0: code = 0x13071; n_bits = 17; break;
case 0xffe050e0: code = 0x13471; n_bits = 17; break;
case 0xff303080: code = 0x13871; n_bits = 17; break;
case 0xff60d0d0: code = 0x13c71; n_bits = 17; break;
case 0xff7070c0: code = 0x14071; n_bits = 17; break;
case 0xff007090: code = 0x1441d; n_bits = 17; break;
case 0xff50a0e0: code = 0x14471; n_bits = 17; break;
case 0xffe0b060: code = 0x14871; n_bits = 17; break;
case 0xff50c0f0: code = 0x14c71; n_bits = 17; break;
case 0xffc01040: code = 0x15071; n_bits = 17; break;
case 0xff4010f0: code = 0x1541d; n_bits = 17; break;
case 0xffd0f040: code = 0x15471; n_bits = 17; break;
case 0xff5060f0: code = 0x15871; n_bits = 17; break;
case 0xffc0a0a0: code = 0x15c71; n_bits = 17; break;
case 0xffc0d070: code = 0x16071; n_bits = 17; break;
case 0xff6000b0: code = 0x1641d; n_bits = 17; break;
case 0xff60b080: code = 0x16471; n_bits = 17; break;
case 0xff70a010: code = 0x16871; n_bits = 17; break;
case 0xffb0f0b0: code = 0x16c71; n_bits = 17; break;
case 0xff2090b0: code = 0x17071; n_bits = 17; break;
case 0xffe090c0: code = 0x17471; n_bits = 17; break;
case 0xff4020c0: code = 0x17871; n_bits = 17; break;
case 0xff509090: code = 0x17c71; n_bits = 17; break;
case 0xffb00000: code = 0x18071; n_bits = 17; break;
case 0xff10b0f0: code = 0x1841d; n_bits = 17; break;
case 0xff80a040: code = 0x18471; n_bits = 17; break;
case 0xfff0f0c0: code = 0x18871; n_bits = 17; break;
case 0xff5030e0: code = 0x18c71; n_bits = 17; break;
case 0xff90a050: code = 0x19071; n_bits = 17; break;
case 0xffa070d0: code = 0x1941d; n_bits = 17; break;
case 0xff40c0c0: code = 0x19471; n_bits = 17; break;
case 0xff502040: code = 0x19871; n_bits = 17; break;
case 0xffd04090: code = 0x19c71; n_bits = 17; break;
case 0xffe030c0: code = 0x1a071; n_bits = 17; break;
case 0xffd0d0a0: code = 0x1a41d; n_bits = 17; break;
case 0xff10d090: code = 0x1a471; n_bits = 17; break;
case 0xff60b000: code = 0x1a871; n_bits = 17; break;
case 0xff907010: code = 0x1ac71; n_bits = 17; break;
case 0xff900070: code = 0x1b071; n_bits = 17; break;
case 0xfff04020: code = 0x1b471; n_bits = 17; break;
case 0xff30c090: code = 0x1b871; n_bits = 17; break;
case 0xff500080: code = 0x1bc71; n_bits = 17; break;
case 0xffb03060: code = 0x1c071; n_bits = 17; break;
case 0xffa0c0a0: code = 0x1c41d; n_bits = 17; break;
case 0xffc010f0: code = 0x1c471; n_bits = 17; break;
case 0xffd07000: code = 0x1c871; n_bits = 17; break;
case 0xffa01090: code = 0x1cc71; n_bits = 17; break;
case 0xff20f0c0: code = 0x1d071; n_bits = 17; break;
case 0xff90a070: code = 0x1d471; n_bits = 17; break;
case 0xff60e0e0: code = 0x1d871; n_bits = 17; break;
case 0xffc00030: code = 0x1dc71; n_bits = 17; break;
case 0xffb09010: code = 0x1e071; n_bits = 17; break;
case 0xff506030: code = 0x1e41d; n_bits = 17; break;
case 0xff4060d0: code = 0x1e471; n_bits = 17; break;
case 0xff109080: code = 0x1e871; n_bits = 17; break;
case 0xfff03050: code = 0x1ec71; n_bits = 17; break;
case 0xff5050a0: code = 0x1f071; n_bits = 17; break;
case 0xffd05060: code = 0x1f471; n_bits = 17; break;
case 0xffd0f030: code = 0x1f871; n_bits = 17; break;
case 0xff30a0b0: code = 0x1fc71; n_bits = 17; break;
case 0xffc0a020: code = 0x05d; n_bits = 18; break;
case 0xffe070f0: code = 0x09d; n_bits = 18; break;
case 0xff20e080: code = 0x0dd; n_bits = 18; break;
case 0xff90c0a0: code = 0x11d; n_bits = 18; break;
case 0xffd08080: code = 0x15d; n_bits = 18; break;
case 0xffb0d070: code = 0x19d; n_bits = 18; break;
case 0xff003020: code = 0x1dd; n_bits = 18; break;
case 0xffc050e0: code = 0x21d; n_bits = 18; break;
case 0xff20f0d0: code = 0x25d; n_bits = 18; break;
case 0xffc01020: code = 0x29d; n_bits = 18; break;
case 0xffb03090: code = 0x2dd; n_bits = 18; break;
case 0xffe08040: code = 0x31d; n_bits = 18; break;
case 0xff108090: code = 0x35d; n_bits = 18; break;
case 0xfff0b0c0: code = 0x39d; n_bits = 18; break;
case 0xff60a080: code = 0x3dd; n_bits = 18; break;
case 0xff507010: code = 0x45d; n_bits = 18; break;
case 0xfff05060: code = 0x49d; n_bits = 18; break;
case 0xffd0a0c0: code = 0x4dd; n_bits = 18; break;
case 0xfff0d0e0: code = 0x51d; n_bits = 18; break;
case 0xffb0a080: code = 0x55d; n_bits = 18; break;
case 0xffc050a0: code = 0x59d; n_bits = 18; break;
case 0xffa09000: code = 0x5dd; n_bits = 18; break;
case 0xffa0c000: code = 0x61d; n_bits = 18; break;
case 0xff70d060: code = 0x65d; n_bits = 18; break;
case 0xff10e0b0: code = 0x69d; n_bits = 18; break;
case 0xffb020d0: code = 0x6dd; n_bits = 18; break;
case 0xffe0a030: code = 0x71d; n_bits = 18; break;
case 0xfff080d0: code = 0x75d; n_bits = 18; break;
case 0xff90b030: code = 0x79d; n_bits = 18; break;
case 0xff006080: code = 0x7dd; n_bits = 18; break;
case 0xff90e070: code = 0x85d; n_bits = 18; break;
case 0xff50c090: code = 0x89d; n_bits = 18; break;
case 0xff20c0c0: code = 0x8dd; n_bits = 18; break;
case 0xff309000: code = 0x91d; n_bits = 18; break;
case 0xffd010f0: code = 0x95d; n_bits = 18; break;
case 0xff505090: code = 0x99d; n_bits = 18; break;
case 0xff5090b0: code = 0x9dd; n_bits = 18; break;
case 0xffe02030: code = 0xa1d; n_bits = 18; break;
case 0xffc07090: code = 0xa5d; n_bits = 18; break;
case 0xff506040: code = 0xa9d; n_bits = 18; break;
case 0xff9020d0: code = 0xadd; n_bits = 18; break;
case 0xff5000c0: code = 0xb1d; n_bits = 18; break;
case 0xff604020: code = 0xb5d; n_bits = 18; break;
case 0xffb020a0: code = 0xb9d; n_bits = 18; break;
case 0xffd05030: code = 0xbdd; n_bits = 18; break;
case 0xff20e090: code = 0xc1d; n_bits = 18; break;
case 0xffe0b050: code = 0xc5d; n_bits = 18; break;
case 0xffb0f030: code = 0xc9d; n_bits = 18; break;
case 0xff603060: code = 0xcdd; n_bits = 18; break;
case 0xff508060: code = 0xd1d; n_bits = 18; break;
case 0xff701060: code = 0xd5d; n_bits = 18; break;
case 0xff8030b0: code = 0xd9d; n_bits = 18; break;
case 0xffe04010: code = 0xddd; n_bits = 18; break;
case 0xff709050: code = 0xe1d; n_bits = 18; break;
case 0xff107030: code = 0xe5d; n_bits = 18; break;
case 0xff50b0d0: code = 0xe9d; n_bits = 18; break;
case 0xff908070: code = 0xedd; n_bits = 18; break;
case 0xff007030: code = 0xf1d; n_bits = 18; break;
case 0xff808070: code = 0xf5d; n_bits = 18; break;
case 0xfff050f0: code = 0xf9d; n_bits = 18; break;
case 0xff004050: code = 0xfdd; n_bits = 18; break;
case 0xfff0f040: code = 0x105d; n_bits = 18; break;
case 0xffc0f080: code = 0x109d; n_bits = 18; break;
case 0xff50a010: code = 0x10dd; n_bits = 18; break;
case 0xff00d070: code = 0x111d; n_bits = 18; break;
case 0xff30e0e0: code = 0x115d; n_bits = 18; break;
case 0xffc07000: code = 0x119d; n_bits = 18; break;
case 0xffc0b020: code = 0x11dd; n_bits = 18; break;
case 0xff30d0e0: code = 0x121d; n_bits = 18; break;
case 0xff307020: code = 0x125d; n_bits = 18; break;
case 0xff107020: code = 0x129d; n_bits = 18; break;
case 0xffa0b0b0: code = 0x12dd; n_bits = 18; break;
case 0xff807020: code = 0x131d; n_bits = 18; break;
case 0xff004070: code = 0x135d; n_bits = 18; break;
case 0xffa07020: code = 0x139d; n_bits = 18; break;
case 0xffe0a0b0: code = 0x13dd; n_bits = 18; break;
case 0xff106030: code = 0x145d; n_bits = 18; break;
case 0xff50a0b0: code = 0x149d; n_bits = 18; break;
case 0xffa0d050: code = 0x14dd; n_bits = 18; break;
case 0xff8090f0: code = 0x151d; n_bits = 18; break;
case 0xff904040: code = 0x155d; n_bits = 18; break;
case 0xff709040: code = 0x159d; n_bits = 18; break;
case 0xff9080e0: code = 0x15dd; n_bits = 18; break;
case 0xffd080f0: code = 0x161d; n_bits = 18; break;
case 0xffa0a090: code = 0x165d; n_bits = 18; break;
case 0xff009020: code = 0x169d; n_bits = 18; break;
case 0xff80b0b0: code = 0x16dd; n_bits = 18; break;
case 0xff700010: code = 0x171d; n_bits = 18; break;
case 0xffa06000: code = 0x175d; n_bits = 18; break;
case 0xff10f010: code = 0x179d; n_bits = 18; break;
case 0xff4040e0: code = 0x17dd; n_bits = 18; break;
case 0xff201090: code = 0x185d; n_bits = 18; break;
case 0xffe0b0d0: code = 0x189d; n_bits = 18; break;
case 0xfff0a050: code = 0x18dd; n_bits = 18; break;
case 0xff00b0b0: code = 0x191d; n_bits = 18; break;
case 0xffd0a010: code = 0x195d; n_bits = 18; break;
case 0xffa0f0b0: code = 0x199d; n_bits = 18; break;
case 0xff90f070: code = 0x19dd; n_bits = 18; break;
case 0xff60e040: code = 0x1a1d; n_bits = 18; break;
case 0xff803010: code = 0x1a5d; n_bits = 18; break;
case 0xffa080b0: code = 0x1a9d; n_bits = 18; break;
case 0xff90a0b0: code = 0x1add; n_bits = 18; break;
case 0xff20d030: code = 0x1b1d; n_bits = 18; break;
case 0xff00e0b0: code = 0x1b5d; n_bits = 18; break;
case 0xff808050: code = 0x1b9d; n_bits = 18; break;
case 0xffe080a0: code = 0x1bdd; n_bits = 18; break;
case 0xff00c0e0: code = 0x1c1d; n_bits = 18; break;
case 0xff10e050: code = 0x1c5d; n_bits = 18; break;
case 0xffa0a000: code = 0x1c9d; n_bits = 18; break;
case 0xffc03080: code = 0x1cdd; n_bits = 18; break;
case 0xff601010: code = 0x1d1d; n_bits = 18; break;
case 0xff60f070: code = 0x1d5d; n_bits = 18; break;
case 0xfff0c090: code = 0x1d9d; n_bits = 18; break;
case 0xffe03040: code = 0x1ddd; n_bits = 18; break;
case 0xff806020: code = 0x1e1d; n_bits = 18; break;
case 0xff10b070: code = 0x1e5d; n_bits = 18; break;
case 0xffa000f0: code = 0x1e9d; n_bits = 18; break;
case 0xff70f060: code = 0x1edd; n_bits = 18; break;
case 0xffb0f0e0: code = 0x1f1d; n_bits = 18; break;
case 0xff60f060: code = 0x1f5d; n_bits = 18; break;
case 0xff208000: code = 0x1f9d; n_bits = 18; break;
case 0xff1070e0: code = 0x1fdd; n_bits = 18; break;
case 0xffc09050: code = 0x205d; n_bits = 18; break;
case 0xff00d040: code = 0x209d; n_bits = 18; break;
case 0xfff030d0: code = 0x20dd; n_bits = 18; break;
case 0xff003040: code = 0x211d; n_bits = 18; break;
case 0xff80b090: code = 0x215d; n_bits = 18; break;
case 0xff308070: code = 0x219d; n_bits = 18; break;
case 0xff804090: code = 0x21dd; n_bits = 18; break;
case 0xffc05010: code = 0x221d; n_bits = 18; break;
case 0xff206040: code = 0x225d; n_bits = 18; break;
case 0xfff00060: code = 0x229d; n_bits = 18; break;
case 0xff006010: code = 0x22dd; n_bits = 18; break;
case 0xffa03010: code = 0x231d; n_bits = 18; break;
case 0xffe00060: code = 0x235d; n_bits = 18; break;
case 0xffd0c010: code = 0x239d; n_bits = 18; break;
case 0xffb08060: code = 0x23dd; n_bits = 18; break;
case 0xffa03020: code = 0x245d; n_bits = 18; break;
case 0xff0090c0: code = 0x249d; n_bits = 18; break;
case 0xff2020a0: code = 0x24dd; n_bits = 18; break;
case 0xff5010f0: code = 0x251d; n_bits = 18; break;
case 0xffd08070: code = 0x255d; n_bits = 18; break;
case 0xffb08070: code = 0x259d; n_bits = 18; break;
case 0xff506060: code = 0x25dd; n_bits = 18; break;
case 0xfff070b0: code = 0x261d; n_bits = 18; break;
case 0xffa0f050: code = 0x265d; n_bits = 18; break;
case 0xffa0d040: code = 0x269d; n_bits = 18; break;
case 0xffe05000: code = 0x26dd; n_bits = 18; break;
case 0xff20e0d0: code = 0x271d; n_bits = 18; break;
case 0xff2020c0: code = 0x275d; n_bits = 18; break;
case 0xff604080: code = 0x279d; n_bits = 18; break;
case 0xff30d0c0: code = 0x27dd; n_bits = 18; break;
case 0xff109070: code = 0x285d; n_bits = 18; break;
case 0xffe0c0a0: code = 0x289d; n_bits = 18; break;
case 0xffc02060: code = 0x28dd; n_bits = 18; break;
case 0xffe000d0: code = 0x291d; n_bits = 18; break;
case 0xfff090c0: code = 0x295d; n_bits = 18; break;
case 0xff10b080: code = 0x299d; n_bits = 18; break;
case 0xff10c0e0: code = 0x29dd; n_bits = 18; break;
case 0xff306040: code = 0x2a1d; n_bits = 18; break;
case 0xff806070: code = 0x2a5d; n_bits = 18; break;
case 0xffa050f0: code = 0x2a9d; n_bits = 18; break;
case 0xff0060c0: code = 0x2add; n_bits = 18; break;
case 0xff00b060: code = 0x2b1d; n_bits = 18; break;
case 0xff90e010: code = 0x2b5d; n_bits = 18; break;
case 0xff90c0f0: code = 0x2b9d; n_bits = 18; break;
case 0xffb0f0d0: code = 0x2bdd; n_bits = 18; break;
case 0xff7080f0: code = 0x2c1d; n_bits = 18; break;
case 0xff605080: code = 0x2c5d; n_bits = 18; break;
case 0xff7070d0: code = 0x2c9d; n_bits = 18; break;
case 0xff600000: code = 0x2cdd; n_bits = 18; break;
case 0xff507090: code = 0x2d1d; n_bits = 18; break;
case 0xffa030b0: code = 0x2d5d; n_bits = 18; break;
case 0xffe0d040: code = 0x2d9d; n_bits = 18; break;
case 0xff5040b0: code = 0x2ddd; n_bits = 18; break;
case 0xff809080: code = 0x2e1d; n_bits = 18; break;
case 0xff907080: code = 0x2e5d; n_bits = 18; break;
case 0xff00a0c0: code = 0x2e9d; n_bits = 18; break;
case 0xff905010: code = 0x2edd; n_bits = 18; break;
case 0xff70a0c0: code = 0x2f1d; n_bits = 18; break;
case 0xff40f080: code = 0x2f5d; n_bits = 18; break;
case 0xff80a090: code = 0x2f9d; n_bits = 18; break;
case 0xffe040e0: code = 0x2fdd; n_bits = 18; break;
case 0xffb04020: code = 0x305d; n_bits = 18; break;
case 0xff101000: code = 0x309d; n_bits = 18; break;
case 0xff7040c0: code = 0x30dd; n_bits = 18; break;
case 0xffb090c0: code = 0x311d; n_bits = 18; break;
case 0xffb02070: code = 0x315d; n_bits = 18; break;
case 0xff903020: code = 0x319d; n_bits = 18; break;
case 0xff701030: code = 0x31dd; n_bits = 18; break;
case 0xffc04040: code = 0x321d; n_bits = 18; break;
case 0xff407050: code = 0x325d; n_bits = 18; break;
case 0xffc070d0: code = 0x329d; n_bits = 18; break;
case 0xffb0f020: code = 0x32dd; n_bits = 18; break;
case 0xff9010d0: code = 0x331d; n_bits = 18; break;
case 0xffa050a0: code = 0x335d; n_bits = 18; break;
case 0xfff0a000: code = 0x339d; n_bits = 18; break;
case 0xff40e010: code = 0x33dd; n_bits = 18; break;
case 0xfff0b090: code = 0x341d; n_bits = 18; break;
case 0xffb000e0: code = 0x345d; n_bits = 18; break;
case 0xffa08060: code = 0x349d; n_bits = 18; break;
case 0xff304070: code = 0x34dd; n_bits = 18; break;
case 0xffd0d060: code = 0x351d; n_bits = 18; break;
case 0xffe02000: code = 0x355d; n_bits = 18; break;
case 0xff10d030: code = 0x359d; n_bits = 18; break;
case 0xffd0a080: code = 0x35dd; n_bits = 18; break;
case 0xff704000: code = 0x361d; n_bits = 18; break;
case 0xff900040: code = 0x365d; n_bits = 18; break;
case 0xff8030d0: code = 0x369d; n_bits = 18; break;
case 0xff40a050: code = 0x36dd; n_bits = 18; break;
case 0xff302090: code = 0x371d; n_bits = 18; break;
case 0xff201000: code = 0x375d; n_bits = 18; break;
case 0xffe08090: code = 0x379d; n_bits = 18; break;
case 0xfff00010: code = 0x37dd; n_bits = 18; break;
case 0xffa07030: code = 0x385d; n_bits = 18; break;
case 0xff40a0a0: code = 0x389d; n_bits = 18; break;
case 0xffb020f0: code = 0x38dd; n_bits = 18; break;
case 0xffe00070: code = 0x391d; n_bits = 18; break;
case 0xff9020b0: code = 0x395d; n_bits = 18; break;
case 0xffc07010: code = 0x399d; n_bits = 18; break;
case 0xff10a070: code = 0x39dd; n_bits = 18; break;
case 0xff70e070: code = 0x3a1d; n_bits = 18; break;
case 0xffb0b010: code = 0x3a5d; n_bits = 18; break;
case 0xfff06010: code = 0x3a9d; n_bits = 18; break;
case 0xff80e0a0: code = 0x3add; n_bits = 18; break;
case 0xff304050: code = 0x3b1d; n_bits = 18; break;
case 0xffa07060: code = 0x3b5d; n_bits = 18; break;
case 0xffe020c0: code = 0x3b9d; n_bits = 18; break;
case 0xffa0a0a0: code = 0x3bdd; n_bits = 18; break;
case 0xff803060: code = 0x3c1d; n_bits = 18; break;
case 0xff103080: code = 0x3c5d; n_bits = 18; break;
case 0xffb0d090: code = 0x3c9d; n_bits = 18; break;
case 0xffc02030: code = 0x3cdd; n_bits = 18; break;
case 0xffb0c010: code = 0x3d1d; n_bits = 18; break;
case 0xff401070: code = 0x3d5d; n_bits = 18; break;
case 0xff707090: code = 0x3d9d; n_bits = 18; break;
case 0xff007080: code = 0x3ddd; n_bits = 18; break;
case 0xffa000d0: code = 0x3e1d; n_bits = 18; break;
case 0xff30d040: code = 0x3e5d; n_bits = 18; break;
case 0xffa070b0: code = 0x3e9d; n_bits = 18; break;
case 0xff504030: code = 0x3edd; n_bits = 18; break;
case 0xff3090e0: code = 0x3f1d; n_bits = 18; break;
case 0xff60c000: code = 0x3f5d; n_bits = 18; break;
case 0xfff0f070: code = 0x3f9d; n_bits = 18; break;
case 0xff80f060: code = 0x3fdd; n_bits = 18; break;
case 0xff708040: code = 0x405d; n_bits = 18; break;
case 0xff2060e0: code = 0x409d; n_bits = 18; break;
case 0xffe09050: code = 0x40dd; n_bits = 18; break;
case 0xfff08010: code = 0x411d; n_bits = 18; break;
case 0xff007060: code = 0x415d; n_bits = 18; break;
case 0xff70f0f0: code = 0x419d; n_bits = 18; break;
case 0xff1040c0: code = 0x41dd; n_bits = 18; break;
case 0xffa040c0: code = 0x421d; n_bits = 18; break;
case 0xff8010e0: code = 0x425d; n_bits = 18; break;
case 0xff4030c0: code = 0x429d; n_bits = 18; break;
case 0xffc0b040: code = 0x42dd; n_bits = 18; break;
case 0xff208050: code = 0x431d; n_bits = 18; break;
case 0xff706050: code = 0x435d; n_bits = 18; break;
case 0xffb04040: code = 0x439d; n_bits = 18; break;
case 0xffd0d030: code = 0x43dd; n_bits = 18; break;
case 0xffd09080: code = 0x445d; n_bits = 18; break;
case 0xffb040d0: code = 0x449d; n_bits = 18; break;
case 0xffc0f070: code = 0x44dd; n_bits = 18; break;
case 0xff7000b0: code = 0x451d; n_bits = 18; break;
case 0xff30a080: code = 0x455d; n_bits = 18; break;
case 0xffe0b090: code = 0x459d; n_bits = 18; break;
case 0xff0080b0: code = 0x45dd; n_bits = 18; break;
case 0xffd0c050: code = 0x461d; n_bits = 18; break;
case 0xffc01060: code = 0x465d; n_bits = 18; break;
case 0xffc0a0c0: code = 0x469d; n_bits = 18; break;
case 0xffd06080: code = 0x46dd; n_bits = 18; break;
case 0xff404080: code = 0x471d; n_bits = 18; break;
case 0xffc050b0: code = 0x475d; n_bits = 18; break;
case 0xff803040: code = 0x479d; n_bits = 18; break;
case 0xffa0f0f0: code = 0x47dd; n_bits = 18; break;
case 0xff30a010: code = 0x485d; n_bits = 18; break;
case 0xff106090: code = 0x489d; n_bits = 18; break;
case 0xff4030f0: code = 0x48dd; n_bits = 18; break;
case 0xff20a030: code = 0x491d; n_bits = 18; break;
case 0xff40b0b0: code = 0x495d; n_bits = 18; break;
case 0xff40f020: code = 0x499d; n_bits = 18; break;
case 0xff6020a0: code = 0x49dd; n_bits = 18; break;
case 0xff807050: code = 0x4a1d; n_bits = 18; break;
case 0xff20d0b0: code = 0x4a5d; n_bits = 18; break;
case 0xffb0a030: code = 0x4a9d; n_bits = 18; break;
case 0xff90f090: code = 0x4add; n_bits = 18; break;
case 0xff90a0e0: code = 0x4b1d; n_bits = 18; break;
case 0xffa0b090: code = 0x4b5d; n_bits = 18; break;
case 0xff60f050: code = 0x4b9d; n_bits = 18; break;
case 0xffa02060: code = 0x4bdd; n_bits = 18; break;
case 0xffa080e0: code = 0x4c1d; n_bits = 18; break;
case 0xffe01070: code = 0x4c5d; n_bits = 18; break;
case 0xff405080: code = 0x4c9d; n_bits = 18; break;
case 0xff4080d0: code = 0x4cdd; n_bits = 18; break;
case 0xff003030: code = 0x4d1d; n_bits = 18; break;
case 0xff50c070: code = 0x4d5d; n_bits = 18; break;
case 0xffc00050: code = 0x4d9d; n_bits = 18; break;
case 0xffa080d0: code = 0x4ddd; n_bits = 18; break;
case 0xff3080f0: code = 0x4e1d; n_bits = 18; break;
case 0xff406020: code = 0x4e5d; n_bits = 18; break;
case 0xff209080: code = 0x4e9d; n_bits = 18; break;
case 0xff60f030: code = 0x4edd; n_bits = 18; break;
case 0xffb0e080: code = 0x4f1d; n_bits = 18; break;
case 0xff50f030: code = 0x4f5d; n_bits = 18; break;
case 0xff209050: code = 0x4f9d; n_bits = 18; break;
case 0xfff09020: code = 0x4fdd; n_bits = 18; break;
case 0xff00e080: code = 0x505d; n_bits = 18; break;
case 0xffd00000: code = 0x509d; n_bits = 18; break;
case 0xffe08080: code = 0x50dd; n_bits = 18; break;
case 0xffa0f040: code = 0x511d; n_bits = 18; break;
case 0xfff01080: code = 0x515d; n_bits = 18; break;
case 0xff705020: code = 0x519d; n_bits = 18; break;
case 0xff50e0e0: code = 0x51dd; n_bits = 18; break;
case 0xffb0d030: code = 0x521d; n_bits = 18; break;
case 0xfff030c0: code = 0x525d; n_bits = 18; break;
case 0xff903040: code = 0x529d; n_bits = 18; break;
case 0xfff060d0: code = 0x52dd; n_bits = 18; break;
case 0xffb03080: code = 0x531d; n_bits = 18; break;
case 0xff1090d0: code = 0x535d; n_bits = 18; break;
case 0xff109090: code = 0x539d; n_bits = 18; break;
case 0xff000040: code = 0x53dd; n_bits = 18; break;
case 0xfff07070: code = 0x545d; n_bits = 18; break;
case 0xff00f070: code = 0x549d; n_bits = 18; break;
case 0xff503030: code = 0x54dd; n_bits = 18; break;
case 0xff4040f0: code = 0x551d; n_bits = 18; break;
case 0xffe07080: code = 0x555d; n_bits = 18; break;
case 0xff405050: code = 0x559d; n_bits = 18; break;
case 0xff60f0a0: code = 0x55dd; n_bits = 18; break;
case 0xffd0d080: code = 0x561d; n_bits = 18; break;
case 0xff60a070: code = 0x565d; n_bits = 18; break;
case 0xff80d0b0: code = 0x569d; n_bits = 18; break;
case 0xff202080: code = 0x56dd; n_bits = 18; break;
case 0xff30c000: code = 0x571d; n_bits = 18; break;
case 0xff608080: code = 0x575d; n_bits = 18; break;
case 0xff40b070: code = 0x579d; n_bits = 18; break;
case 0xff10b0a0: code = 0x57dd; n_bits = 18; break;
case 0xffe0e0b0: code = 0x585d; n_bits = 18; break;
case 0xff001060: code = 0x589d; n_bits = 18; break;
case 0xff20f010: code = 0x58dd; n_bits = 18; break;
case 0xff303000: code = 0x591d; n_bits = 18; break;
case 0xff2020e0: code = 0x595d; n_bits = 18; break;
case 0xff700050: code = 0x599d; n_bits = 18; break;
case 0xff30f010: code = 0x59dd; n_bits = 18; break;
case 0xff40b040: code = 0x5a1d; n_bits = 18; break;
case 0xffb050e0: code = 0x5a5d; n_bits = 18; break;
case 0xffe07030: code = 0x5a9d; n_bits = 18; break;
case 0xffa09020: code = 0x5add; n_bits = 18; break;
case 0xff00e070: code = 0x5b1d; n_bits = 18; break;
case 0xffe0f020: code = 0x5b5d; n_bits = 18; break;
case 0xffe04000: code = 0x5b9d; n_bits = 18; break;
case 0xff60b010: code = 0x5bdd; n_bits = 18; break;
case 0xffc060d0: code = 0x5c1d; n_bits = 18; break;
case 0xffd050d0: code = 0x5c5d; n_bits = 18; break;
case 0xffa00020: code = 0x5c9d; n_bits = 18; break;
case 0xff0030c0: code = 0x5cdd; n_bits = 18; break;
case 0xff402050: code = 0x5d1d; n_bits = 18; break;
case 0xff908060: code = 0x5d5d; n_bits = 18; break;
case 0xff102020: code = 0x5d9d; n_bits = 18; break;
case 0xff50a050: code = 0x5ddd; n_bits = 18; break;
case 0xffa070f0: code = 0x5e1d; n_bits = 18; break;
case 0xffc000f0: code = 0x5e5d; n_bits = 18; break;
case 0xffd0d000: code = 0x5e9d; n_bits = 18; break;
case 0xff20e050: code = 0x5edd; n_bits = 18; break;
case 0xfff0d000: code = 0x5f1d; n_bits = 18; break;
case 0xff30c0d0: code = 0x5f5d; n_bits = 18; break;
case 0xff80d070: code = 0x5f9d; n_bits = 18; break;
case 0xff30f0b0: code = 0x5fdd; n_bits = 18; break;
case 0xff80b0d0: code = 0x605d; n_bits = 18; break;
case 0xff00d0d0: code = 0x609d; n_bits = 18; break;
case 0xff8010c0: code = 0x60dd; n_bits = 18; break;
case 0xff6080b0: code = 0x611d; n_bits = 18; break;
case 0xff50d0a0: code = 0x615d; n_bits = 18; break;
case 0xfff07050: code = 0x619d; n_bits = 18; break;
case 0xffa060e0: code = 0x61dd; n_bits = 18; break;
case 0xffe04050: code = 0x621d; n_bits = 18; break;
case 0xffd030b0: code = 0x625d; n_bits = 18; break;
case 0xff409070: code = 0x629d; n_bits = 18; break;
case 0xffd0e0d0: code = 0x62dd; n_bits = 18; break;
case 0xff309070: code = 0x631d; n_bits = 18; break;
case 0xff507050: code = 0x635d; n_bits = 18; break;
case 0xff90e090: code = 0x639d; n_bits = 18; break;
case 0xff408060: code = 0x63dd; n_bits = 18; break;
case 0xff400020: code = 0x645d; n_bits = 18; break;
case 0xff507070: code = 0x649d; n_bits = 18; break;
case 0xffe0c050: code = 0x64dd; n_bits = 18; break;
case 0xffd04050: code = 0x651d; n_bits = 18; break;
case 0xff90a0f0: code = 0x655d; n_bits = 18; break;
case 0xff305020: code = 0x659d; n_bits = 18; break;
case 0xffd01070: code = 0x65dd; n_bits = 18; break;
case 0xffe03070: code = 0x661d; n_bits = 18; break;
case 0xff901010: code = 0x665d; n_bits = 18; break;
case 0xffa03060: code = 0x669d; n_bits = 18; break;
case 0xff80b0a0: code = 0x66dd; n_bits = 18; break;
case 0xfff0d0c0: code = 0x671d; n_bits = 18; break;
case 0xffe040a0: code = 0x675d; n_bits = 18; break;
case 0xffc0d080: code = 0x679d; n_bits = 18; break;
case 0xff509020: code = 0x67dd; n_bits = 18; break;
case 0xffd0b020: code = 0x685d; n_bits = 18; break;
case 0xff30a070: code = 0x689d; n_bits = 18; break;
case 0xffc04080: code = 0x68dd; n_bits = 18; break;
case 0xffa0e0f0: code = 0x691d; n_bits = 18; break;
case 0xff50d070: code = 0x695d; n_bits = 18; break;
case 0xff904050: code = 0x699d; n_bits = 18; break;
case 0xff20f0a0: code = 0x69dd; n_bits = 18; break;
case 0xff00d000: code = 0x6a1d; n_bits = 18; break;
case 0xff50d030: code = 0x6a5d; n_bits = 18; break;
case 0xff304020: code = 0x6a9d; n_bits = 18; break;
case 0xff10a090: code = 0x6add; n_bits = 18; break;
case 0xff506070: code = 0x6b1d; n_bits = 18; break;
case 0xff704050: code = 0x6b5d; n_bits = 18; break;
case 0xff6090d0: code = 0x6b9d; n_bits = 18; break;
case 0xff708050: code = 0x6bdd; n_bits = 18; break;
case 0xfff000e0: code = 0x6c1d; n_bits = 18; break;
case 0xfff0e0e0: code = 0x6c5d; n_bits = 18; break;
case 0xff30d010: code = 0x6c9d; n_bits = 18; break;
case 0xffd07060: code = 0x6cdd; n_bits = 18; break;
case 0xff30e0c0: code = 0x6d1d; n_bits = 18; break;
case 0xff5060b0: code = 0x6d5d; n_bits = 18; break;
case 0xff907020: code = 0x6d9d; n_bits = 18; break;
case 0xff0020d0: code = 0x6ddd; n_bits = 18; break;
case 0xff00b0f0: code = 0x6e1d; n_bits = 18; break;
case 0xffc010c0: code = 0x6e5d; n_bits = 18; break;
case 0xff60d030: code = 0x6e9d; n_bits = 18; break;
case 0xff8000d0: code = 0x6edd; n_bits = 18; break;
case 0xffc08010: code = 0x6f1d; n_bits = 18; break;
case 0xff7000d0: code = 0x6f5d; n_bits = 18; break;
case 0xffe000c0: code = 0x6f9d; n_bits = 18; break;
case 0xffc0f010: code = 0x6fdd; n_bits = 18; break;
case 0xff9050a0: code = 0x705d; n_bits = 18; break;
case 0xff8050d0: code = 0x709d; n_bits = 18; break;
case 0xffb0b0e0: code = 0x70dd; n_bits = 18; break;
case 0xffc0d030: code = 0x711d; n_bits = 18; break;
case 0xff009030: code = 0x715d; n_bits = 18; break;
case 0xff30b030: code = 0x719d; n_bits = 18; break;
case 0xff5020e0: code = 0x71dd; n_bits = 18; break;
case 0xff20a060: code = 0x721d; n_bits = 18; break;
case 0xff10a020: code = 0x725d; n_bits = 18; break;
case 0xfff080a0: code = 0x729d; n_bits = 18; break;
case 0xff206070: code = 0x72dd; n_bits = 18; break;
case 0xffb07040: code = 0x731d; n_bits = 18; break;
case 0xfff0b040: code = 0x735d; n_bits = 18; break;
case 0xfff00020: code = 0x739d; n_bits = 18; break;
case 0xffc080f0: code = 0x73dd; n_bits = 18; break;
case 0xffb04010: code = 0x741d; n_bits = 18; break;
case 0xff002080: code = 0x745d; n_bits = 18; break;
case 0xffa0b0c0: code = 0x749d; n_bits = 18; break;
case 0xffd08030: code = 0x74dd; n_bits = 18; break;
case 0xffe01080: code = 0x751d; n_bits = 18; break;
case 0xffa04080: code = 0x755d; n_bits = 18; break;
case 0xff70d050: code = 0x759d; n_bits = 18; break;
case 0xff101070: code = 0x75dd; n_bits = 18; break;
case 0xfff0b070: code = 0x761d; n_bits = 18; break;
case 0xff70e060: code = 0x765d; n_bits = 18; break;
case 0xffe0f040: code = 0x769d; n_bits = 18; break;
case 0xff50f000: code = 0x76dd; n_bits = 18; break;
case 0xff40e0b0: code = 0x771d; n_bits = 18; break;
case 0xff40f000: code = 0x775d; n_bits = 18; break;
case 0xff805030: code = 0x779d; n_bits = 18; break;
case 0xff60a090: code = 0x77dd; n_bits = 18; break;
case 0xff000050: code = 0x785d; n_bits = 18; break;
case 0xfff0c000: code = 0x789d; n_bits = 18; break;
case 0xff306030: code = 0x78dd; n_bits = 18; break;
case 0xff7010a0: code = 0x791d; n_bits = 18; break;
case 0xff007070: code = 0x795d; n_bits = 18; break;
case 0xffe0c060: code = 0x799d; n_bits = 18; break;
case 0xff80c0b0: code = 0x79dd; n_bits = 18; break;
case 0xff90b0b0: code = 0x7a1d; n_bits = 18; break;
case 0xff20f0e0: code = 0x7a5d; n_bits = 18; break;
case 0xff005060: code = 0x7a9d; n_bits = 18; break;
case 0xffb0c0b0: code = 0x7add; n_bits = 18; break;
case 0xff70a060: code = 0x7b1d; n_bits = 18; break;
case 0xff903060: code = 0x7b5d; n_bits = 18; break;
case 0xffc0e050: code = 0x7b9d; n_bits = 18; break;
case 0xff702030: code = 0x7bdd; n_bits = 18; break;
case 0xffe0e0a0: code = 0x7c1d; n_bits = 18; break;
case 0xff80d040: code = 0x7c5d; n_bits = 18; break;
case 0xff706010: code = 0x7c9d; n_bits = 18; break;
case 0xff3020b0: code = 0x7cdd; n_bits = 18; break;
case 0xffc06090: code = 0x7d1d; n_bits = 18; break;
case 0xfff030f0: code = 0x7d5d; n_bits = 18; break;
case 0xff10a050: code = 0x7d9d; n_bits = 18; break;
case 0xffe0b0e0: code = 0x7ddd; n_bits = 18; break;
case 0xff60d010: code = 0x7e1d; n_bits = 18; break;
case 0xff10e080: code = 0x7e5d; n_bits = 18; break;
case 0xff00d010: code = 0x7e9d; n_bits = 18; break;
case 0xff805060: code = 0x7edd; n_bits = 18; break;
case 0xff70d010: code = 0x7f1d; n_bits = 18; break;
case 0xffc0b060: code = 0x7f5d; n_bits = 18; break;
case 0xff500070: code = 0x7f9d; n_bits = 18; break;
case 0xff80a020: code = 0x7fdd; n_bits = 18; break;
case 0xff5000d0: code = 0x805d; n_bits = 18; break;
case 0xfff09090: code = 0x809d; n_bits = 18; break;
case 0xff70c090: code = 0x80dd; n_bits = 18; break;
case 0xffb01080: code = 0x811d; n_bits = 18; break;
case 0xff802080: code = 0x815d; n_bits = 18; break;
case 0xff90e0b0: code = 0x819d; n_bits = 18; break;
case 0xff4050d0: code = 0x81dd; n_bits = 18; break;
case 0xff103090: code = 0x821d; n_bits = 18; break;
case 0xffa0b040: code = 0x825d; n_bits = 18; break;
case 0xff60b090: code = 0x829d; n_bits = 18; break;
case 0xff6010a0: code = 0x82dd; n_bits = 18; break;
case 0xff200030: code = 0x831d; n_bits = 18; break;
case 0xff5010a0: code = 0x835d; n_bits = 18; break;
case 0xffd03000: code = 0x839d; n_bits = 18; break;
case 0xff00c0d0: code = 0x83dd; n_bits = 18; break;
case 0xff4020d0: code = 0x845d; n_bits = 18; break;
case 0xffc02040: code = 0x849d; n_bits = 18; break;
case 0xff5000e0: code = 0x84dd; n_bits = 18; break;
case 0xffd05020: code = 0x851d; n_bits = 18; break;
case 0xff30f070: code = 0x855d; n_bits = 18; break;
case 0xffc030c0: code = 0x859d; n_bits = 18; break;
case 0xff906060: code = 0x85dd; n_bits = 18; break;
case 0xffc0a0e0: code = 0x861d; n_bits = 18; break;
case 0xffa03070: code = 0x865d; n_bits = 18; break;
case 0xff30e0d0: code = 0x869d; n_bits = 18; break;
case 0xff8050f0: code = 0x86dd; n_bits = 18; break;
case 0xff70f0e0: code = 0x871d; n_bits = 18; break;
case 0xff10d0c0: code = 0x875d; n_bits = 18; break;
case 0xff30e0a0: code = 0x879d; n_bits = 18; break;
case 0xfff010d0: code = 0x87dd; n_bits = 18; break;
case 0xff70f0b0: code = 0x885d; n_bits = 18; break;
case 0xff20a0f0: code = 0x889d; n_bits = 18; break;
case 0xff70a070: code = 0x88dd; n_bits = 18; break;
case 0xff200040: code = 0x891d; n_bits = 18; break;
case 0xffb0d0c0: code = 0x895d; n_bits = 18; break;
case 0xff509000: code = 0x899d; n_bits = 18; break;
case 0xff9040f0: code = 0x89dd; n_bits = 18; break;
case 0xffc03070: code = 0x8a1d; n_bits = 18; break;
case 0xff60b030: code = 0x8a5d; n_bits = 18; break;
case 0xffe0d050: code = 0x8a9d; n_bits = 18; break;
case 0xffb0e050: code = 0x8add; n_bits = 18; break;
case 0xff40f050: code = 0x8b1d; n_bits = 18; break;
case 0xff203000: code = 0x8b5d; n_bits = 18; break;
case 0xff7090d0: code = 0x8b9d; n_bits = 18; break;
case 0xff50e040: code = 0x8bdd; n_bits = 18; break;
case 0xff30d020: code = 0x8c1d; n_bits = 18; break;
case 0xff00a0e0: code = 0x8c5d; n_bits = 18; break;
case 0xff2060c0: code = 0x8c9d; n_bits = 18; break;
case 0xff301010: code = 0x8cdd; n_bits = 18; break;
case 0xffd0c090: code = 0x8d1d; n_bits = 18; break;
case 0xff6060f0: code = 0x8d5d; n_bits = 18; break;
case 0xff207050: code = 0x8d9d; n_bits = 18; break;
case 0xffc05050: code = 0x8ddd; n_bits = 18; break;
case 0xff20c0f0: code = 0x8e1d; n_bits = 18; break;
case 0xff708070: code = 0x8e5d; n_bits = 18; break;
case 0xff70d020: code = 0x8e9d; n_bits = 18; break;
case 0xff7000a0: code = 0x8edd; n_bits = 18; break;
case 0xff308040: code = 0x8f1d; n_bits = 18; break;
case 0xff6000a0: code = 0x8f5d; n_bits = 18; break;
case 0xffc03010: code = 0x8f9d; n_bits = 18; break;
case 0xff5010b0: code = 0x8fdd; n_bits = 18; break;
case 0xff20d040: code = 0x905d; n_bits = 18; break;
case 0xff7050a0: code = 0x909d; n_bits = 18; break;
case 0xff8050b0: code = 0x90dd; n_bits = 18; break;
case 0xffc0e000: code = 0x911d; n_bits = 18; break;
case 0xffd0c0a0: code = 0x915d; n_bits = 18; break;
case 0xff90d0e0: code = 0x919d; n_bits = 18; break;
case 0xff5050d0: code = 0x91dd; n_bits = 18; break;
case 0xffd060a0: code = 0x921d; n_bits = 18; break;
case 0xfff0d040: code = 0x925d; n_bits = 18; break;
case 0xff903030: code = 0x929d; n_bits = 18; break;
case 0xff2000c0: code = 0x92dd; n_bits = 18; break;
case 0xff7020e0: code = 0x931d; n_bits = 18; break;
case 0xff300080: code = 0x935d; n_bits = 18; break;
case 0xff800050: code = 0x939d; n_bits = 18; break;
case 0xff90f020: code = 0x93dd; n_bits = 18; break;
case 0xff8060d0: code = 0x945d; n_bits = 18; break;
case 0xff1000e0: code = 0x949d; n_bits = 18; break;
case 0xffd09000: code = 0x94dd; n_bits = 18; break;
case 0xff6030b0: code = 0x951d; n_bits = 18; break;
case 0xff200050: code = 0x955d; n_bits = 18; break;
case 0xff7070a0: code = 0x959d; n_bits = 18; break;
case 0xff606090: code = 0x95dd; n_bits = 18; break;
case 0xff102060: code = 0x961d; n_bits = 18; break;
case 0xff0010b0: code = 0x965d; n_bits = 18; break;
case 0xff505040: code = 0x969d; n_bits = 18; break;
case 0xffe0a080: code = 0x96dd; n_bits = 18; break;
case 0xff0030a0: code = 0x971d; n_bits = 18; break;
case 0xff1030b0: code = 0x975d; n_bits = 18; break;
case 0xff5050f0: code = 0x979d; n_bits = 18; break;
case 0xff30a060: code = 0x97dd; n_bits = 18; break;
case 0xff700020: code = 0x985d; n_bits = 18; break;
case 0xff200020: code = 0x989d; n_bits = 18; break;
case 0xff204040: code = 0x98dd; n_bits = 18; break;
case 0xfff0e0b0: code = 0x991d; n_bits = 18; break;
case 0xff004000: code = 0x995d; n_bits = 18; break;
case 0xff90b050: code = 0x999d; n_bits = 18; break;
case 0xffc080b0: code = 0x99dd; n_bits = 18; break;
case 0xff2080c0: code = 0x9a1d; n_bits = 18; break;
case 0xff205080: code = 0x9a5d; n_bits = 18; break;
case 0xff60c020: code = 0x9a9d; n_bits = 18; break;
case 0xffb0d080: code = 0x9add; n_bits = 18; break;
case 0xff10e0f0: code = 0x9b1d; n_bits = 18; break;
case 0xff203090: code = 0x9b5d; n_bits = 18; break;
case 0xff40d030: code = 0x9b9d; n_bits = 18; break;
case 0xff90d060: code = 0x9bdd; n_bits = 18; break;
case 0xff006070: code = 0x9c1d; n_bits = 18; break;
case 0xffc03060: code = 0x9c5d; n_bits = 18; break;
case 0xff80b040: code = 0x9c9d; n_bits = 18; break;
case 0xff108000: code = 0x9cdd; n_bits = 18; break;
case 0xffc07060: code = 0x9d1d; n_bits = 18; break;
case 0xffb07020: code = 0x9d5d; n_bits = 18; break;
case 0xff3050e0: code = 0x9d9d; n_bits = 18; break;
case 0xffd0d0d0: code = 0x9ddd; n_bits = 18; break;
case 0xff7010e0: code = 0x9e1d; n_bits = 18; break;
case 0xfff040c0: code = 0x9e5d; n_bits = 18; break;
case 0xff2050d0: code = 0x9e9d; n_bits = 18; break;
case 0xfff0e020: code = 0x9edd; n_bits = 18; break;
case 0xffd090c0: code = 0x9f1d; n_bits = 18; break;
case 0xff0000a0: code = 0x9f5d; n_bits = 18; break;
case 0xfff04030: code = 0x9f9d; n_bits = 18; break;
case 0xffa06070: code = 0x9fdd; n_bits = 18; break;
case 0xfff02090: code = 0xa05d; n_bits = 18; break;
case 0xff1050c0: code = 0xa09d; n_bits = 18; break;
case 0xff3050a0: code = 0xa0dd; n_bits = 18; break;
case 0xff50e080: code = 0xa11d; n_bits = 18; break;
case 0xff60c0d0: code = 0xa15d; n_bits = 18; break;
case 0xff1090b0: code = 0xa19d; n_bits = 18; break;
case 0xff30b020: code = 0xa1dd; n_bits = 18; break;
case 0xffa06050: code = 0xa21d; n_bits = 18; break;
case 0xff008030: code = 0xa25d; n_bits = 18; break;
case 0xff70b0c0: code = 0xa29d; n_bits = 18; break;
case 0xff8030e0: code = 0xa2dd; n_bits = 18; break;
case 0xff60b0c0: code = 0xa31d; n_bits = 18; break;
case 0xffb02050: code = 0xa35d; n_bits = 18; break;
case 0xffb0d050: code = 0xa39d; n_bits = 18; break;
case 0xff906040: code = 0xa3dd; n_bits = 18; break;
case 0xff607040: code = 0xa45d; n_bits = 18; break;
case 0xff6010f0: code = 0xa49d; n_bits = 18; break;
case 0xffb01030: code = 0xa4dd; n_bits = 18; break;
case 0xff704010: code = 0xa51d; n_bits = 18; break;
case 0xff60e060: code = 0xa55d; n_bits = 18; break;
case 0xff607070: code = 0xa59d; n_bits = 18; break;
case 0xff102070: code = 0xa5dd; n_bits = 18; break;
case 0xffd04070: code = 0xa61d; n_bits = 18; break;
case 0xff201040: code = 0xa65d; n_bits = 18; break;
case 0xffd01090: code = 0xa69d; n_bits = 18; break;
case 0xffc06040: code = 0xa6dd; n_bits = 18; break;
case 0xff70c080: code = 0xa71d; n_bits = 18; break;
case 0xff00c020: code = 0xa75d; n_bits = 18; break;
case 0xff305060: code = 0xa79d; n_bits = 18; break;
case 0xff00b070: code = 0xa7dd; n_bits = 18; break;
case 0xff703080: code = 0xa85d; n_bits = 18; break;
case 0xff60c0c0: code = 0xa89d; n_bits = 18; break;
case 0xffb0d0a0: code = 0xa8dd; n_bits = 18; break;
case 0xff50c0c0: code = 0xa91d; n_bits = 18; break;
case 0xffd01000: code = 0xa95d; n_bits = 18; break;
case 0xffa060a0: code = 0xa99d; n_bits = 18; break;
case 0xff20a0c0: code = 0xa9dd; n_bits = 18; break;
case 0xff00c0f0: code = 0xaa1d; n_bits = 18; break;
case 0xffd0b000: code = 0xaa5d; n_bits = 18; break;
case 0xff60f080: code = 0xaa9d; n_bits = 18; break;
case 0xff801050: code = 0xaadd; n_bits = 18; break;
case 0xffe0b0f0: code = 0xab1d; n_bits = 18; break;
case 0xff10d080: code = 0xab5d; n_bits = 18; break;
case 0xffb09050: code = 0xab9d; n_bits = 18; break;
case 0xffa0b070: code = 0xabdd; n_bits = 18; break;
case 0xffd02000: code = 0xac1d; n_bits = 18; break;
case 0xff90d0a0: code = 0xac5d; n_bits = 18; break;
case 0xfff0e070: code = 0xac9d; n_bits = 18; break;
case 0xfff06020: code = 0xacdd; n_bits = 18; break;
case 0xff302020: code = 0xad1d; n_bits = 18; break;
case 0xff30c0f0: code = 0xad5d; n_bits = 18; break;
case 0xfff03080: code = 0xad9d; n_bits = 18; break;
case 0xff5040a0: code = 0xaddd; n_bits = 18; break;
case 0xffe06040: code = 0xae1d; n_bits = 18; break;
case 0xff0080a0: code = 0xae5d; n_bits = 18; break;
case 0xffc09090: code = 0xae9d; n_bits = 18; break;
case 0xff106060: code = 0xaedd; n_bits = 18; break;
case 0xff409010: code = 0xaf1d; n_bits = 18; break;
case 0xff1080a0: code = 0xaf5d; n_bits = 18; break;
case 0xffb07080: code = 0xaf9d; n_bits = 18; break;
case 0xff706020: code = 0xafdd; n_bits = 18; break;
case 0xff905060: code = 0xb05d; n_bits = 18; break;
case 0xffc0e0b0: code = 0xb09d; n_bits = 18; break;
case 0xff6090a0: code = 0xb0dd; n_bits = 18; break;
case 0xff8060a0: code = 0xb11d; n_bits = 18; break;
case 0xff403040: code = 0xb15d; n_bits = 18; break;
case 0xff1080e0: code = 0xb19d; n_bits = 18; break;
case 0xfff08030: code = 0xb1dd; n_bits = 18; break;
case 0xff8010a0: code = 0xb21d; n_bits = 18; break;
case 0xffc00070: code = 0xb25d; n_bits = 18; break;
case 0xff30a0e0: code = 0xb29d; n_bits = 18; break;
case 0xff40e040: code = 0xb2dd; n_bits = 18; break;
case 0xff107050: code = 0xb31d; n_bits = 18; break;
case 0xffa0e080: code = 0xb35d; n_bits = 18; break;
case 0xffd0b040: code = 0xb39d; n_bits = 18; break;
case 0xffa06040: code = 0xb3dd; n_bits = 18; break;
case 0xff00c010: code = 0xb41d; n_bits = 18; break;
case 0xff20f070: code = 0xb45d; n_bits = 18; break;
case 0xffc0a080: code = 0xb49d; n_bits = 18; break;
case 0xff9010a0: code = 0xb4dd; n_bits = 18; break;
case 0xff006090: code = 0xb51d; n_bits = 18; break;
case 0xffc03040: code = 0xb55d; n_bits = 18; break;
case 0xffa0c050: code = 0xb59d; n_bits = 18; break;
case 0xff80b000: code = 0xb5dd; n_bits = 18; break;
case 0xffb040e0: code = 0xb61d; n_bits = 18; break;
case 0xffe0b030: code = 0xb65d; n_bits = 18; break;
case 0xff909050: code = 0xb69d; n_bits = 18; break;
case 0xff609080: code = 0xb6dd; n_bits = 18; break;
case 0xffb05070: code = 0xb71d; n_bits = 18; break;
case 0xffa05030: code = 0xb75d; n_bits = 18; break;
case 0xffe01090: code = 0xb79d; n_bits = 18; break;
case 0xffd01050: code = 0xb7dd; n_bits = 18; break;
case 0xff3020a0: code = 0xb85d; n_bits = 18; break;
case 0xff00a070: code = 0xb89d; n_bits = 18; break;
case 0xff3070d0: code = 0xb8dd; n_bits = 18; break;
case 0xff7090b0: code = 0xb91d; n_bits = 18; break;
case 0xff3090c0: code = 0xb95d; n_bits = 18; break;
case 0xff3020d0: code = 0xb99d; n_bits = 18; break;
case 0xffd0e030: code = 0xb9dd; n_bits = 18; break;
case 0xff5060a0: code = 0xba1d; n_bits = 18; break;
case 0xff40a0d0: code = 0xba5d; n_bits = 18; break;
case 0xff20e0a0: code = 0xba9d; n_bits = 18; break;
case 0xff403070: code = 0xbadd; n_bits = 18; break;
case 0xffe01020: code = 0xbb1d; n_bits = 18; break;
case 0xff1060a0: code = 0xbb5d; n_bits = 18; break;
case 0xff8070c0: code = 0xbb9d; n_bits = 18; break;
case 0xff905070: code = 0xbbdd; n_bits = 18; break;
case 0xff00c070: code = 0xbc1d; n_bits = 18; break;
case 0xffa010b0: code = 0xbc5d; n_bits = 18; break;
case 0xffe060d0: code = 0xbc9d; n_bits = 18; break;
case 0xffc0c0f0: code = 0xbcdd; n_bits = 18; break;
case 0xff90d050: code = 0xbd1d; n_bits = 18; break;
case 0xff80d010: code = 0xbd5d; n_bits = 18; break;
case 0xff5080d0: code = 0xbd9d; n_bits = 18; break;
case 0xff000030: code = 0xbddd; n_bits = 18; break;
case 0xff90f060: code = 0xbe1d; n_bits = 18; break;
case 0xffb0f080: code = 0xbe5d; n_bits = 18; break;
case 0xff30f060: code = 0xbe9d; n_bits = 18; break;
case 0xff50d040: code = 0xbedd; n_bits = 18; break;
case 0xffe06000: code = 0xbf1d; n_bits = 18; break;
case 0xffe030d0: code = 0xbf5d; n_bits = 18; break;
case 0xff6060d0: code = 0xbf9d; n_bits = 18; break;
case 0xff201070: code = 0xbfdd; n_bits = 18; break;
case 0xff8020c0: code = 0xc05d; n_bits = 18; break;
case 0xffc06070: code = 0xc09d; n_bits = 18; break;
case 0xffc0a090: code = 0xc0dd; n_bits = 18; break;
case 0xff0070c0: code = 0xc11d; n_bits = 18; break;
case 0xffa0a050: code = 0xc15d; n_bits = 18; break;
case 0xff9040d0: code = 0xc19d; n_bits = 18; break;
case 0xff60d070: code = 0xc1dd; n_bits = 18; break;
case 0xff101020: code = 0xc21d; n_bits = 18; break;
case 0xffb01070: code = 0xc25d; n_bits = 18; break;
case 0xffd0b080: code = 0xc29d; n_bits = 18; break;
case 0xff908020: code = 0xc2dd; n_bits = 18; break;
case 0xff00a080: code = 0xc31d; n_bits = 18; break;
case 0xfff03000: code = 0xc35d; n_bits = 18; break;
case 0xff0020b0: code = 0xc39d; n_bits = 18; break;
case 0xffd07020: code = 0xc3dd; n_bits = 18; break;
case 0xff909090: code = 0xc45d; n_bits = 18; break;
case 0xffe0a010: code = 0xc49d; n_bits = 18; break;
case 0xff401060: code = 0xc4dd; n_bits = 18; break;
case 0xff7090c0: code = 0xc51d; n_bits = 18; break;
case 0xfff07030: code = 0xc55d; n_bits = 18; break;
case 0xffd07030: code = 0xc59d; n_bits = 18; break;
case 0xff800060: code = 0xc5dd; n_bits = 18; break;
case 0xffb0f090: code = 0xc61d; n_bits = 18; break;
case 0xffc0e010: code = 0xc65d; n_bits = 18; break;
case 0xffc0c000: code = 0xc69d; n_bits = 18; break;
case 0xff50d000: code = 0xc6dd; n_bits = 18; break;
case 0xff709090: code = 0xc71d; n_bits = 18; break;
case 0xff50e0f0: code = 0xc75d; n_bits = 18; break;
case 0xff8060f0: code = 0xc79d; n_bits = 18; break;
case 0xffa0a030: code = 0xc7dd; n_bits = 18; break;
case 0xff800030: code = 0xc85d; n_bits = 18; break;
case 0xff802070: code = 0xc89d; n_bits = 18; break;
case 0xffa00050: code = 0xc8dd; n_bits = 18; break;
case 0xfff0f020: code = 0xc91d; n_bits = 18; break;
case 0xfff01090: code = 0xc95d; n_bits = 18; break;
case 0xff902070: code = 0xc99d; n_bits = 18; break;
case 0xffb06060: code = 0xc9dd; n_bits = 18; break;
case 0xff10a0f0: code = 0xca1d; n_bits = 18; break;
case 0xffb080c0: code = 0xca5d; n_bits = 18; break;
case 0xff2010c0: code = 0xca9d; n_bits = 18; break;
case 0xff203010: code = 0xcadd; n_bits = 18; break;
case 0xff702020: code = 0xcb1d; n_bits = 18; break;
case 0xff403020: code = 0xcb5d; n_bits = 18; break;
case 0xff407080: code = 0xcb9d; n_bits = 18; break;
case 0xff30f080: code = 0xcbdd; n_bits = 18; break;
case 0xffe0c010: code = 0xcc1d; n_bits = 18; break;
case 0xff20d050: code = 0xcc5d; n_bits = 18; break;
case 0xff209020: code = 0xcc9d; n_bits = 18; break;
case 0xff1050b0: code = 0xccdd; n_bits = 18; break;
case 0xffa0c0d0: code = 0xcd1d; n_bits = 18; break;
case 0xff008070: code = 0xcd5d; n_bits = 18; break;
case 0xff80d080: code = 0xcd9d; n_bits = 18; break;
case 0xffe04090: code = 0xcddd; n_bits = 18; break;
case 0xffd080c0: code = 0xce1d; n_bits = 18; break;
case 0xffb010e0: code = 0xce5d; n_bits = 18; break;
case 0xff10c020: code = 0xce9d; n_bits = 18; break;
case 0xff50a0f0: code = 0xcedd; n_bits = 18; break;
case 0xff909080: code = 0xcf1d; n_bits = 18; break;
case 0xff70b020: code = 0xcf5d; n_bits = 18; break;
case 0xff801080: code = 0xcf9d; n_bits = 18; break;
case 0xff3020f0: code = 0xcfdd; n_bits = 18; break;
case 0xffe07040: code = 0xd05d; n_bits = 18; break;
case 0xff609040: code = 0xd09d; n_bits = 18; break;
case 0xff903080: code = 0xd0dd; n_bits = 18; break;
case 0xffc03090: code = 0xd11d; n_bits = 18; break;
case 0xff905020: code = 0xd15d; n_bits = 18; break;
case 0xfff09050: code = 0xd19d; n_bits = 18; break;
case 0xff9070d0: code = 0xd1dd; n_bits = 18; break;
case 0xff3030f0: code = 0xd21d; n_bits = 18; break;
case 0xff7090a0: code = 0xd25d; n_bits = 18; break;
case 0xff3060f0: code = 0xd29d; n_bits = 18; break;
case 0xff80d0a0: code = 0xd2dd; n_bits = 18; break;
case 0xffb00090: code = 0xd31d; n_bits = 18; break;
case 0xffe05040: code = 0xd35d; n_bits = 18; break;
case 0xffb090b0: code = 0xd39d; n_bits = 18; break;
case 0xff9080d0: code = 0xd3dd; n_bits = 18; break;
case 0xff307070: code = 0xd41d; n_bits = 18; break;
case 0xffa0c0c0: code = 0xd45d; n_bits = 18; break;
case 0xff001040: code = 0xd49d; n_bits = 18; break;
case 0xff6060c0: code = 0xd4dd; n_bits = 18; break;
case 0xfff050e0: code = 0xd51d; n_bits = 18; break;
case 0xff5060c0: code = 0xd55d; n_bits = 18; break;
case 0xff40e060: code = 0xd59d; n_bits = 18; break;
case 0xff30d050: code = 0xd5dd; n_bits = 18; break;
case 0xfff02060: code = 0xd61d; n_bits = 18; break;
case 0xff101080: code = 0xd65d; n_bits = 18; break;
case 0xff308010: code = 0xd69d; n_bits = 18; break;
case 0xffb01010: code = 0xd6dd; n_bits = 18; break;
case 0xfff0c0f0: code = 0xd71d; n_bits = 18; break;
case 0xffa0f010: code = 0xd75d; n_bits = 18; break;
case 0xff80f010: code = 0xd79d; n_bits = 18; break;
case 0xffd0b030: code = 0xd7dd; n_bits = 18; break;
case 0xff50c050: code = 0xd85d; n_bits = 18; break;
case 0xff307010: code = 0xd89d; n_bits = 18; break;
case 0xff1010c0: code = 0xd8dd; n_bits = 18; break;
case 0xff301090: code = 0xd91d; n_bits = 18; break;
case 0xff8020a0: code = 0xd95d; n_bits = 18; break;
case 0xff208040: code = 0xd99d; n_bits = 18; break;
case 0xffa010c0: code = 0xd9dd; n_bits = 18; break;
case 0xff90d030: code = 0xda1d; n_bits = 18; break;
case 0xffe040b0: code = 0xda5d; n_bits = 18; break;
case 0xffa05090: code = 0xda9d; n_bits = 18; break;
case 0xff706000: code = 0xdadd; n_bits = 18; break;
case 0xff6060a0: code = 0xdb1d; n_bits = 18; break;
case 0xff004080: code = 0xdb5d; n_bits = 18; break;
case 0xff703010: code = 0xdb9d; n_bits = 18; break;
case 0xffc09060: code = 0xdbdd; n_bits = 18; break;
case 0xff402080: code = 0xdc1d; n_bits = 18; break;
case 0xff0070a0: code = 0xdc5d; n_bits = 18; break;
case 0xff309060: code = 0xdc9d; n_bits = 18; break;
case 0xffd06090: code = 0xdcdd; n_bits = 18; break;
case 0xff8090e0: code = 0xdd1d; n_bits = 18; break;
case 0xff7030c0: code = 0xdd5d; n_bits = 18; break;
case 0xff60b060: code = 0xdd9d; n_bits = 18; break;
case 0xff60d0e0: code = 0xdddd; n_bits = 18; break;
case 0xff40b090: code = 0xde1d; n_bits = 18; break;
case 0xff10f060: code = 0xde5d; n_bits = 18; break;
case 0xffb0e040: code = 0xde9d; n_bits = 18; break;
case 0xffa0e000: code = 0xdedd; n_bits = 18; break;
case 0xff40e020: code = 0xdf1d; n_bits = 18; break;
case 0xff104010: code = 0xdf5d; n_bits = 18; break;
case 0xff7020f0: code = 0xdf9d; n_bits = 18; break;
case 0xff6080f0: code = 0xdfdd; n_bits = 18; break;
case 0xff40c000: code = 0xe05d; n_bits = 18; break;
case 0xff40f0c0: code = 0xe09d; n_bits = 18; break;
case 0xff1060e0: code = 0xe0dd; n_bits = 18; break;
case 0xffb09040: code = 0xe11d; n_bits = 18; break;
case 0xff70c070: code = 0xe15d; n_bits = 18; break;
case 0xffd060d0: code = 0xe19d; n_bits = 18; break;
case 0xffd05080: code = 0xe1dd; n_bits = 18; break;
case 0xfff080e0: code = 0xe21d; n_bits = 18; break;
case 0xffb040f0: code = 0xe25d; n_bits = 18; break;
case 0xffd0a0b0: code = 0xe29d; n_bits = 18; break;
case 0xff103020: code = 0xe2dd; n_bits = 18; break;
case 0xff9020a0: code = 0xe31d; n_bits = 18; break;
case 0xffd0d050: code = 0xe35d; n_bits = 18; break;
case 0xff80a030: code = 0xe39d; n_bits = 18; break;
case 0xff502020: code = 0xe3dd; n_bits = 18; break;
case 0xff201060: code = 0xe45d; n_bits = 18; break;
case 0xffc01070: code = 0xe49d; n_bits = 18; break;
case 0xff1070b0: code = 0xe4dd; n_bits = 18; break;
case 0xff60d090: code = 0xe51d; n_bits = 18; break;
case 0xfff01000: code = 0xe55d; n_bits = 18; break;
case 0xff10f070: code = 0xe59d; n_bits = 18; break;
case 0xff60a0b0: code = 0xe5dd; n_bits = 18; break;
case 0xff30a090: code = 0xe61d; n_bits = 18; break;
case 0xff10f0f0: code = 0xe65d; n_bits = 18; break;
case 0xff1030a0: code = 0xe69d; n_bits = 18; break;
case 0xff8080c0: code = 0xe6dd; n_bits = 18; break;
case 0xffd05000: code = 0xe71d; n_bits = 18; break;
case 0xffc0e0c0: code = 0xe75d; n_bits = 18; break;
case 0xffe02060: code = 0xe79d; n_bits = 18; break;
case 0xff301050: code = 0xe7dd; n_bits = 18; break;
case 0xffa08000: code = 0xe85d; n_bits = 18; break;
case 0xff503040: code = 0xe89d; n_bits = 18; break;
case 0xff20e020: code = 0xe8dd; n_bits = 18; break;
case 0xff909040: code = 0xe91d; n_bits = 18; break;
case 0xff209090: code = 0xe95d; n_bits = 18; break;
case 0xff40a070: code = 0xe99d; n_bits = 18; break;
case 0xffb0e030: code = 0xe9dd; n_bits = 18; break;
case 0xffc020a0: code = 0xea1d; n_bits = 18; break;
case 0xffd01020: code = 0xea5d; n_bits = 18; break;
case 0xffa080f0: code = 0xea9d; n_bits = 18; break;
case 0xff502000: code = 0xeadd; n_bits = 18; break;
case 0xff407010: code = 0xeb1d; n_bits = 18; break;
case 0xfff0d060: code = 0xeb5d; n_bits = 18; break;
case 0xfff06070: code = 0xeb9d; n_bits = 18; break;
case 0xffc08090: code = 0xebdd; n_bits = 18; break;
case 0xff308020: code = 0xec1d; n_bits = 18; break;
case 0xffd06020: code = 0xec5d; n_bits = 18; break;
case 0xff50e0c0: code = 0xec9d; n_bits = 18; break;
case 0xffb080a0: code = 0xecdd; n_bits = 18; break;
case 0xff909020: code = 0xed1d; n_bits = 18; break;
case 0xff60c0a0: code = 0xed5d; n_bits = 18; break;
case 0xff708060: code = 0xed9d; n_bits = 18; break;
case 0xff20b060: code = 0xeddd; n_bits = 18; break;
case 0xff800000: code = 0xee1d; n_bits = 18; break;
case 0xfff0d0f0: code = 0xee5d; n_bits = 18; break;
case 0xff206020: code = 0xee9d; n_bits = 18; break;
case 0xff2000e0: code = 0xeedd; n_bits = 18; break;
case 0xfff01050: code = 0xef1d; n_bits = 18; break;
case 0xffa0d070: code = 0xef5d; n_bits = 18; break;
case 0xff804060: code = 0xef9d; n_bits = 18; break;
case 0xffe0d0f0: code = 0xefdd; n_bits = 18; break;
case 0xfff0a0d0: code = 0xf05d; n_bits = 18; break;
case 0xff00e0e0: code = 0xf09d; n_bits = 18; break;
case 0xffd03050: code = 0xf0dd; n_bits = 18; break;
case 0xffd070b0: code = 0xf11d; n_bits = 18; break;
case 0xffb03010: code = 0xf15d; n_bits = 18; break;
case 0xff80b050: code = 0xf19d; n_bits = 18; break;
case 0xffd040d0: code = 0xf1dd; n_bits = 18; break;
case 0xff102000: code = 0xf21d; n_bits = 18; break;
case 0xff0000c0: code = 0xf25d; n_bits = 18; break;
case 0xffd090e0: code = 0xf29d; n_bits = 18; break;
case 0xffa0a0e0: code = 0xf2dd; n_bits = 18; break;
case 0xff60e010: code = 0xf31d; n_bits = 18; break;
case 0xffc08020: code = 0xf35d; n_bits = 18; break;
case 0xff908090: code = 0xf39d; n_bits = 18; break;
case 0xff70d000: code = 0xf3dd; n_bits = 18; break;
case 0xff800020: code = 0xf41d; n_bits = 18; break;
case 0xff703030: code = 0xf45d; n_bits = 18; break;
case 0xffc000a0: code = 0xf49d; n_bits = 18; break;
case 0xff2000d0: code = 0xf4dd; n_bits = 18; break;
case 0xff504040: code = 0xf51d; n_bits = 18; break;
case 0xff408020: code = 0xf55d; n_bits = 18; break;
case 0xff60e0d0: code = 0xf59d; n_bits = 18; break;
case 0xff9060d0: code = 0xf5dd; n_bits = 18; break;
case 0xffa0b0a0: code = 0xf61d; n_bits = 18; break;
case 0xff30f000: code = 0xf65d; n_bits = 18; break;
case 0xffe09020: code = 0xf69d; n_bits = 18; break;
case 0xffa020f0: code = 0xf6dd; n_bits = 18; break;
case 0xff90c0e0: code = 0xf71d; n_bits = 18; break;
case 0xff9000f0: code = 0xf75d; n_bits = 18; break;
case 0xff80d0f0: code = 0xf79d; n_bits = 18; break;
case 0xff40b0d0: code = 0xf7dd; n_bits = 18; break;
case 0xff306090: code = 0xf85d; n_bits = 18; break;
case 0xff60f010: code = 0xf89d; n_bits = 18; break;
case 0xff107070: code = 0xf8dd; n_bits = 18; break;
case 0xffd06000: code = 0xf91d; n_bits = 18; break;
case 0xff505020: code = 0xf95d; n_bits = 18; break;
case 0xff009090: code = 0xf99d; n_bits = 18; break;
case 0xff8070f0: code = 0xf9dd; n_bits = 18; break;
case 0xff4030e0: code = 0xfa1d; n_bits = 18; break;
case 0xff402030: code = 0xfa5d; n_bits = 18; break;
case 0xff504080: code = 0xfa9d; n_bits = 18; break;
case 0xffa040b0: code = 0xfadd; n_bits = 18; break;
case 0xfff0e090: code = 0xfb1d; n_bits = 18; break;
case 0xff30c080: code = 0xfb5d; n_bits = 18; break;
case 0xffa0f090: code = 0xfb9d; n_bits = 18; break;
case 0xffe07050: code = 0xfbdd; n_bits = 18; break;
case 0xffd0a040: code = 0xfc1d; n_bits = 18; break;
case 0xff807070: code = 0xfc5d; n_bits = 18; break;
case 0xff80a050: code = 0xfc9d; n_bits = 18; break;
case 0xff6050f0: code = 0xfcdd; n_bits = 18; break;
case 0xff00d0e0: code = 0xfd1d; n_bits = 18; break;
case 0xff20b0c0: code = 0xfd5d; n_bits = 18; break;
case 0xff90b060: code = 0xfd9d; n_bits = 18; break;
case 0xff601070: code = 0xfddd; n_bits = 18; break;
case 0xff0070f0: code = 0xfe1d; n_bits = 18; break;
case 0xff604090: code = 0xfe5d; n_bits = 18; break;
case 0xfff09060: code = 0xfe9d; n_bits = 18; break;
case 0xff10e0a0: code = 0xfedd; n_bits = 18; break;
case 0xff904020: code = 0xff1d; n_bits = 18; break;
case 0xffa05070: code = 0xff5d; n_bits = 18; break;
case 0xffa0c0f0: code = 0xff9d; n_bits = 18; break;
case 0xffa0f080: code = 0xffdd; n_bits = 18; break;
case 0xfff03060: code = 0x1005d; n_bits = 18; break;
case 0xff109000: code = 0x1009d; n_bits = 18; break;
case 0xff403090: code = 0x100dd; n_bits = 18; break;
case 0xff808040: code = 0x1011d; n_bits = 18; break;
case 0xffb04080: code = 0x1015d; n_bits = 18; break;
case 0xfff01010: code = 0x1019d; n_bits = 18; break;
case 0xffa0d030: code = 0x101dd; n_bits = 18; break;
case 0xffb0b060: code = 0x1021d; n_bits = 18; break;
case 0xff708000: code = 0x1025d; n_bits = 18; break;
case 0xff204030: code = 0x1029d; n_bits = 18; break;
case 0xff009070: code = 0x102dd; n_bits = 18; break;
case 0xff7040b0: code = 0x1031d; n_bits = 18; break;
case 0xff4050b0: code = 0x1035d; n_bits = 18; break;
case 0xffe07060: code = 0x1039d; n_bits = 18; break;
case 0xff4020b0: code = 0x103dd; n_bits = 18; break;
case 0xff00f040: code = 0x1045d; n_bits = 18; break;
case 0xff50a0d0: code = 0x1049d; n_bits = 18; break;
case 0xff605020: code = 0x104dd; n_bits = 18; break;
case 0xff000020: code = 0x1051d; n_bits = 18; break;
case 0xff4090f0: code = 0x1055d; n_bits = 18; break;
case 0xff6010c0: code = 0x1059d; n_bits = 18; break;
case 0xffd02040: code = 0x105dd; n_bits = 18; break;
case 0xffd05040: code = 0x1061d; n_bits = 18; break;
case 0xff50e0d0: code = 0x1065d; n_bits = 18; break;
case 0xff40c020: code = 0x1069d; n_bits = 18; break;
case 0xff7030d0: code = 0x106dd; n_bits = 18; break;
case 0xff208080: code = 0x1071d; n_bits = 18; break;
case 0xffe04070: code = 0x1075d; n_bits = 18; break;
case 0xff1050f0: code = 0x1079d; n_bits = 18; break;
case 0xff0060e0: code = 0x107dd; n_bits = 18; break;
case 0xffd02010: code = 0x1085d; n_bits = 18; break;
case 0xff4090b0: code = 0x1089d; n_bits = 18; break;
case 0xff70d090: code = 0x108dd; n_bits = 18; break;
case 0xffe050c0: code = 0x1091d; n_bits = 18; break;
case 0xff705090: code = 0x1095d; n_bits = 18; break;
case 0xff603080: code = 0x1099d; n_bits = 18; break;
case 0xff30a0f0: code = 0x109dd; n_bits = 18; break;
case 0xff206010: code = 0x10a1d; n_bits = 18; break;
case 0xffd0c0d0: code = 0x10a5d; n_bits = 18; break;
case 0xff50f050: code = 0x10a9d; n_bits = 18; break;
case 0xff70d030: code = 0x10add; n_bits = 18; break;
case 0xff406040: code = 0x10b1d; n_bits = 18; break;
case 0xff905000: code = 0x10b5d; n_bits = 18; break;
case 0xff7000c0: code = 0x10b9d; n_bits = 18; break;
case 0xffb04090: code = 0x10bdd; n_bits = 18; break;
case 0xff602030: code = 0x10c1d; n_bits = 18; break;
case 0xffc0c090: code = 0x10c5d; n_bits = 18; break;
case 0xff60d050: code = 0x10c9d; n_bits = 18; break;
case 0xffc030f0: code = 0x10cdd; n_bits = 18; break;
case 0xff305080: code = 0x10d1d; n_bits = 18; break;
case 0xff80e0c0: code = 0x10d5d; n_bits = 18; break;
case 0xff203030: code = 0x10d9d; n_bits = 18; break;
case 0xffd090b0: code = 0x10ddd; n_bits = 18; break;
case 0xff900060: code = 0x10e1d; n_bits = 18; break;
case 0xffa030d0: code = 0x10e5d; n_bits = 18; break;
case 0xfff030a0: code = 0x10e9d; n_bits = 18; break;
case 0xffb0a020: code = 0x10edd; n_bits = 18; break;
case 0xff507000: code = 0x10f1d; n_bits = 18; break;
case 0xffb0a0f0: code = 0x10f5d; n_bits = 18; break;
case 0xff7000f0: code = 0x10f9d; n_bits = 18; break;
case 0xffa09040: code = 0x10fdd; n_bits = 18; break;
case 0xff3070c0: code = 0x1105d; n_bits = 18; break;
case 0xffb0b020: code = 0x1109d; n_bits = 18; break;
case 0xffd0e000: code = 0x110dd; n_bits = 18; break;
case 0xff002070: code = 0x1111d; n_bits = 18; break;
case 0xff003080: code = 0x1115d; n_bits = 18; break;
case 0xfff00040: code = 0x1119d; n_bits = 18; break;
case 0xfff04060: code = 0x111dd; n_bits = 18; break;
case 0xff201050: code = 0x1121d; n_bits = 18; break;
case 0xffa020e0: code = 0x1125d; n_bits = 18; break;
case 0xff50f090: code = 0x1129d; n_bits = 18; break;
case 0xff3090b0: code = 0x112dd; n_bits = 18; break;
case 0xffc0e0d0: code = 0x1131d; n_bits = 18; break;
case 0xffe070d0: code = 0x1135d; n_bits = 18; break;
case 0xff40c0b0: code = 0x1139d; n_bits = 18; break;
case 0xffd06050: code = 0x113dd; n_bits = 18; break;
case 0xffc0b080: code = 0x1145d; n_bits = 18; break;
case 0xff10b000: code = 0x1149d; n_bits = 18; break;
case 0xffe0d060: code = 0x114dd; n_bits = 18; break;
case 0xfff050a0: code = 0x1151d; n_bits = 18; break;
case 0xff10d050: code = 0x1155d; n_bits = 18; break;
case 0xffa0d020: code = 0x1159d; n_bits = 18; break;
case 0xff00e060: code = 0x115dd; n_bits = 18; break;
case 0xff000010: code = 0x1161d; n_bits = 18; break;
case 0xff508010: code = 0x1165d; n_bits = 18; break;
case 0xffe01050: code = 0x1169d; n_bits = 18; break;
case 0xfff08090: code = 0x116dd; n_bits = 18; break;
case 0xffb060a0: code = 0x1171d; n_bits = 18; break;
case 0xff90b0a0: code = 0x1175d; n_bits = 18; break;
case 0xff70d0c0: code = 0x1179d; n_bits = 18; break;
case 0xff30f0c0: code = 0x117dd; n_bits = 18; break;
case 0xffb02080: code = 0x1185d; n_bits = 18; break;
case 0xffd07070: code = 0x1189d; n_bits = 18; break;
case 0xff0060b0: code = 0x118dd; n_bits = 18; break;
case 0xff10e020: code = 0x1191d; n_bits = 18; break;
case 0xff0010c0: code = 0x1195d; n_bits = 18; break;
case 0xffa020a0: code = 0x1199d; n_bits = 18; break;
case 0xffd03010: code = 0x119dd; n_bits = 18; break;
case 0xfff0e0d0: code = 0x11a1d; n_bits = 18; break;
case 0xff9060a0: code = 0x11a5d; n_bits = 18; break;
case 0xffc0d0c0: code = 0x11a9d; n_bits = 18; break;
case 0xffd0c040: code = 0x11add; n_bits = 18; break;
case 0xffb0f040: code = 0x11b1d; n_bits = 18; break;
case 0xff50e0a0: code = 0x11b5d; n_bits = 18; break;
case 0xff404020: code = 0x11b9d; n_bits = 18; break;
case 0xff0070b0: code = 0x11bdd; n_bits = 18; break;
case 0xff005000: code = 0x11c1d; n_bits = 18; break;
case 0xff70e0c0: code = 0x11c5d; n_bits = 18; break;
case 0xffd0d0f0: code = 0x11c9d; n_bits = 18; break;
case 0xffa02080: code = 0x11cdd; n_bits = 18; break;
case 0xff7040a0: code = 0x11d1d; n_bits = 18; break;
case 0xff809070: code = 0x11d5d; n_bits = 18; break;
case 0xff00a020: code = 0x11d9d; n_bits = 18; break;
case 0xffd080e0: code = 0x11ddd; n_bits = 18; break;
case 0xfff090d0: code = 0x11e1d; n_bits = 18; break;
case 0xff20d010: code = 0x11e5d; n_bits = 18; break;
case 0xff9010e0: code = 0x11e9d; n_bits = 18; break;
case 0xff4080b0: code = 0x11edd; n_bits = 18; break;
case 0xff60b0d0: code = 0x11f1d; n_bits = 18; break;
case 0xff304000: code = 0x11f5d; n_bits = 18; break;
case 0xff009040: code = 0x11f9d; n_bits = 18; break;
case 0xffb030c0: code = 0x11fdd; n_bits = 18; break;
case 0xff705040: code = 0x1205d; n_bits = 18; break;
case 0xffd000f0: code = 0x1209d; n_bits = 18; break;
case 0xffb000b0: code = 0x120dd; n_bits = 18; break;
case 0xfff060b0: code = 0x1211d; n_bits = 18; break;
case 0xff1010e0: code = 0x1215d; n_bits = 18; break;
case 0xffe0f080: code = 0x1219d; n_bits = 18; break;
case 0xff6050d0: code = 0x121dd; n_bits = 18; break;
case 0xff70e0d0: code = 0x1221d; n_bits = 18; break;
case 0xffc09030: code = 0x1225d; n_bits = 18; break;
case 0xff608030: code = 0x1229d; n_bits = 18; break;
case 0xff1090a0: code = 0x122dd; n_bits = 18; break;
case 0xffb070a0: code = 0x1231d; n_bits = 18; break;
case 0xff80c040: code = 0x1235d; n_bits = 18; break;
case 0xff10a060: code = 0x1239d; n_bits = 18; break;
case 0xff50c000: code = 0x123dd; n_bits = 18; break;
case 0xff703040: code = 0x1245d; n_bits = 18; break;
case 0xff104000: code = 0x1249d; n_bits = 18; break;
case 0xff705050: code = 0x124dd; n_bits = 18; break;
case 0xff407070: code = 0x1251d; n_bits = 18; break;
case 0xff1060c0: code = 0x1255d; n_bits = 18; break;
case 0xff80f040: code = 0x1259d; n_bits = 18; break;
case 0xffb0c090: code = 0x125dd; n_bits = 18; break;
case 0xffe080d0: code = 0x1261d; n_bits = 18; break;
case 0xff502060: code = 0x1265d; n_bits = 18; break;
case 0xff601050: code = 0x1269d; n_bits = 18; break;
case 0xffd0a0a0: code = 0x126dd; n_bits = 18; break;
case 0xff2070b0: code = 0x1271d; n_bits = 18; break;
case 0xff101050: code = 0x1275d; n_bits = 18; break;
case 0xff50a000: code = 0x1279d; n_bits = 18; break;
case 0xffc08060: code = 0x127dd; n_bits = 18; break;
case 0xff20e0e0: code = 0x1285d; n_bits = 18; break;
case 0xffd08040: code = 0x1289d; n_bits = 18; break;
case 0xff9020c0: code = 0x128dd; n_bits = 18; break;
case 0xffc0d0e0: code = 0x1291d; n_bits = 18; break;
case 0xffe05060: code = 0x1295d; n_bits = 18; break;
case 0xff600020: code = 0x1299d; n_bits = 18; break;
case 0xff40c0f0: code = 0x129dd; n_bits = 18; break;
case 0xff30f050: code = 0x12a1d; n_bits = 18; break;
case 0xff00b000: code = 0x12a5d; n_bits = 18; break;
case 0xff409090: code = 0x12a9d; n_bits = 18; break;
case 0xff40d0b0: code = 0x12add; n_bits = 18; break;
case 0xfff06050: code = 0x12b1d; n_bits = 18; break;
case 0xff204060: code = 0x12b5d; n_bits = 18; break;
case 0xff905030: code = 0x12b9d; n_bits = 18; break;
case 0xff008080: code = 0x12bdd; n_bits = 18; break;
case 0xff90e060: code = 0x12c1d; n_bits = 18; break;
case 0xff303030: code = 0x12c5d; n_bits = 18; break;
case 0xff704070: code = 0x12c9d; n_bits = 18; break;
case 0xffa05060: code = 0x12cdd; n_bits = 18; break;
case 0xff60d080: code = 0x12d1d; n_bits = 18; break;
case 0xff90b080: code = 0x12d5d; n_bits = 18; break;
case 0xff606050: code = 0x12d9d; n_bits = 18; break;
case 0xff400050: code = 0x12ddd; n_bits = 18; break;
case 0xfff0a0a0: code = 0x12e1d; n_bits = 18; break;
case 0xffa0c0e0: code = 0x12e5d; n_bits = 18; break;
case 0xff301000: code = 0x12e9d; n_bits = 18; break;
case 0xffd08010: code = 0x12edd; n_bits = 18; break;
case 0xff9050e0: code = 0x12f1d; n_bits = 18; break;
case 0xff4000c0: code = 0x12f5d; n_bits = 18; break;
case 0xffd06040: code = 0x12f9d; n_bits = 18; break;
case 0xffd02080: code = 0x12fdd; n_bits = 18; break;
case 0xff2080f0: code = 0x1305d; n_bits = 18; break;
case 0xff90a010: code = 0x1309d; n_bits = 18; break;
case 0xff30a040: code = 0x130dd; n_bits = 18; break;
case 0xff80a010: code = 0x1311d; n_bits = 18; break;
case 0xff30b080: code = 0x1315d; n_bits = 18; break;
case 0xff203040: code = 0x1319d; n_bits = 18; break;
case 0xffd0e0b0: code = 0x131dd; n_bits = 18; break;
case 0xffb090e0: code = 0x1321d; n_bits = 18; break;
case 0xffd020e0: code = 0x1325d; n_bits = 18; break;
case 0xffe0e020: code = 0x1329d; n_bits = 18; break;
case 0xff5080c0: code = 0x132dd; n_bits = 18; break;
case 0xff30f020: code = 0x1331d; n_bits = 18; break;
case 0xffd020f0: code = 0x1335d; n_bits = 18; break;
case 0xff50f020: code = 0x1339d; n_bits = 18; break;
case 0xff3000c0: code = 0x133dd; n_bits = 18; break;
case 0xffd080d0: code = 0x1341d; n_bits = 18; break;
case 0xffa06060: code = 0x1345d; n_bits = 18; break;
case 0xffe09040: code = 0x1349d; n_bits = 18; break;
case 0xff608060: code = 0x134dd; n_bits = 18; break;
case 0xffc09000: code = 0x1351d; n_bits = 18; break;
case 0xffa04070: code = 0x1355d; n_bits = 18; break;
case 0xff009060: code = 0x1359d; n_bits = 18; break;
case 0xff105080: code = 0x135dd; n_bits = 18; break;
case 0xffc0e040: code = 0x1361d; n_bits = 18; break;
case 0xfff00080: code = 0x1365d; n_bits = 18; break;
case 0xff2030d0: code = 0x1369d; n_bits = 18; break;
case 0xff703090: code = 0x136dd; n_bits = 18; break;
case 0xff80c030: code = 0x1371d; n_bits = 18; break;
case 0xffb09090: code = 0x1375d; n_bits = 18; break;
case 0xff109020: code = 0x1379d; n_bits = 18; break;
case 0xff90d0b0: code = 0x137dd; n_bits = 18; break;
case 0xff90c0d0: code = 0x1385d; n_bits = 18; break;
case 0xff10e0d0: code = 0x1389d; n_bits = 18; break;
case 0xff506090: code = 0x138dd; n_bits = 18; break;
case 0xff804010: code = 0x1391d; n_bits = 18; break;
case 0xff206030: code = 0x1395d; n_bits = 18; break;
case 0xff50a0a0: code = 0x1399d; n_bits = 18; break;
case 0xff4030b0: code = 0x139dd; n_bits = 18; break;
case 0xff403010: code = 0x13a1d; n_bits = 18; break;
case 0xff40e0a0: code = 0x13a5d; n_bits = 18; break;
case 0xffe0b0b0: code = 0x13a9d; n_bits = 18; break;
case 0xfff0a030: code = 0x13add; n_bits = 18; break;
case 0xffa0d080: code = 0x13b1d; n_bits = 18; break;
case 0xffb09060: code = 0x13b5d; n_bits = 18; break;
case 0xff80f0b0: code = 0x13b9d; n_bits = 18; break;
case 0xffb04060: code = 0x13bdd; n_bits = 18; break;
case 0xff90c0b0: code = 0x13c1d; n_bits = 18; break;
case 0xff0050e0: code = 0x13c5d; n_bits = 18; break;
case 0xff303090: code = 0x13c9d; n_bits = 18; break;
case 0xff60f0d0: code = 0x13cdd; n_bits = 18; break;
case 0xff402060: code = 0x13d1d; n_bits = 18; break;
case 0xffe09070: code = 0x13d5d; n_bits = 18; break;
case 0xff40c0a0: code = 0x13d9d; n_bits = 18; break;
case 0xffb09030: code = 0x13ddd; n_bits = 18; break;
case 0xffa090e0: code = 0x13e1d; n_bits = 18; break;
case 0xff105070: code = 0x13e5d; n_bits = 18; break;
case 0xff4090e0: code = 0x13e9d; n_bits = 18; break;
case 0xff6070c0: code = 0x13edd; n_bits = 18; break;
case 0xfff0a060: code = 0x13f1d; n_bits = 18; break;
case 0xff9080a0: code = 0x13f5d; n_bits = 18; break;
case 0xff8050c0: code = 0x13f9d; n_bits = 18; break;
case 0xff3050d0: code = 0x13fdd; n_bits = 18; break;
case 0xff207090: code = 0x1405d; n_bits = 18; break;
case 0xff804030: code = 0x1409d; n_bits = 18; break;
case 0xff2070a0: code = 0x140dd; n_bits = 18; break;
case 0xff306060: code = 0x1411d; n_bits = 18; break;
case 0xfff0f090: code = 0x1415d; n_bits = 18; break;
case 0xff704090: code = 0x1419d; n_bits = 18; break;
case 0xffb070b0: code = 0x141dd; n_bits = 18; break;
case 0xffd00080: code = 0x1421d; n_bits = 18; break;
case 0xffb050c0: code = 0x1425d; n_bits = 18; break;
case 0xff50a020: code = 0x1429d; n_bits = 18; break;
case 0xff4020e0: code = 0x142dd; n_bits = 18; break;
case 0xff001070: code = 0x1431d; n_bits = 18; break;
case 0xffb0f060: code = 0x1435d; n_bits = 18; break;
case 0xff20a080: code = 0x1439d; n_bits = 18; break;
case 0xff0090d0: code = 0x143dd; n_bits = 18; break;
case 0xff605070: code = 0x1445d; n_bits = 18; break;
case 0xff8000b0: code = 0x1449d; n_bits = 18; break;
case 0xff904010: code = 0x144dd; n_bits = 18; break;
case 0xff9070a0: code = 0x1451d; n_bits = 18; break;
case 0xff00c040: code = 0x1455d; n_bits = 18; break;
case 0xff20e000: code = 0x1459d; n_bits = 18; break;
case 0xfff0a010: code = 0x145dd; n_bits = 18; break;
case 0xffd0e050: code = 0x1461d; n_bits = 18; break;
case 0xff20b020: code = 0x1465d; n_bits = 18; break;
case 0xff00c080: code = 0x1469d; n_bits = 18; break;
case 0xff50c0b0: code = 0x146dd; n_bits = 18; break;
case 0xff30a000: code = 0x1471d; n_bits = 18; break;
case 0xff60b070: code = 0x1475d; n_bits = 18; break;
case 0xff00c050: code = 0x1479d; n_bits = 18; break;
case 0xff7060b0: code = 0x147dd; n_bits = 18; break;
case 0xff40c090: code = 0x1485d; n_bits = 18; break;
case 0xffc090a0: code = 0x1489d; n_bits = 18; break;
case 0xff50b0b0: code = 0x148dd; n_bits = 18; break;
case 0xff105010: code = 0x1491d; n_bits = 18; break;
case 0xff009080: code = 0x1495d; n_bits = 18; break;
case 0xffc0f040: code = 0x1499d; n_bits = 18; break;
case 0xfff0c0a0: code = 0x149dd; n_bits = 18; break;
case 0xff105030: code = 0x14a1d; n_bits = 18; break;
case 0xff109050: code = 0x14a5d; n_bits = 18; break;
case 0xff400080: code = 0x14a9d; n_bits = 18; break;
case 0xff2050e0: code = 0x14add; n_bits = 18; break;
case 0xffc01090: code = 0x14b1d; n_bits = 18; break;
case 0xff40e070: code = 0x14b5d; n_bits = 18; break;
case 0xffc06010: code = 0x14b9d; n_bits = 18; break;
case 0xff406000: code = 0x14bdd; n_bits = 18; break;
case 0xff0050f0: code = 0x14c1d; n_bits = 18; break;
case 0xffc070a0: code = 0x14c5d; n_bits = 18; break;
case 0xff30b000: code = 0x14c9d; n_bits = 18; break;
case 0xff102050: code = 0x14cdd; n_bits = 18; break;
case 0xff9060c0: code = 0x14d1d; n_bits = 18; break;
case 0xff909030: code = 0x14d5d; n_bits = 18; break;
case 0xff90b090: code = 0x14d9d; n_bits = 18; break;
case 0xff8070d0: code = 0x14ddd; n_bits = 18; break;
case 0xff204090: code = 0x14e1d; n_bits = 18; break;
case 0xffc0f030: code = 0x14e5d; n_bits = 18; break;
case 0xff90f000: code = 0x14e9d; n_bits = 18; break;
case 0xffa03000: code = 0x14edd; n_bits = 18; break;
case 0xffd040f0: code = 0x14f1d; n_bits = 18; break;
case 0xff4010e0: code = 0x14f5d; n_bits = 18; break;
case 0xff302070: code = 0x14f9d; n_bits = 18; break;
case 0xff50a0c0: code = 0x14fdd; n_bits = 18; break;
case 0xfff0b0a0: code = 0x1505d; n_bits = 18; break;
case 0xffc00000: code = 0x1509d; n_bits = 18; break;
case 0xffd04020: code = 0x150dd; n_bits = 18; break;
case 0xff303050: code = 0x1511d; n_bits = 18; break;
case 0xfff010c0: code = 0x1515d; n_bits = 18; break;
case 0xff503050: code = 0x1519d; n_bits = 18; break;
case 0xffb060c0: code = 0x151dd; n_bits = 18; break;
case 0xfff07060: code = 0x1521d; n_bits = 18; break;
case 0xffe07020: code = 0x1525d; n_bits = 18; break;
case 0xff5050b0: code = 0x1529d; n_bits = 18; break;
case 0xff707080: code = 0x152dd; n_bits = 18; break;
case 0xfff0e030: code = 0x1531d; n_bits = 18; break;
case 0xff80f050: code = 0x1535d; n_bits = 18; break;
case 0xff60b040: code = 0x1539d; n_bits = 18; break;
case 0xffa03030: code = 0x153dd; n_bits = 18; break;
case 0xff3040f0: code = 0x1545d; n_bits = 18; break;
case 0xffc080d0: code = 0x1549d; n_bits = 18; break;
case 0xff20b0a0: code = 0x154dd; n_bits = 18; break;
case 0xffb08040: code = 0x1551d; n_bits = 18; break;
case 0xffc0d020: code = 0x1555d; n_bits = 18; break;
case 0xffa06080: code = 0x1559d; n_bits = 18; break;
case 0xfff09040: code = 0x155dd; n_bits = 18; break;
case 0xffc09020: code = 0x1561d; n_bits = 18; break;
case 0xffe02020: code = 0x1565d; n_bits = 18; break;
case 0xff402090: code = 0x1569d; n_bits = 18; break;
case 0xff70d070: code = 0x156dd; n_bits = 18; break;
case 0xff6040e0: code = 0x1571d; n_bits = 18; break;
case 0xff9010c0: code = 0x1575d; n_bits = 18; break;
case 0xff900010: code = 0x1579d; n_bits = 18; break;
case 0xff800040: code = 0x157dd; n_bits = 18; break;
case 0xff80c0c0: code = 0x1585d; n_bits = 18; break;
case 0xff401090: code = 0x1589d; n_bits = 18; break;
case 0xfff00070: code = 0x158dd; n_bits = 18; break;
case 0xffc0b090: code = 0x1591d; n_bits = 18; break;
case 0xffc050d0: code = 0x1595d; n_bits = 18; break;
case 0xffa050d0: code = 0x1599d; n_bits = 18; break;
case 0xff40d090: code = 0x159dd; n_bits = 18; break;
case 0xfff040f0: code = 0x15a1d; n_bits = 18; break;
case 0xffb0b070: code = 0x15a5d; n_bits = 18; break;
case 0xffc030e0: code = 0x15a9d; n_bits = 18; break;
case 0xff00a000: code = 0x15add; n_bits = 18; break;
case 0xfff0f060: code = 0x15b1d; n_bits = 18; break;
case 0xffe000f0: code = 0x15b5d; n_bits = 18; break;
case 0xff20e070: code = 0x15b9d; n_bits = 18; break;
case 0xffd0d0c0: code = 0x15bdd; n_bits = 18; break;
case 0xff50d080: code = 0x15c1d; n_bits = 18; break;
case 0xff302060: code = 0x15c5d; n_bits = 18; break;
case 0xff502050: code = 0x15c9d; n_bits = 18; break;
case 0xffe0a0f0: code = 0x15cdd; n_bits = 18; break;
case 0xff5050e0: code = 0x15d1d; n_bits = 18; break;
case 0xffc010a0: code = 0x15d5d; n_bits = 18; break;
case 0xffb05010: code = 0x15d9d; n_bits = 18; break;
case 0xff409060: code = 0x15ddd; n_bits = 18; break;
case 0xff305010: code = 0x15e1d; n_bits = 18; break;
case 0xff606080: code = 0x15e5d; n_bits = 18; break;
case 0xff4000d0: code = 0x15e9d; n_bits = 18; break;
case 0xff806080: code = 0x15edd; n_bits = 18; break;
case 0xffb0a0d0: code = 0x15f1d; n_bits = 18; break;
case 0xff208070: code = 0x15f5d; n_bits = 18; break;
case 0xffc01010: code = 0x15f9d; n_bits = 18; break;
case 0xff703050: code = 0x15fdd; n_bits = 18; break;
case 0xff1040f0: code = 0x1605d; n_bits = 18; break;
case 0xffc00020: code = 0x1609d; n_bits = 18; break;
case 0xff10c050: code = 0x160dd; n_bits = 18; break;
case 0xffb0f0c0: code = 0x1611d; n_bits = 18; break;
case 0xffe02080: code = 0x1615d; n_bits = 18; break;
case 0xffe040f0: code = 0x1619d; n_bits = 18; break;
case 0xff10c060: code = 0x161dd; n_bits = 18; break;
case 0xff0030b0: code = 0x1621d; n_bits = 18; break;
case 0xff00f050: code = 0x1625d; n_bits = 18; break;
case 0xffc0c0e0: code = 0x1629d; n_bits = 18; break;
case 0xff607050: code = 0x162dd; n_bits = 18; break;
case 0xff609060: code = 0x1631d; n_bits = 18; break;
case 0xffd060f0: code = 0x1635d; n_bits = 18; break;
case 0xff2040e0: code = 0x1639d; n_bits = 18; break;
case 0xffa00090: code = 0x163dd; n_bits = 18; break;
case 0xff509060: code = 0x1645d; n_bits = 18; break;
case 0xff20c010: code = 0x1649d; n_bits = 18; break;
case 0xff7030b0: code = 0x164dd; n_bits = 18; break;
case 0xff105020: code = 0x1651d; n_bits = 18; break;
case 0xff806090: code = 0x1655d; n_bits = 18; break;
case 0xffa000e0: code = 0x1659d; n_bits = 18; break;
case 0xff20d020: code = 0x165dd; n_bits = 18; break;
case 0xffd010d0: code = 0x1661d; n_bits = 18; break;
case 0xff702050: code = 0x1665d; n_bits = 18; break;
case 0xff8040a0: code = 0x1669d; n_bits = 18; break;
case 0xff6030d0: code = 0x166dd; n_bits = 18; break;
case 0xffe09060: code = 0x1671d; n_bits = 18; break;
case 0xff608010: code = 0x1675d; n_bits = 18; break;
case 0xffb09020: code = 0x1679d; n_bits = 18; break;
case 0xffb0d040: code = 0x167dd; n_bits = 18; break;
case 0xffb0c060: code = 0x1685d; n_bits = 18; break;
case 0xff702000: code = 0x1689d; n_bits = 18; break;
case 0xff80a080: code = 0x168dd; n_bits = 18; break;
case 0xff20a070: code = 0x1691d; n_bits = 18; break;
case 0xffb030b0: code = 0x1695d; n_bits = 18; break;
case 0xff5040f0: code = 0x1699d; n_bits = 18; break;
case 0xff10b040: code = 0x169dd; n_bits = 18; break;
case 0xff10e0e0: code = 0x16a1d; n_bits = 18; break;
case 0xffe05080: code = 0x16a5d; n_bits = 18; break;
case 0xff002010: code = 0x16a9d; n_bits = 18; break;
case 0xff006030: code = 0x16add; n_bits = 18; break;
case 0xffb080d0: code = 0x16b1d; n_bits = 18; break;
case 0xff8090d0: code = 0x16b5d; n_bits = 18; break;
case 0xff8000f0: code = 0x16b9d; n_bits = 18; break;
case 0xff303010: code = 0x16bdd; n_bits = 18; break;
case 0xffc0f0d0: code = 0x16c1d; n_bits = 18; break;
case 0xffd050a0: code = 0x16c5d; n_bits = 18; break;
case 0xff40b030: code = 0x16c9d; n_bits = 18; break;
case 0xffc03000: code = 0x16cdd; n_bits = 18; break;
case 0xff40e0c0: code = 0x16d1d; n_bits = 18; break;
case 0xff500000: code = 0x16d5d; n_bits = 18; break;
case 0xff30c070: code = 0x16d9d; n_bits = 18; break;
case 0xff101090: code = 0x16ddd; n_bits = 18; break;
case 0xff501010: code = 0x16e1d; n_bits = 18; break;
case 0xff10d060: code = 0x16e5d; n_bits = 18; break;
case 0xff906070: code = 0x16e9d; n_bits = 18; break;
case 0xffe02090: code = 0x16edd; n_bits = 18; break;
case 0xff006060: code = 0x16f1d; n_bits = 18; break;
case 0xffc0e0f0: code = 0x16f5d; n_bits = 18; break;
case 0xfff0e010: code = 0x16f9d; n_bits = 18; break;
case 0xff6010e0: code = 0x16fdd; n_bits = 18; break;
case 0xff50f040: code = 0x1705d; n_bits = 18; break;
case 0xff70b050: code = 0x1709d; n_bits = 18; break;
case 0xff90f0b0: code = 0x170dd; n_bits = 18; break;
case 0xffa0e070: code = 0x1711d; n_bits = 18; break;
case 0xffc07070: code = 0x1715d; n_bits = 18; break;
case 0xff9050d0: code = 0x1719d; n_bits = 18; break;
case 0xff803070: code = 0x171dd; n_bits = 18; break;
case 0xffc0d050: code = 0x1721d; n_bits = 18; break;
case 0xffb0d010: code = 0x1725d; n_bits = 18; break;
case 0xffe04040: code = 0x1729d; n_bits = 18; break;
case 0xffb05040: code = 0x172dd; n_bits = 18; break;
case 0xff708090: code = 0x1731d; n_bits = 18; break;
case 0xff106070: code = 0x1735d; n_bits = 18; break;
case 0xff40f030: code = 0x1739d; n_bits = 18; break;
case 0xff807080: code = 0x173dd; n_bits = 18; break;
case 0xffa090b0: code = 0x1741d; n_bits = 18; break;
case 0xfff0d020: code = 0x1745d; n_bits = 18; break;
case 0xff505030: code = 0x1749d; n_bits = 18; break;
case 0xff80b030: code = 0x174dd; n_bits = 18; break;
case 0xff80b080: code = 0x1751d; n_bits = 18; break;
case 0xff0050b0: code = 0x1755d; n_bits = 18; break;
case 0xffc01030: code = 0x1759d; n_bits = 18; break;
case 0xff704040: code = 0x175dd; n_bits = 18; break;
case 0xffe07010: code = 0x1761d; n_bits = 18; break;
case 0xffa0d0b0: code = 0x1765d; n_bits = 18; break;
case 0xff607000: code = 0x1769d; n_bits = 18; break;
case 0xff307030: code = 0x176dd; n_bits = 18; break;
case 0xff901030: code = 0x1771d; n_bits = 18; break;
case 0xff6070b0: code = 0x1775d; n_bits = 18; break;
case 0xff70a0d0: code = 0x1779d; n_bits = 18; break;
case 0xffa020c0: code = 0x177dd; n_bits = 18; break;
case 0xff40a0f0: code = 0x1785d; n_bits = 18; break;
case 0xff606000: code = 0x1789d; n_bits = 18; break;
case 0xff30f040: code = 0x178dd; n_bits = 18; break;
case 0xff50f0f0: code = 0x1791d; n_bits = 18; break;
case 0xfff08000: code = 0x1795d; n_bits = 18; break;
case 0xffd08000: code = 0x1799d; n_bits = 18; break;
case 0xffd0c020: code = 0x179dd; n_bits = 18; break;
case 0xffd0f020: code = 0x17a1d; n_bits = 18; break;
case 0xff704080: code = 0x17a5d; n_bits = 18; break;
case 0xff80f0e0: code = 0x17a9d; n_bits = 18; break;
case 0xfff00050: code = 0x17add; n_bits = 18; break;
case 0xff500030: code = 0x17b1d; n_bits = 18; break;
case 0xffe0e050: code = 0x17b5d; n_bits = 18; break;
case 0xff50d060: code = 0x17b9d; n_bits = 18; break;
case 0xfff0b0b0: code = 0x17bdd; n_bits = 18; break;
case 0xffd0a020: code = 0x17c1d; n_bits = 18; break;
case 0xfff0d070: code = 0x17c5d; n_bits = 18; break;
case 0xff60b0b0: code = 0x17c9d; n_bits = 18; break;
case 0xff30c0b0: code = 0x17cdd; n_bits = 18; break;
case 0xff0040e0: code = 0x17d1d; n_bits = 18; break;
case 0xff108030: code = 0x17d5d; n_bits = 18; break;
case 0xff20d0e0: code = 0x17d9d; n_bits = 18; break;
case 0xff809040: code = 0x17ddd; n_bits = 18; break;
case 0xff70d0f0: code = 0x17e1d; n_bits = 18; break;
case 0xff603020: code = 0x17e5d; n_bits = 18; break;
case 0xff508000: code = 0x17e9d; n_bits = 18; break;
case 0xff701000: code = 0x17edd; n_bits = 18; break;
case 0xffb0e0e0: code = 0x17f1d; n_bits = 18; break;
case 0xffb07000: code = 0x17f5d; n_bits = 18; break;
case 0xffa010e0: code = 0x17f9d; n_bits = 18; break;
case 0xffc070c0: code = 0x17fdd; n_bits = 18; break;
case 0xff406050: code = 0x1805d; n_bits = 18; break;
case 0xffa06020: code = 0x1809d; n_bits = 18; break;
case 0xfff0d0b0: code = 0x180dd; n_bits = 18; break;
case 0xffe050a0: code = 0x1811d; n_bits = 18; break;
case 0xff102010: code = 0x1815d; n_bits = 18; break;
case 0xffd02050: code = 0x1819d; n_bits = 18; break;
case 0xff80e070: code = 0x181dd; n_bits = 18; break;
case 0xff20c000: code = 0x1821d; n_bits = 18; break;
case 0xffd04080: code = 0x1825d; n_bits = 18; break;
case 0xff005070: code = 0x1829d; n_bits = 18; break;
case 0xffd0f0a0: code = 0x182dd; n_bits = 18; break;
case 0xff3030c0: code = 0x1831d; n_bits = 18; break;
case 0xffc060b0: code = 0x1835d; n_bits = 18; break;
case 0xffa01070: code = 0x1839d; n_bits = 18; break;
case 0xff4070f0: code = 0x183dd; n_bits = 18; break;
case 0xffe0d0e0: code = 0x1845d; n_bits = 18; break;
case 0xffa08080: code = 0x1849d; n_bits = 18; break;
case 0xff406060: code = 0x184dd; n_bits = 18; break;
case 0xff908080: code = 0x1851d; n_bits = 18; break;
case 0xff703000: code = 0x1855d; n_bits = 18; break;
case 0xff601060: code = 0x1859d; n_bits = 18; break;
case 0xff5070d0: code = 0x185dd; n_bits = 18; break;
case 0xffc040f0: code = 0x1861d; n_bits = 18; break;
case 0xffb05080: code = 0x1865d; n_bits = 18; break;
case 0xff003070: code = 0x1869d; n_bits = 18; break;
case 0xff400010: code = 0x186dd; n_bits = 18; break;
case 0xfff040b0: code = 0x1871d; n_bits = 18; break;
case 0xffb0d0d0: code = 0x1875d; n_bits = 18; break;
case 0xfff010f0: code = 0x1879d; n_bits = 18; break;
case 0xffe060f0: code = 0x187dd; n_bits = 18; break;
case 0xffb03050: code = 0x1885d; n_bits = 18; break;
case 0xfff0c030: code = 0x1889d; n_bits = 18; break;
case 0xff10a0b0: code = 0x188dd; n_bits = 18; break;
case 0xff30d0d0: code = 0x1891d; n_bits = 18; break;
case 0xff100090: code = 0x1895d; n_bits = 18; break;
case 0xff301030: code = 0x1899d; n_bits = 18; break;
case 0xff80a070: code = 0x189dd; n_bits = 18; break;
case 0xff20f020: code = 0x18a1d; n_bits = 18; break;
case 0xff00c060: code = 0x18a5d; n_bits = 18; break;
case 0xffc0e090: code = 0x18a9d; n_bits = 18; break;
case 0xff505060: code = 0x18add; n_bits = 18; break;
case 0xffa05040: code = 0x18b1d; n_bits = 18; break;
case 0xffb030e0: code = 0x18b5d; n_bits = 18; break;
case 0xffe0e0d0: code = 0x18b9d; n_bits = 18; break;
case 0xff60e0c0: code = 0x18bdd; n_bits = 18; break;
case 0xff00e030: code = 0x18c1d; n_bits = 18; break;
case 0xffa0c010: code = 0x18c5d; n_bits = 18; break;
case 0xff80c010: code = 0x18c9d; n_bits = 18; break;
case 0xff4040a0: code = 0x18cdd; n_bits = 18; break;
case 0xff30e090: code = 0x18d1d; n_bits = 18; break;
case 0xfff05090: code = 0x18d5d; n_bits = 18; break;
case 0xff10c0f0: code = 0x18d9d; n_bits = 18; break;
case 0xff10b030: code = 0x18ddd; n_bits = 18; break;
case 0xff407000: code = 0x18e1d; n_bits = 18; break;
case 0xff5000a0: code = 0x18e5d; n_bits = 18; break;
case 0xffd040e0: code = 0x18e9d; n_bits = 18; break;
case 0xffe03060: code = 0x18edd; n_bits = 18; break;
case 0xff100070: code = 0x18f1d; n_bits = 18; break;
case 0xff506020: code = 0x18f5d; n_bits = 18; break;
case 0xffd070a0: code = 0x18f9d; n_bits = 18; break;
case 0xfff08080: code = 0x18fdd; n_bits = 18; break;
case 0xff80e0d0: code = 0x1905d; n_bits = 18; break;
case 0xffe04060: code = 0x1909d; n_bits = 18; break;
case 0xff30b050: code = 0x190dd; n_bits = 18; break;
case 0xff50b020: code = 0x1911d; n_bits = 18; break;
case 0xffc08040: code = 0x1915d; n_bits = 18; break;
case 0xffd00090: code = 0x1919d; n_bits = 18; break;
case 0xffe00000: code = 0x191dd; n_bits = 18; break;
case 0xffc05090: code = 0x1921d; n_bits = 18; break;
case 0xff700090: code = 0x1925d; n_bits = 18; break;
case 0xff8080d0: code = 0x1929d; n_bits = 18; break;
case 0xff5090d0: code = 0x192dd; n_bits = 18; break;
case 0xffe030b0: code = 0x1931d; n_bits = 18; break;
case 0xff80b070: code = 0x1935d; n_bits = 18; break;
case 0xffc04010: code = 0x1939d; n_bits = 18; break;
case 0xffb07090: code = 0x193dd; n_bits = 18; break;
case 0xff8010f0: code = 0x1945d; n_bits = 18; break;
case 0xff1090f0: code = 0x1949d; n_bits = 18; break;
case 0xff00e090: code = 0x194dd; n_bits = 18; break;
case 0xff404010: code = 0x1951d; n_bits = 18; break;
case 0xff70e090: code = 0x1955d; n_bits = 18; break;
case 0xff60d020: code = 0x1959d; n_bits = 18; break;
case 0xff50c010: code = 0x195dd; n_bits = 18; break;
case 0xff90b070: code = 0x1961d; n_bits = 18; break;
case 0xff309050: code = 0x1965d; n_bits = 18; break;
case 0xffe00010: code = 0x1969d; n_bits = 18; break;
case 0xff90c030: code = 0x196dd; n_bits = 18; break;
case 0xff803020: code = 0x1971d; n_bits = 18; break;
case 0xff201080: code = 0x1975d; n_bits = 18; break;
case 0xff900080: code = 0x1979d; n_bits = 18; break;
case 0xff808010: code = 0x197dd; n_bits = 18; break;
case 0xff709030: code = 0x1985d; n_bits = 18; break;
case 0xff100040: code = 0x1989d; n_bits = 18; break;
case 0xff1090e0: code = 0x198dd; n_bits = 18; break;
case 0xff6030e0: code = 0x1991d; n_bits = 18; break;
case 0xffb0d060: code = 0x1995d; n_bits = 18; break;
case 0xff2010a0: code = 0x1999d; n_bits = 18; break;
case 0xffb04050: code = 0x199dd; n_bits = 18; break;
case 0xffc0b0b0: code = 0x19a1d; n_bits = 18; break;
case 0xff10f0b0: code = 0x19a5d; n_bits = 18; break;
case 0xff404050: code = 0x19a9d; n_bits = 18; break;
case 0xffb070f0: code = 0x19add; n_bits = 18; break;
case 0xff1080f0: code = 0x19b1d; n_bits = 18; break;
case 0xffb0b0c0: code = 0x19b5d; n_bits = 18; break;
case 0xff205060: code = 0x19b9d; n_bits = 18; break;
case 0xff602000: code = 0x19bdd; n_bits = 18; break;
case 0xff504070: code = 0x19c1d; n_bits = 18; break;
case 0xff40c070: code = 0x19c5d; n_bits = 18; break;
case 0xff0040a0: code = 0x19c9d; n_bits = 18; break;
case 0xff700030: code = 0x19cdd; n_bits = 18; break;
case 0xff409000: code = 0x19d1d; n_bits = 18; break;
case 0xff102080: code = 0x19d5d; n_bits = 18; break;
case 0xff602050: code = 0x19d9d; n_bits = 18; break;
case 0xff501040: code = 0x19ddd; n_bits = 18; break;
case 0xff70a0f0: code = 0x19e1d; n_bits = 18; break;
case 0xff40f0b0: code = 0x19e5d; n_bits = 18; break;
case 0xff505010: code = 0x19e9d; n_bits = 18; break;
case 0xff2090f0: code = 0x19edd; n_bits = 18; break;
case 0xff3080b0: code = 0x19f1d; n_bits = 18; break;
case 0xff50b090: code = 0x19f5d; n_bits = 18; break;
case 0xff807030: code = 0x19f9d; n_bits = 18; break;
case 0xff902010: code = 0x19fdd; n_bits = 18; break;
case 0xff906030: code = 0x1a05d; n_bits = 18; break;
case 0xff600030: code = 0x1a09d; n_bits = 18; break;
case 0xffc000b0: code = 0x1a0dd; n_bits = 18; break;
case 0xff203020: code = 0x1a11d; n_bits = 18; break;
case 0xffe0f010: code = 0x1a15d; n_bits = 18; break;
case 0xff70e080: code = 0x1a19d; n_bits = 18; break;
case 0xff6090c0: code = 0x1a1dd; n_bits = 18; break;
case 0xffb0b040: code = 0x1a21d; n_bits = 18; break;
case 0xffa0a070: code = 0x1a25d; n_bits = 18; break;
case 0xff00e010: code = 0x1a29d; n_bits = 18; break;
case 0xff7010d0: code = 0x1a2dd; n_bits = 18; break;
case 0xffd00020: code = 0x1a31d; n_bits = 18; break;
case 0xff70f020: code = 0x1a35d; n_bits = 18; break;
case 0xff500060: code = 0x1a39d; n_bits = 18; break;
case 0xffa0c070: code = 0x1a3dd; n_bits = 18; break;
case 0xff0090a0: code = 0x1a45d; n_bits = 18; break;
case 0xfff04090: code = 0x1a49d; n_bits = 18; break;
case 0xff200090: code = 0x1a4dd; n_bits = 18; break;
case 0xffa0b010: code = 0x1a51d; n_bits = 18; break;
case 0xffa05050: code = 0x1a55d; n_bits = 18; break;
case 0xff605050: code = 0x1a59d; n_bits = 18; break;
case 0xffa04010: code = 0x1a5dd; n_bits = 18; break;
case 0xffc00010: code = 0x1a61d; n_bits = 18; break;
case 0xff200010: code = 0x1a65d; n_bits = 18; break;
case 0xff70a020: code = 0x1a69d; n_bits = 18; break;
case 0xff50b030: code = 0x1a6dd; n_bits = 18; break;
case 0xff40a030: code = 0x1a71d; n_bits = 18; break;
case 0xff2010f0: code = 0x1a75d; n_bits = 18; break;
case 0xff0010f0: code = 0x1a79d; n_bits = 18; break;
case 0xff6030a0: code = 0x1a7dd; n_bits = 18; break;
case 0xff60f0b0: code = 0x1a85d; n_bits = 18; break;
case 0xffd030f0: code = 0x1a89d; n_bits = 18; break;
case 0xfff01040: code = 0x1a8dd; n_bits = 18; break;
case 0xffc0c060: code = 0x1a91d; n_bits = 18; break;
case 0xffb02040: code = 0x1a95d; n_bits = 18; break;
case 0xff902040: code = 0x1a99d; n_bits = 18; break;
case 0xff007010: code = 0x1a9dd; n_bits = 18; break;
case 0xff107080: code = 0x1aa1d; n_bits = 18; break;
case 0xff504020: code = 0x1aa5d; n_bits = 18; break;
case 0xff9040e0: code = 0x1aa9d; n_bits = 18; break;
case 0xff20e0f0: code = 0x1aadd; n_bits = 18; break;
case 0xff6000f0: code = 0x1ab1d; n_bits = 18; break;
case 0xffe010d0: code = 0x1ab5d; n_bits = 18; break;
case 0xffa080c0: code = 0x1ab9d; n_bits = 18; break;
case 0xff605060: code = 0x1abdd; n_bits = 18; break;
case 0xffb02000: code = 0x1ac1d; n_bits = 18; break;
case 0xfff0e040: code = 0x1ac5d; n_bits = 18; break;
case 0xfff0b030: code = 0x1ac9d; n_bits = 18; break;
case 0xffe0b0c0: code = 0x1acdd; n_bits = 18; break;
case 0xff204070: code = 0x1ad1d; n_bits = 18; break;
case 0xff208090: code = 0x1ad5d; n_bits = 18; break;
case 0xffc040d0: code = 0x1ad9d; n_bits = 18; break;
case 0xffc090c0: code = 0x1addd; n_bits = 18; break;
case 0xffc07080: code = 0x1ae1d; n_bits = 18; break;
case 0xff70e020: code = 0x1ae5d; n_bits = 18; break;
case 0xff002050: code = 0x1ae9d; n_bits = 18; break;
case 0xff806040: code = 0x1aedd; n_bits = 18; break;
case 0xff205020: code = 0x1af1d; n_bits = 18; break;
case 0xff701040: code = 0x1af5d; n_bits = 18; break;
case 0xff2090c0: code = 0x1af9d; n_bits = 18; break;
case 0xff20c020: code = 0x1afdd; n_bits = 18; break;
case 0xff801000: code = 0x1b05d; n_bits = 18; break;
case 0xff803030: code = 0x1b09d; n_bits = 18; break;
case 0xff402070: code = 0x1b0dd; n_bits = 18; break;
case 0xff10f0e0: code = 0x1b11d; n_bits = 18; break;
case 0xffe06030: code = 0x1b15d; n_bits = 18; break;
case 0xffa0a010: code = 0x1b19d; n_bits = 18; break;
case 0xffb0f0f0: code = 0x1b1dd; n_bits = 18; break;
case 0xff80a0b0: code = 0x1b21d; n_bits = 18; break;
case 0xff105000: code = 0x1b25d; n_bits = 18; break;
case 0xff607030: code = 0x1b29d; n_bits = 18; break;
case 0xffd04000: code = 0x1b2dd; n_bits = 18; break;
case 0xff1060b0: code = 0x1b31d; n_bits = 18; break;
case 0xff30e040: code = 0x1b35d; n_bits = 18; break;
case 0xffb0c080: code = 0x1b39d; n_bits = 18; break;
case 0xff20f050: code = 0x1b3dd; n_bits = 18; break;
case 0xffc08070: code = 0x1b41d; n_bits = 18; break;
case 0xffe02040: code = 0x1b45d; n_bits = 18; break;
case 0xffb06020: code = 0x1b49d; n_bits = 18; break;
case 0xffe0c090: code = 0x1b4dd; n_bits = 18; break;
case 0xfff02040: code = 0x1b51d; n_bits = 18; break;
case 0xffb080e0: code = 0x1b55d; n_bits = 18; break;
case 0xff0070d0: code = 0x1b59d; n_bits = 18; break;
case 0xffd000a0: code = 0x1b5dd; n_bits = 18; break;
case 0xff508080: code = 0x1b61d; n_bits = 18; break;
case 0xff2050f0: code = 0x1b65d; n_bits = 18; break;
case 0xff20c0e0: code = 0x1b69d; n_bits = 18; break;
case 0xffb010a0: code = 0x1b6dd; n_bits = 18; break;
case 0xffa08090: code = 0x1b71d; n_bits = 18; break;
case 0xffa070a0: code = 0x1b75d; n_bits = 18; break;
case 0xff001030: code = 0x1b79d; n_bits = 18; break;
case 0xff70e0f0: code = 0x1b7dd; n_bits = 18; break;
case 0xffb010b0: code = 0x1b85d; n_bits = 18; break;
case 0xff20b0e0: code = 0x1b89d; n_bits = 18; break;
case 0xff4000b0: code = 0x1b8dd; n_bits = 18; break;
case 0xff90b0e0: code = 0x1b91d; n_bits = 18; break;
case 0xff20f040: code = 0x1b95d; n_bits = 18; break;
case 0xff30b0e0: code = 0x1b99d; n_bits = 18; break;
case 0xff60e000: code = 0x1b9dd; n_bits = 18; break;
case 0xff50f0b0: code = 0x1ba1d; n_bits = 18; break;
case 0xff90c050: code = 0x1ba5d; n_bits = 18; break;
case 0xff200000: code = 0x1ba9d; n_bits = 18; break;
case 0xff204020: code = 0x1badd; n_bits = 18; break;
case 0xffd0b0e0: code = 0x1bb1d; n_bits = 18; break;
case 0xffa070c0: code = 0x1bb5d; n_bits = 18; break;
case 0xff703060: code = 0x1bb9d; n_bits = 18; break;
case 0xff10a000: code = 0x1bbdd; n_bits = 18; break;
case 0xff6040a0: code = 0x1bc1d; n_bits = 18; break;
case 0xff207010: code = 0x1bc5d; n_bits = 18; break;
case 0xffd02070: code = 0x1bc9d; n_bits = 18; break;
case 0xff50a080: code = 0x1bcdd; n_bits = 18; break;
case 0xff0040d0: code = 0x1bd1d; n_bits = 18; break;
case 0xff103060: code = 0x1bd5d; n_bits = 18; break;
case 0xff20e030: code = 0x1bd9d; n_bits = 18; break;
case 0xff1030c0: code = 0x1bddd; n_bits = 18; break;
case 0xff604000: code = 0x1be1d; n_bits = 18; break;
case 0xfff03020: code = 0x1be5d; n_bits = 18; break;
case 0xff90a030: code = 0x1be9d; n_bits = 18; break;
case 0xfff0f010: code = 0x1bedd; n_bits = 18; break;
case 0xff902030: code = 0x1bf1d; n_bits = 18; break;
case 0xffd0f0c0: code = 0x1bf5d; n_bits = 18; break;
case 0xff10c0d0: code = 0x1bf9d; n_bits = 18; break;
case 0xffe0d000: code = 0x1bfdd; n_bits = 18; break;
case 0xffe08010: code = 0x1c05d; n_bits = 18; break;
case 0xff0040c0: code = 0x1c09d; n_bits = 18; break;
case 0xff0080e0: code = 0x1c0dd; n_bits = 18; break;
case 0xff70d040: code = 0x1c11d; n_bits = 18; break;
case 0xff108080: code = 0x1c15d; n_bits = 18; break;
case 0xff90d040: code = 0x1c19d; n_bits = 18; break;
case 0xff10d020: code = 0x1c1dd; n_bits = 18; break;
case 0xff0090f0: code = 0x1c21d; n_bits = 18; break;
case 0xff50b0f0: code = 0x1c25d; n_bits = 18; break;
case 0xffc07020: code = 0x1c29d; n_bits = 18; break;
case 0xff900090: code = 0x1c2dd; n_bits = 18; break;
case 0xffc0f0a0: code = 0x1c31d; n_bits = 18; break;
case 0xff20c080: code = 0x1c35d; n_bits = 18; break;
case 0xff7060c0: code = 0x1c39d; n_bits = 18; break;
case 0xffc0c0c0: code = 0x1c3dd; n_bits = 18; break;
case 0xff00f010: code = 0x1c45d; n_bits = 18; break;
case 0xff700060: code = 0x1c49d; n_bits = 18; break;
case 0xff70c020: code = 0x1c4dd; n_bits = 18; break;
case 0xff7080e0: code = 0x1c51d; n_bits = 18; break;
case 0xffe0c0d0: code = 0x1c55d; n_bits = 18; break;
case 0xffc0c0d0: code = 0x1c59d; n_bits = 18; break;
case 0xffe000e0: code = 0x1c5dd; n_bits = 18; break;
case 0xff20a000: code = 0x1c61d; n_bits = 18; break;
case 0xff00d0c0: code = 0x1c65d; n_bits = 18; break;
case 0xff501020: code = 0x1c69d; n_bits = 18; break;
case 0xff9070c0: code = 0x1c6dd; n_bits = 18; break;
case 0xff2050c0: code = 0x1c71d; n_bits = 18; break;
case 0xff40a090: code = 0x1c75d; n_bits = 18; break;
case 0xff90f0e0: code = 0x1c79d; n_bits = 18; break;
case 0xff5070f0: code = 0x1c7dd; n_bits = 18; break;
case 0xff20d0d0: code = 0x1c85d; n_bits = 18; break;
case 0xfff07000: code = 0x1c89d; n_bits = 18; break;
case 0xffb090f0: code = 0x1c8dd; n_bits = 18; break;
case 0xfff0b080: code = 0x1c91d; n_bits = 18; break;
case 0xff607010: code = 0x1c95d; n_bits = 18; break;
case 0xffe04020: code = 0x1c99d; n_bits = 18; break;
case 0xff300050: code = 0x1c9dd; n_bits = 18; break;
case 0xffc000c0: code = 0x1ca1d; n_bits = 18; break;
case 0xffa0e040: code = 0x1ca5d; n_bits = 18; break;
case 0xff80e040: code = 0x1ca9d; n_bits = 18; break;
case 0xffb04070: code = 0x1cadd; n_bits = 18; break;
case 0xff705030: code = 0x1cb1d; n_bits = 18; break;
case 0xff103010: code = 0x1cb5d; n_bits = 18; break;
case 0xffb030d0: code = 0x1cb9d; n_bits = 18; break;
case 0xff004020: code = 0x1cbdd; n_bits = 18; break;
case 0xfff0a0c0: code = 0x1cc1d; n_bits = 18; break;
case 0xffa030f0: code = 0x1cc5d; n_bits = 18; break;
case 0xff40e090: code = 0x1cc9d; n_bits = 18; break;
case 0xff10b060: code = 0x1ccdd; n_bits = 18; break;
case 0xffb030f0: code = 0x1cd1d; n_bits = 18; break;
case 0xff3040a0: code = 0x1cd5d; n_bits = 18; break;
case 0xffd0e0a0: code = 0x1cd9d; n_bits = 18; break;
case 0xfff0c070: code = 0x1cddd; n_bits = 18; break;
case 0xffb090d0: code = 0x1ce1d; n_bits = 18; break;
case 0xff207060: code = 0x1ce5d; n_bits = 18; break;
case 0xffb0f010: code = 0x1ce9d; n_bits = 18; break;
case 0xffc010b0: code = 0x1cedd; n_bits = 18; break;
case 0xff707000: code = 0x1cf1d; n_bits = 18; break;
case 0xffa04060: code = 0x1cf5d; n_bits = 18; break;
case 0xffa0d000: code = 0x1cf9d; n_bits = 18; break;
case 0xff2010e0: code = 0x1cfdd; n_bits = 18; break;
case 0xffe01060: code = 0x1d05d; n_bits = 18; break;
case 0xff902080: code = 0x1d09d; n_bits = 18; break;
case 0xff601030: code = 0x1d0dd; n_bits = 18; break;
case 0xffc04020: code = 0x1d11d; n_bits = 18; break;
case 0xff0010a0: code = 0x1d15d; n_bits = 18; break;
case 0xff3070a0: code = 0x1d19d; n_bits = 18; break;
case 0xfff060c0: code = 0x1d1dd; n_bits = 18; break;
case 0xff90b000: code = 0x1d21d; n_bits = 18; break;
case 0xff5010d0: code = 0x1d25d; n_bits = 18; break;
case 0xffc0f020: code = 0x1d29d; n_bits = 18; break;
case 0xffe040c0: code = 0x1d2dd; n_bits = 18; break;
case 0xff605090: code = 0x1d31d; n_bits = 18; break;
case 0xff607080: code = 0x1d35d; n_bits = 18; break;
case 0xff506010: code = 0x1d39d; n_bits = 18; break;
case 0xff0020f0: code = 0x1d3dd; n_bits = 18; break;
case 0xff603000: code = 0x1d41d; n_bits = 18; break;
case 0xff40e030: code = 0x1d45d; n_bits = 18; break;
case 0xff6070a0: code = 0x1d49d; n_bits = 18; break;
case 0xff50c040: code = 0x1d4dd; n_bits = 18; break;
case 0xff0000b0: code = 0x1d51d; n_bits = 18; break;
case 0xffa0e060: code = 0x1d55d; n_bits = 18; break;
case 0xffa06090: code = 0x1d59d; n_bits = 18; break;
case 0xffa04090: code = 0x1d5dd; n_bits = 18; break;
case 0xff906000: code = 0x1d61d; n_bits = 18; break;
case 0xff10f000: code = 0x1d65d; n_bits = 18; break;
case 0xff50a090: code = 0x1d69d; n_bits = 18; break;
case 0xff50e0b0: code = 0x1d6dd; n_bits = 18; break;
case 0xffe08000: code = 0x1d71d; n_bits = 18; break;
case 0xff0020c0: code = 0x1d75d; n_bits = 18; break;
case 0xff105060: code = 0x1d79d; n_bits = 18; break;
case 0xffb0c070: code = 0x1d7dd; n_bits = 18; break;
case 0xffb0b090: code = 0x1d85d; n_bits = 18; break;
case 0xff30d090: code = 0x1d89d; n_bits = 18; break;
case 0xff10a0d0: code = 0x1d8dd; n_bits = 18; break;
case 0xfff040d0: code = 0x1d91d; n_bits = 18; break;
case 0xff40e000: code = 0x1d95d; n_bits = 18; break;
case 0xff501090: code = 0x1d99d; n_bits = 18; break;
case 0xff107040: code = 0x1d9dd; n_bits = 18; break;
case 0xff705060: code = 0x1da1d; n_bits = 18; break;
case 0xffd00050: code = 0x1da5d; n_bits = 18; break;
case 0xff9000c0: code = 0x1da9d; n_bits = 18; break;
case 0xfff050c0: code = 0x1dadd; n_bits = 18; break;
case 0xff50c020: code = 0x1db1d; n_bits = 18; break;
case 0xfff090a0: code = 0x1db5d; n_bits = 18; break;
case 0xff00b0a0: code = 0x1db9d; n_bits = 18; break;
case 0xffb05000: code = 0x1dbdd; n_bits = 18; break;
case 0xff20b030: code = 0x1dc1d; n_bits = 18; break;
case 0xffb06090: code = 0x1dc5d; n_bits = 18; break;
case 0xff205000: code = 0x1dc9d; n_bits = 18; break;
case 0xff501070: code = 0x1dcdd; n_bits = 18; break;
case 0xffa03090: code = 0x1dd1d; n_bits = 18; break;
case 0xff70c0d0: code = 0x1dd5d; n_bits = 18; break;
case 0xff300000: code = 0x1dd9d; n_bits = 18; break;
case 0xff305000: code = 0x1dddd; n_bits = 18; break;
case 0xff7040d0: code = 0x1de1d; n_bits = 18; break;
case 0xff304030: code = 0x1de5d; n_bits = 18; break;
case 0xff306050: code = 0x1de9d; n_bits = 18; break;
case 0xff80f090: code = 0x1dedd; n_bits = 18; break;
case 0xff206050: code = 0x1df1d; n_bits = 18; break;
case 0xffc05020: code = 0x1df5d; n_bits = 18; break;
case 0xff608070: code = 0x1df9d; n_bits = 18; break;
case 0xff504090: code = 0x1dfdd; n_bits = 18; break;
case 0xff5080b0: code = 0x1e05d; n_bits = 18; break;
case 0xffe0e040: code = 0x1e09d; n_bits = 18; break;
case 0xff80c060: code = 0x1e0dd; n_bits = 18; break;
case 0xfff060e0: code = 0x1e11d; n_bits = 18; break;
case 0xffa09090: code = 0x1e15d; n_bits = 18; break;
case 0xffd0b060: code = 0x1e19d; n_bits = 18; break;
case 0xffd0f080: code = 0x1e1dd; n_bits = 18; break;
case 0xffd090f0: code = 0x1e21d; n_bits = 18; break;
case 0xff4010a0: code = 0x1e25d; n_bits = 18; break;
case 0xffc06050: code = 0x1e29d; n_bits = 18; break;
case 0xffb06010: code = 0x1e2dd; n_bits = 18; break;
case 0xffe0d090: code = 0x1e31d; n_bits = 18; break;
case 0xff007040: code = 0x1e35d; n_bits = 18; break;
case 0xffb03070: code = 0x1e39d; n_bits = 18; break;
case 0xfff05010: code = 0x1e3dd; n_bits = 18; break;
case 0xff30e000: code = 0x1e45d; n_bits = 18; break;
case 0xffa05020: code = 0x1e49d; n_bits = 18; break;
case 0xff00b050: code = 0x1e4dd; n_bits = 18; break;
case 0xff8000e0: code = 0x1e51d; n_bits = 18; break;
case 0xff6070d0: code = 0x1e55d; n_bits = 18; break;
case 0xffe0a0e0: code = 0x1e59d; n_bits = 18; break;
case 0xff9030f0: code = 0x1e5dd; n_bits = 18; break;
case 0xffb000c0: code = 0x1e61d; n_bits = 18; break;
case 0xff706080: code = 0x1e65d; n_bits = 18; break;
case 0xff700040: code = 0x1e69d; n_bits = 18; break;
case 0xff20c060: code = 0x1e6dd; n_bits = 18; break;
case 0xff20b070: code = 0x1e71d; n_bits = 18; break;
case 0xffb000d0: code = 0x1e75d; n_bits = 18; break;
case 0xff806000: code = 0x1e79d; n_bits = 18; break;
case 0xffe06080: code = 0x1e7dd; n_bits = 18; break;
case 0xffd01040: code = 0x1e85d; n_bits = 18; break;
case 0xff10b0b0: code = 0x1e89d; n_bits = 18; break;
case 0xff00f060: code = 0x1e8dd; n_bits = 18; break;
case 0xff0020a0: code = 0x1e91d; n_bits = 18; break;
case 0xff707020: code = 0x1e95d; n_bits = 18; break;
case 0xff00c0c0: code = 0x1e99d; n_bits = 18; break;
case 0xff608050: code = 0x1e9dd; n_bits = 18; break;
case 0xff7080c0: code = 0x1ea1d; n_bits = 18; break;
case 0xffb0e070: code = 0x1ea5d; n_bits = 18; break;
case 0xffe0c080: code = 0x1ea9d; n_bits = 18; break;
case 0xff60e0a0: code = 0x1eadd; n_bits = 18; break;
case 0xff3070b0: code = 0x1eb1d; n_bits = 18; break;
case 0xff402000: code = 0x1eb5d; n_bits = 18; break;
case 0xff202050: code = 0x1eb9d; n_bits = 18; break;
case 0xff30c020: code = 0x1ebdd; n_bits = 18; break;
case 0xff60c010: code = 0x1ec1d; n_bits = 18; break;
case 0xff70b080: code = 0x1ec5d; n_bits = 18; break;
case 0xff203060: code = 0x1ec9d; n_bits = 18; break;
case 0xff50d0e0: code = 0x1ecdd; n_bits = 18; break;
case 0xffd060c0: code = 0x1ed1d; n_bits = 18; break;
case 0xff301040: code = 0x1ed5d; n_bits = 18; break;
case 0xff10c000: code = 0x1ed9d; n_bits = 18; break;
case 0xffa0f0a0: code = 0x1eddd; n_bits = 18; break;
case 0xff9000a0: code = 0x1ee1d; n_bits = 18; break;
case 0xffe09090: code = 0x1ee5d; n_bits = 18; break;
case 0xff20f0b0: code = 0x1ee9d; n_bits = 18; break;
case 0xff70b0d0: code = 0x1eedd; n_bits = 18; break;
case 0xff106020: code = 0x1ef1d; n_bits = 18; break;
case 0xffe01010: code = 0x1ef5d; n_bits = 18; break;
case 0xff706060: code = 0x1ef9d; n_bits = 18; break;
case 0xffd09090: code = 0x1efdd; n_bits = 18; break;
case 0xff603050: code = 0x1f05d; n_bits = 18; break;
case 0xfff020a0: code = 0x1f09d; n_bits = 18; break;
case 0xff109030: code = 0x1f0dd; n_bits = 18; break;
case 0xff200060: code = 0x1f11d; n_bits = 18; break;
case 0xff305090: code = 0x1f15d; n_bits = 18; break;
case 0xff6090f0: code = 0x1f19d; n_bits = 18; break;
case 0xff3030b0: code = 0x1f1dd; n_bits = 18; break;
case 0xff408030: code = 0x1f21d; n_bits = 18; break;
case 0xffd0b0f0: code = 0x1f25d; n_bits = 18; break;
case 0xffc05080: code = 0x1f29d; n_bits = 18; break;
case 0xffe010a0: code = 0x1f2dd; n_bits = 18; break;
case 0xffa0f020: code = 0x1f31d; n_bits = 18; break;
case 0xff609090: code = 0x1f35d; n_bits = 18; break;
case 0xff80e010: code = 0x1f39d; n_bits = 18; break;
case 0xfff04040: code = 0x1f3dd; n_bits = 18; break;
case 0xff700000: code = 0x1f41d; n_bits = 18; break;
case 0xfff0f0b0: code = 0x1f45d; n_bits = 18; break;
case 0xffa00010: code = 0x1f49d; n_bits = 18; break;
case 0xffc070f0: code = 0x1f4dd; n_bits = 18; break;
case 0xff50d050: code = 0x1f51d; n_bits = 18; break;
case 0xffe0b010: code = 0x1f55d; n_bits = 18; break;
case 0xff505080: code = 0x1f59d; n_bits = 18; break;
case 0xff404070: code = 0x1f5dd; n_bits = 18; break;
case 0xffb0d0f0: code = 0x1f61d; n_bits = 18; break;
case 0xffb0e0d0: code = 0x1f65d; n_bits = 18; break;
case 0xff5020c0: code = 0x1f69d; n_bits = 18; break;
case 0xff108070: code = 0x1f6dd; n_bits = 18; break;
case 0xff10b090: code = 0x1f71d; n_bits = 18; break;
case 0xff304090: code = 0x1f75d; n_bits = 18; break;
case 0xff502010: code = 0x1f79d; n_bits = 18; break;
case 0xff700070: code = 0x1f7dd; n_bits = 18; break;
case 0xff1070d0: code = 0x1f85d; n_bits = 18; break;
case 0xffc0c020: code = 0x1f89d; n_bits = 18; break;
case 0xff90a0d0: code = 0x1f8dd; n_bits = 18; break;
case 0xff4010c0: code = 0x1f91d; n_bits = 18; break;
case 0xff50e030: code = 0x1f95d; n_bits = 18; break;
case 0xff70f010: code = 0x1f99d; n_bits = 18; break;
case 0xff3010f0: code = 0x1f9dd; n_bits = 18; break;
case 0xfff000d0: code = 0x1fa1d; n_bits = 18; break;
case 0xfff08020: code = 0x1fa5d; n_bits = 18; break;
case 0xff701010: code = 0x1fa9d; n_bits = 18; break;
case 0xff809090: code = 0x1fadd; n_bits = 18; break;
case 0xff709060: code = 0x1fb1d; n_bits = 18; break;
case 0xff108040: code = 0x1fb5d; n_bits = 18; break;
case 0xffa0e090: code = 0x1fb9d; n_bits = 18; break;
case 0xffd0c0f0: code = 0x1fbdd; n_bits = 18; break;
case 0xff302050: code = 0x1fc1d; n_bits = 18; break;
case 0xffb0d0e0: code = 0x1fc5d; n_bits = 18; break;
case 0xff800090: code = 0x1fc9d; n_bits = 18; break;
case 0xff30b0c0: code = 0x1fcdd; n_bits = 18; break;
case 0xffc0b0d0: code = 0x1fd1d; n_bits = 18; break;
case 0xff7080d0: code = 0x1fd5d; n_bits = 18; break;
case 0xff400030: code = 0x1fd9d; n_bits = 18; break;
case 0xff4050e0: code = 0x1fddd; n_bits = 18; break;
case 0xffa07000: code = 0x1fe1d; n_bits = 18; break;
case 0xffb050a0: code = 0x1fe5d; n_bits = 18; break;
case 0xffd0c030: code = 0x1fe9d; n_bits = 18; break;
case 0xfff04010: code = 0x1fedd; n_bits = 18; break;
case 0xff8090c0: code = 0x1ff1d; n_bits = 18; break;
case 0xff908040: code = 0x1ff5d; n_bits = 18; break;
case 0xffb08080: code = 0x1ff9d; n_bits = 18; break;
case 0xff90b020: code = 0x1ffdd; n_bits = 18; break;
case 0xff7080a0: code = 0x2005d; n_bits = 18; break;
case 0xffd060e0: code = 0x2009d; n_bits = 18; break;
case 0xffc01080: code = 0x200dd; n_bits = 18; break;
case 0xffd00040: code = 0x2011d; n_bits = 18; break;
case 0xff9060e0: code = 0x2015d; n_bits = 18; break;
case 0xff006020: code = 0x2019d; n_bits = 18; break;
case 0xfff05030: code = 0x201dd; n_bits = 18; break;
case 0xffc050f0: code = 0x2021d; n_bits = 18; break;
case 0xffc0a000: code = 0x2025d; n_bits = 18; break;
case 0xff602080: code = 0x2029d; n_bits = 18; break;
case 0xffb08090: code = 0x202dd; n_bits = 18; break;
case 0xff408000: code = 0x2031d; n_bits = 18; break;
case 0xfff0a070: code = 0x2035d; n_bits = 18; break;
case 0xff5030c0: code = 0x2039d; n_bits = 18; break;
case 0xff2090d0: code = 0x203dd; n_bits = 18; break;
case 0xff80f0f0: code = 0x2045d; n_bits = 18; break;
case 0xffa0d060: code = 0x2049d; n_bits = 18; break;
case 0xffc06060: code = 0x204dd; n_bits = 18; break;
case 0xffe09080: code = 0x2051d; n_bits = 18; break;
case 0xff4000e0: code = 0x2055d; n_bits = 18; break;
case 0xffa060b0: code = 0x2059d; n_bits = 18; break;
case 0xffa07070: code = 0x205dd; n_bits = 18; break;
case 0xff005090: code = 0x2061d; n_bits = 18; break;
case 0xffd09060: code = 0x2065d; n_bits = 18; break;
case 0xff202030: code = 0x2069d; n_bits = 18; break;
case 0xff60a0d0: code = 0x206dd; n_bits = 18; break;
case 0xffd0f0d0: code = 0x2071d; n_bits = 18; break;
case 0xff00a030: code = 0x2075d; n_bits = 18; break;
case 0xff20b010: code = 0x2079d; n_bits = 18; break;
case 0xff101040: code = 0x207dd; n_bits = 18; break;
case 0xff7060e0: code = 0x2085d; n_bits = 18; break;
case 0xff2080d0: code = 0x2089d; n_bits = 18; break;
case 0xff40d0d0: code = 0x208dd; n_bits = 18; break;
case 0xffb080f0: code = 0x2091d; n_bits = 18; break;
case 0xff10a010: code = 0x2095d; n_bits = 18; break;
case 0xff00d090: code = 0x2099d; n_bits = 18; break;
case 0xffa09030: code = 0x209dd; n_bits = 18; break;
case 0xffd070d0: code = 0x20a1d; n_bits = 18; break;
case 0xff70f050: code = 0x20a5d; n_bits = 18; break;
case 0xff609020: code = 0x20a9d; n_bits = 18; break;
case 0xff802020: code = 0x20add; n_bits = 18; break;
case 0xffd08060: code = 0x20b1d; n_bits = 18; break;
case 0xfff050d0: code = 0x20b5d; n_bits = 18; break;
case 0xff60a0a0: code = 0x20b9d; n_bits = 18; break;
case 0xffd03080: code = 0x20bdd; n_bits = 18; break;
case 0xff4070a0: code = 0x20c1d; n_bits = 18; break;
case 0xff2090a0: code = 0x20c5d; n_bits = 18; break;
case 0xfff0c0d0: code = 0x20c9d; n_bits = 18; break;
case 0xff60c070: code = 0x20cdd; n_bits = 18; break;
case 0xfff0b050: code = 0x20d1d; n_bits = 18; break;
case 0xff209060: code = 0x20d5d; n_bits = 18; break;
case 0xff30b0b0: code = 0x20d9d; n_bits = 18; break;
case 0xff90c010: code = 0x20ddd; n_bits = 18; break;
case 0xffd040c0: code = 0x20e1d; n_bits = 18; break;
case 0xff90f0d0: code = 0x20e5d; n_bits = 18; break;
case 0xffb06000: code = 0x20e9d; n_bits = 18; break;
case 0xff3040d0: code = 0x20edd; n_bits = 18; break;
case 0xff4040d0: code = 0x20f1d; n_bits = 18; break;
case 0xffd0e080: code = 0x20f5d; n_bits = 18; break;
case 0xff408010: code = 0x20f9d; n_bits = 18; break;
case 0xff709080: code = 0x20fdd; n_bits = 18; break;
case 0xff3090f0: code = 0x2105d; n_bits = 18; break;
case 0xffe02010: code = 0x2109d; n_bits = 18; break;
case 0xff60d0a0: code = 0x210dd; n_bits = 18; break;
case 0xff9000d0: code = 0x2111d; n_bits = 18; break;
case 0xfff0b060: code = 0x2115d; n_bits = 18; break;
case 0xff20d070: code = 0x2119d; n_bits = 18; break;
case 0xff70d0a0: code = 0x211dd; n_bits = 18; break;
case 0xffe0e000: code = 0x2121d; n_bits = 18; break;
case 0xff205070: code = 0x2125d; n_bits = 18; break;
case 0xffa07090: code = 0x2129d; n_bits = 18; break;
case 0xff907050: code = 0x212dd; n_bits = 18; break;
case 0xffd09030: code = 0x2131d; n_bits = 18; break;
case 0xfff02030: code = 0x2135d; n_bits = 18; break;
case 0xff9040b0: code = 0x2139d; n_bits = 18; break;
case 0xffa090a0: code = 0x213dd; n_bits = 18; break;
case 0xff50d090: code = 0x2145d; n_bits = 18; break;
case 0xffa0e030: code = 0x2149d; n_bits = 18; break;
case 0xff2010d0: code = 0x214dd; n_bits = 18; break;
case 0xff70f070: code = 0x2151d; n_bits = 18; break;
case 0xff503070: code = 0x2155d; n_bits = 18; break;
case 0xfff05020: code = 0x2159d; n_bits = 18; break;
case 0xff307090: code = 0x215dd; n_bits = 18; break;
case 0xff30a030: code = 0x2161d; n_bits = 18; break;
case 0xff602090: code = 0x2165d; n_bits = 18; break;
case 0xffc0b030: code = 0x2169d; n_bits = 18; break;
case 0xff301080: code = 0x216dd; n_bits = 18; break;
case 0xffa0b0e0: code = 0x2171d; n_bits = 18; break;
case 0xff409050: code = 0x2175d; n_bits = 18; break;
case 0xff509050: code = 0x2179d; n_bits = 18; break;
case 0xffd020b0: code = 0x217dd; n_bits = 18; break;
case 0xff20b080: code = 0x2185d; n_bits = 18; break;
case 0xff600050: code = 0x2189d; n_bits = 18; break;
case 0xffe0f0f0: code = 0x218dd; n_bits = 18; break;
case 0xffe080e0: code = 0x2191d; n_bits = 18; break;
case 0xffc0f0b0: code = 0x2195d; n_bits = 18; break;
case 0xff400060: code = 0x2199d; n_bits = 18; break;
case 0xff70b0e0: code = 0x219dd; n_bits = 18; break;
case 0xff5000f0: code = 0x21a1d; n_bits = 18; break;
case 0xff80f0c0: code = 0x21a5d; n_bits = 18; break;
case 0xffd08020: code = 0x21a9d; n_bits = 18; break;
case 0xff303040: code = 0x21add; n_bits = 18; break;
case 0xfff0e000: code = 0x21b1d; n_bits = 18; break;
case 0xff40b010: code = 0x21b5d; n_bits = 18; break;
case 0xffb070e0: code = 0x21b9d; n_bits = 18; break;
case 0xff90a060: code = 0x21bdd; n_bits = 18; break;
case 0xffb0c050: code = 0x21c1d; n_bits = 18; break;
case 0xffe000a0: code = 0x21c5d; n_bits = 18; break;
case 0xff20c070: code = 0x21c9d; n_bits = 18; break;
case 0xfff0f030: code = 0x21cdd; n_bits = 18; break;
case 0xff2080b0: code = 0x21d1d; n_bits = 18; break;
case 0xffa000b0: code = 0x21d5d; n_bits = 18; break;
case 0xff8020e0: code = 0x21d9d; n_bits = 18; break;
case 0xff90b040: code = 0x21ddd; n_bits = 18; break;
case 0xffb0c030: code = 0x21e1d; n_bits = 18; break;
case 0xff80d030: code = 0x21e5d; n_bits = 18; break;
case 0xff5080f0: code = 0x21e9d; n_bits = 18; break;
case 0xff9000b0: code = 0x21edd; n_bits = 18; break;
case 0xff0010e0: code = 0x21f1d; n_bits = 18; break;
case 0xffc02050: code = 0x21f5d; n_bits = 18; break;
case 0xff309080: code = 0x21f9d; n_bits = 18; break;
case 0xffc05030: code = 0x21fdd; n_bits = 18; break;
case 0xffb0e0f0: code = 0x2205d; n_bits = 18; break;
case 0xffe05070: code = 0x2209d; n_bits = 18; break;
case 0xffa02010: code = 0x220dd; n_bits = 18; break;
case 0xff10f090: code = 0x2211d; n_bits = 18; break;
case 0xff0060a0: code = 0x2215d; n_bits = 18; break;
case 0xff705070: code = 0x2219d; n_bits = 18; break;
case 0xff4050a0: code = 0x221dd; n_bits = 18; break;
case 0xffb0a0b0: code = 0x2221d; n_bits = 18; break;
case 0xff1020b0: code = 0x2225d; n_bits = 18; break;
case 0xff7020b0: code = 0x2229d; n_bits = 18; break;
case 0xff605000: code = 0x222dd; n_bits = 18; break;
case 0xff508030: code = 0x2231d; n_bits = 18; break;
case 0xffd04040: code = 0x2235d; n_bits = 18; break;
case 0xff602060: code = 0x2239d; n_bits = 18; break;
case 0xffa04000: code = 0x223dd; n_bits = 18; break;
case 0xff7010c0: code = 0x2245d; n_bits = 18; break;
case 0xffc0b050: code = 0x2249d; n_bits = 18; break;
case 0xff702010: code = 0x224dd; n_bits = 18; break;
case 0xff10c080: code = 0x2251d; n_bits = 18; break;
case 0xff201020: code = 0x2255d; n_bits = 18; break;
case 0xff9090c0: code = 0x2259d; n_bits = 18; break;
case 0xffb0e0a0: code = 0x225dd; n_bits = 18; break;
case 0xffa0b030: code = 0x2261d; n_bits = 18; break;
case 0xffe0c0f0: code = 0x2265d; n_bits = 18; break;
case 0xff50a030: code = 0x2269d; n_bits = 18; break;
case 0xff90d000: code = 0x226dd; n_bits = 18; break;
case 0xff703070: code = 0x2271d; n_bits = 18; break;
case 0xff309020: code = 0x2275d; n_bits = 18; break;
case 0xff5030d0: code = 0x2279d; n_bits = 18; break;
case 0xff10b0d0: code = 0x227dd; n_bits = 18; break;
case 0xff10b050: code = 0x2285d; n_bits = 18; break;
case 0xff500020: code = 0x2289d; n_bits = 18; break;
case 0xffa09060: code = 0x228dd; n_bits = 18; break;
case 0xff409030: code = 0x2291d; n_bits = 18; break;
case 0xff70a0a0: code = 0x2295d; n_bits = 18; break;
case 0xffc05060: code = 0x2299d; n_bits = 18; break;
case 0xffb05020: code = 0x229dd; n_bits = 18; break;
case 0xffe0b040: code = 0x22a1d; n_bits = 18; break;
case 0xffe0f060: code = 0x22a5d; n_bits = 18; break;
case 0xff50d0f0: code = 0x22a9d; n_bits = 18; break;
case 0xff9050b0: code = 0x22add; n_bits = 18; break;
case 0xff0080c0: code = 0x22b1d; n_bits = 18; break;
case 0xffd0b0b0: code = 0x22b5d; n_bits = 18; break;
case 0xff409020: code = 0x22b9d; n_bits = 18; break;
case 0xff00d030: code = 0x22bdd; n_bits = 18; break;
case 0xffe06060: code = 0x22c1d; n_bits = 18; break;
case 0xff503060: code = 0x22c5d; n_bits = 18; break;
case 0xff10c040: code = 0x22c9d; n_bits = 18; break;
case 0xffd070e0: code = 0x22cdd; n_bits = 18; break;
case 0xff00f090: code = 0x22d1d; n_bits = 18; break;
case 0xff802050: code = 0x22d5d; n_bits = 18; break;
case 0xffc0a040: code = 0x22d9d; n_bits = 18; break;
case 0xff401010: code = 0x22ddd; n_bits = 18; break;
case 0xffb0d000: code = 0x22e1d; n_bits = 18; break;
case 0xff705010: code = 0x22e5d; n_bits = 18; break;
case 0xffe08050: code = 0x22e9d; n_bits = 18; break;
case 0xff3080c0: code = 0x22edd; n_bits = 18; break;
case 0xffa00040: code = 0x22f1d; n_bits = 18; break;
case 0xff005010: code = 0x22f5d; n_bits = 18; break;
case 0xff90e0c0: code = 0x22f9d; n_bits = 18; break;
case 0xff20c0d0: code = 0x22fdd; n_bits = 18; break;
case 0xff304060: code = 0x2305d; n_bits = 18; break;
case 0xffe0d070: code = 0x2309d; n_bits = 18; break;
case 0xff802040: code = 0x230dd; n_bits = 18; break;
case 0xff104090: code = 0x2311d; n_bits = 18; break;
case 0xff00f0a0: code = 0x2315d; n_bits = 18; break;
case 0xffd0a090: code = 0x2319d; n_bits = 18; break;
case 0xffe09010: code = 0x231dd; n_bits = 18; break;
case 0xff808020: code = 0x2321d; n_bits = 18; break;
case 0xffd0a0e0: code = 0x2325d; n_bits = 18; break;
case 0xffa07050: code = 0x2329d; n_bits = 18; break;
case 0xfff0c0c0: code = 0x232dd; n_bits = 18; break;
case 0xff4090d0: code = 0x2331d; n_bits = 18; break;
case 0xffb0b0f0: code = 0x2335d; n_bits = 18; break;
case 0xffe0f0a0: code = 0x2339d; n_bits = 18; break;
case 0xff4060f0: code = 0x233dd; n_bits = 18; break;
case 0xff805020: code = 0x2341d; n_bits = 18; break;
case 0xffc0d060: code = 0x2345d; n_bits = 18; break;
case 0xff50d020: code = 0x2349d; n_bits = 18; break;
case 0xffb00060: code = 0x234dd; n_bits = 18; break;
case 0xff20e060: code = 0x2351d; n_bits = 18; break;
case 0xff90a000: code = 0x2355d; n_bits = 18; break;
case 0xffc0b010: code = 0x2359d; n_bits = 18; break;
case 0xffc06020: code = 0x235dd; n_bits = 18; break;
case 0xffd000b0: code = 0x2361d; n_bits = 18; break;
case 0xff8050e0: code = 0x2365d; n_bits = 18; break;
case 0xff30b0d0: code = 0x2369d; n_bits = 18; break;
case 0xff30f0a0: code = 0x236dd; n_bits = 18; break;
case 0xffd04030: code = 0x2371d; n_bits = 18; break;
case 0xff00b0d0: code = 0x2375d; n_bits = 18; break;
case 0xffb08050: code = 0x2379d; n_bits = 18; break;
case 0xff7040f0: code = 0x237dd; n_bits = 18; break;
case 0xffe040d0: code = 0x2385d; n_bits = 18; break;
case 0xff90f0f0: code = 0x2389d; n_bits = 18; break;
case 0xff60a0f0: code = 0x238dd; n_bits = 18; break;
case 0xff30a0a0: code = 0x2391d; n_bits = 18; break;
case 0xff40a0b0: code = 0x2395d; n_bits = 18; break;
case 0xff5030f0: code = 0x2399d; n_bits = 18; break;
case 0xffe0e010: code = 0x239dd; n_bits = 18; break;
case 0xff4060b0: code = 0x23a1d; n_bits = 18; break;
case 0xffb01090: code = 0x23a5d; n_bits = 18; break;
case 0xffa0e010: code = 0x23a9d; n_bits = 18; break;
case 0xffc02080: code = 0x23add; n_bits = 18; break;
case 0xffd050c0: code = 0x23b1d; n_bits = 18; break;
case 0xff502030: code = 0x23b5d; n_bits = 18; break;
case 0xffc030d0: code = 0x23b9d; n_bits = 18; break;
case 0xff50f0e0: code = 0x23bdd; n_bits = 18; break;
case 0xff706090: code = 0x23c1d; n_bits = 18; break;
case 0xffa02030: code = 0x23c5d; n_bits = 18; break;
case 0xff006040: code = 0x23c9d; n_bits = 18; break;
case 0xffb070d0: code = 0x23cdd; n_bits = 18; break;
case 0xfff090b0: code = 0x23d1d; n_bits = 18; break;
case 0xff2040a0: code = 0x23d5d; n_bits = 18; break;
case 0xfff070c0: code = 0x23d9d; n_bits = 18; break;
case 0xff30b090: code = 0x23ddd; n_bits = 18; break;
case 0xff106050: code = 0x23e1d; n_bits = 18; break;
case 0xffd0e040: code = 0x23e5d; n_bits = 18; break;
case 0xff90f080: code = 0x23e9d; n_bits = 18; break;
case 0xff3010e0: code = 0x23edd; n_bits = 18; break;
case 0xffe050d0: code = 0x23f1d; n_bits = 18; break;
case 0xfff0e080: code = 0x23f5d; n_bits = 18; break;
case 0xff209030: code = 0x23f9d; n_bits = 18; break;
case 0xfff0f050: code = 0x23fdd; n_bits = 18; break;
case 0xff40f060: code = 0x2405d; n_bits = 18; break;
case 0xffd0a0d0: code = 0x2409d; n_bits = 18; break;
case 0xffd0e0f0: code = 0x240dd; n_bits = 18; break;
case 0xffe0d0b0: code = 0x2411d; n_bits = 18; break;
case 0xff2050a0: code = 0x2415d; n_bits = 18; break;
case 0xff904030: code = 0x2419d; n_bits = 18; break;
case 0xffc02010: code = 0x241dd; n_bits = 18; break;
case 0xff601040: code = 0x2421d; n_bits = 18; break;
case 0xff509040: code = 0x2425d; n_bits = 18; break;
case 0xff309040: code = 0x2429d; n_bits = 18; break;
case 0xfff04080: code = 0x242dd; n_bits = 18; break;
case 0xff50f0d0: code = 0x2431d; n_bits = 18; break;
case 0xff3020e0: code = 0x2435d; n_bits = 18; break;
case 0xfff010e0: code = 0x2439d; n_bits = 18; break;
case 0xff909070: code = 0x243dd; n_bits = 18; break;
case 0xff40b0e0: code = 0x2445d; n_bits = 18; break;
case 0xff90e000: code = 0x2449d; n_bits = 18; break;
case 0xff5050c0: code = 0x244dd; n_bits = 18; break;
case 0xff606030: code = 0x2451d; n_bits = 18; break;
case 0xff1070a0: code = 0x2455d; n_bits = 18; break;
case 0xff304040: code = 0x2459d; n_bits = 18; break;
case 0xff70e030: code = 0x245dd; n_bits = 18; break;
case 0xffe0f0e0: code = 0x2461d; n_bits = 18; break;
case 0xff0040b0: code = 0x2465d; n_bits = 18; break;
case 0xff000070: code = 0x2469d; n_bits = 18; break;
case 0xfff060f0: code = 0x246dd; n_bits = 18; break;
case 0xffe00050: code = 0x2471d; n_bits = 18; break;
case 0xff70d0b0: code = 0x2475d; n_bits = 18; break;
case 0xff50d0b0: code = 0x2479d; n_bits = 18; break;
case 0xffa01020: code = 0x247dd; n_bits = 18; break;
case 0xff904090: code = 0x2485d; n_bits = 18; break;
case 0xff20a040: code = 0x2489d; n_bits = 18; break;
case 0xff5020a0: code = 0x248dd; n_bits = 18; break;
case 0xff702070: code = 0x2491d; n_bits = 18; break;
case 0xffa030e0: code = 0x2495d; n_bits = 18; break;
case 0xff600060: code = 0x2499d; n_bits = 18; break;
case 0xffb0f000: code = 0x249dd; n_bits = 18; break;
case 0xff10a0e0: code = 0x24a1d; n_bits = 18; break;
case 0xff205030: code = 0x24a5d; n_bits = 18; break;
case 0xffa0f0d0: code = 0x24a9d; n_bits = 18; break;
case 0xff50e070: code = 0x24add; n_bits = 18; break;
case 0xff703020: code = 0x24b1d; n_bits = 18; break;
case 0xff00f080: code = 0x24b5d; n_bits = 18; break;
case 0xffd0a070: code = 0x24b9d; n_bits = 18; break;
case 0xfff0d050: code = 0x24bdd; n_bits = 18; break;
case 0xff10e060: code = 0x24c1d; n_bits = 18; break;
case 0xffb0f0a0: code = 0x24c5d; n_bits = 18; break;
case 0xffb05050: code = 0x24c9d; n_bits = 18; break;
case 0xff30a020: code = 0x24cdd; n_bits = 18; break;
case 0xfff01070: code = 0x24d1d; n_bits = 18; break;
case 0xffe01030: code = 0x24d5d; n_bits = 18; break;
case 0xff20c040: code = 0x24d9d; n_bits = 18; break;
case 0xff20e0c0: code = 0x24ddd; n_bits = 18; break;
case 0xff3020c0: code = 0x24e1d; n_bits = 18; break;
case 0xffb060b0: code = 0x24e5d; n_bits = 18; break;
case 0xffc00080: code = 0x24e9d; n_bits = 18; break;
case 0xffc040a0: code = 0x24edd; n_bits = 18; break;
case 0xfff030e0: code = 0x24f1d; n_bits = 18; break;
case 0xffd07080: code = 0x24f5d; n_bits = 18; break;
case 0xffb080b0: code = 0x24f9d; n_bits = 18; break;
case 0xffe0e0c0: code = 0x24fdd; n_bits = 18; break;
case 0xffb0e000: code = 0x2505d; n_bits = 18; break;
case 0xff403050: code = 0x2509d; n_bits = 18; break;
case 0xff40e0e0: code = 0x250dd; n_bits = 18; break;
case 0xffe0c0e0: code = 0x2511d; n_bits = 18; break;
case 0xffa09080: code = 0x2515d; n_bits = 18; break;
case 0xffb020c0: code = 0x2519d; n_bits = 18; break;
case 0xffb060e0: code = 0x251dd; n_bits = 18; break;
case 0xffd0b0c0: code = 0x2521d; n_bits = 18; break;
case 0xff606010: code = 0x2525d; n_bits = 18; break;
case 0xff500090: code = 0x2529d; n_bits = 18; break;
case 0xff10f050: code = 0x252dd; n_bits = 18; break;
case 0xffc00090: code = 0x2531d; n_bits = 18; break;
case 0xff60c0b0: code = 0x2535d; n_bits = 18; break;
case 0xff008060: code = 0x2539d; n_bits = 18; break;
case 0xff300060: code = 0x253dd; n_bits = 18; break;
case 0xff00d050: code = 0x2545d; n_bits = 18; break;
case 0xff0080d0: code = 0x2549d; n_bits = 18; break;
case 0xffc0f0e0: code = 0x254dd; n_bits = 18; break;
case 0xff5070a0: code = 0x2551d; n_bits = 18; break;
case 0xff403030: code = 0x2555d; n_bits = 18; break;
case 0xff5080e0: code = 0x2559d; n_bits = 18; break;
case 0xff4070d0: code = 0x255dd; n_bits = 18; break;
case 0xff600010: code = 0x2561d; n_bits = 18; break;
case 0xff40c0e0: code = 0x2565d; n_bits = 18; break;
case 0xffc01050: code = 0x2569d; n_bits = 18; break;
case 0xffc05070: code = 0x256dd; n_bits = 18; break;
case 0xffe060c0: code = 0x2571d; n_bits = 18; break;
case 0xff20a090: code = 0x2575d; n_bits = 18; break;
case 0xffe0b070: code = 0x2579d; n_bits = 18; break;
case 0xffe0f090: code = 0x257dd; n_bits = 18; break;
case 0xff307060: code = 0x2585d; n_bits = 18; break;
case 0xfff00030: code = 0x2589d; n_bits = 18; break;
case 0xffc0d0f0: code = 0x258dd; n_bits = 18; break;
case 0xff60c0f0: code = 0x2591d; n_bits = 18; break;
case 0xffd00030: code = 0x2595d; n_bits = 18; break;
case 0xffb00030: code = 0x2599d; n_bits = 18; break;
case 0xff905090: code = 0x259dd; n_bits = 18; break;
case 0xffb07050: code = 0x25a1d; n_bits = 18; break;
case 0xff604050: code = 0x25a5d; n_bits = 18; break;
case 0xff5070e0: code = 0x25a9d; n_bits = 18; break;
case 0xff104080: code = 0x25add; n_bits = 18; break;
case 0xff503010: code = 0x25b1d; n_bits = 18; break;
case 0xff30f0e0: code = 0x25b5d; n_bits = 18; break;
case 0xff90c000: code = 0x25b9d; n_bits = 18; break;
case 0xffe08020: code = 0x25bdd; n_bits = 18; break;
case 0xff2020d0: code = 0x25c1d; n_bits = 18; break;
case 0xffe090b0: code = 0x25c5d; n_bits = 18; break;
case 0xff702040: code = 0x25c9d; n_bits = 18; break;
case 0xfff05050: code = 0x25cdd; n_bits = 18; break;
case 0xffa080a0: code = 0x25d1d; n_bits = 18; break;
case 0xff804000: code = 0x25d5d; n_bits = 18; break;
case 0xff7050e0: code = 0x25d9d; n_bits = 18; break;
case 0xff901060: code = 0x25ddd; n_bits = 18; break;
case 0xff903070: code = 0x25e1d; n_bits = 18; break;
case 0xff90f0a0: code = 0x25e5d; n_bits = 18; break;
case 0xff50e020: code = 0x25e9d; n_bits = 18; break;
case 0xff1050d0: code = 0x25edd; n_bits = 18; break;
case 0xff204050: code = 0x25f1d; n_bits = 18; break;
case 0xff905040: code = 0x25f5d; n_bits = 18; break;
case 0xff90a0c0: code = 0x25f9d; n_bits = 18; break;
case 0xff806050: code = 0x25fdd; n_bits = 18; break;
case 0xff102040: code = 0x2605d; n_bits = 18; break;
case 0xff303020: code = 0x2609d; n_bits = 18; break;
case 0xff803050: code = 0x260dd; n_bits = 18; break;
case 0xffa0c030: code = 0x2611d; n_bits = 18; break;
case 0xfff0b010: code = 0x2615d; n_bits = 18; break;
case 0xff40c030: code = 0x2619d; n_bits = 18; break;
case 0xffd0f000: code = 0x261dd; n_bits = 18; break;
case 0xffa030c0: code = 0x2621d; n_bits = 18; break;
case 0xff7030f0: code = 0x2625d; n_bits = 18; break;
case 0xfff09070: code = 0x2629d; n_bits = 18; break;
case 0xff207080: code = 0x262dd; n_bits = 18; break;
case 0xffb01060: code = 0x2631d; n_bits = 18; break;
case 0xff802060: code = 0x2635d; n_bits = 18; break;
case 0xff509070: code = 0x2639d; n_bits = 18; break;
case 0xffd030e0: code = 0x263dd; n_bits = 18; break;
case 0xffe03010: code = 0x2645d; n_bits = 18; break;
case 0xffe00030: code = 0x2649d; n_bits = 18; break;
case 0xff403000: code = 0x264dd; n_bits = 18; break;
case 0xff80c050: code = 0x2651d; n_bits = 18; break;
case 0xff30c010: code = 0x2655d; n_bits = 18; break;
case 0xff30e030: code = 0x2659d; n_bits = 18; break;
case 0xff50b0c0: code = 0x265dd; n_bits = 18; break;
case 0xff9060f0: code = 0x2661d; n_bits = 18; break;
case 0xff001050: code = 0x2665d; n_bits = 18; break;
case 0xff800010: code = 0x2669d; n_bits = 18; break;
case 0xffd0f0f0: code = 0x266dd; n_bits = 18; break;
case 0xff50d0c0: code = 0x2671d; n_bits = 18; break;
case 0xffe0d080: code = 0x2675d; n_bits = 18; break;
case 0xff9000e0: code = 0x2679d; n_bits = 18; break;
case 0xff40d010: code = 0x267dd; n_bits = 18; break;
case 0xff5040c0: code = 0x2685d; n_bits = 18; break;
case 0xff806060: code = 0x2689d; n_bits = 18; break;
case 0xff00a0a0: code = 0x268dd; n_bits = 18; break;
case 0xffb08000: code = 0x2691d; n_bits = 18; break;
case 0xffa00080: code = 0x2695d; n_bits = 18; break;
case 0xffd00060: code = 0x2699d; n_bits = 18; break;
case 0xff10a0a0: code = 0x269dd; n_bits = 18; break;
case 0xff909060: code = 0x26a1d; n_bits = 18; break;
case 0xffd040a0: code = 0x26a5d; n_bits = 18; break;
case 0xff30d030: code = 0x26a9d; n_bits = 18; break;
case 0xff80d060: code = 0x26add; n_bits = 18; break;
case 0xffc03030: code = 0x26b1d; n_bits = 18; break;
case 0xff0070e0: code = 0x26b5d; n_bits = 18; break;
case 0xff90e040: code = 0x26b9d; n_bits = 18; break;
case 0xff60d0f0: code = 0x26bdd; n_bits = 18; break;
case 0xffa05080: code = 0x26c1d; n_bits = 18; break;
case 0xff904070: code = 0x26c5d; n_bits = 18; break;
case 0xffc080a0: code = 0x26c9d; n_bits = 18; break;
case 0xff401040: code = 0x26cdd; n_bits = 18; break;
case 0xff100010: code = 0x26d1d; n_bits = 18; break;
case 0xff104030: code = 0x26d5d; n_bits = 18; break;
case 0xff303060: code = 0x26d9d; n_bits = 18; break;
case 0xff10c0c0: code = 0x26ddd; n_bits = 18; break;
case 0xff4020f0: code = 0x26e1d; n_bits = 18; break;
case 0xff506050: code = 0x26e5d; n_bits = 18; break;
case 0xffa0a0d0: code = 0x26e9d; n_bits = 18; break;
case 0xfff080f0: code = 0x26edd; n_bits = 18; break;
case 0xffb0d0b0: code = 0x26f1d; n_bits = 18; break;
case 0xffc0c030: code = 0x26f5d; n_bits = 18; break;
case 0xff9080c0: code = 0x26f9d; n_bits = 18; break;
case 0xff00d060: code = 0x26fdd; n_bits = 18; break;
case 0xff10a040: code = 0x2705d; n_bits = 18; break;
case 0xffe03090: code = 0x2709d; n_bits = 18; break;
case 0xffe070b0: code = 0x270dd; n_bits = 18; break;
case 0xff40e0f0: code = 0x2711d; n_bits = 18; break;
case 0xff2040f0: code = 0x2715d; n_bits = 18; break;
case 0xff903010: code = 0x2719d; n_bits = 18; break;
case 0xff502070: code = 0x271dd; n_bits = 18; break;
case 0xff6020e0: code = 0x2721d; n_bits = 18; break;
case 0xff10e010: code = 0x2725d; n_bits = 18; break;
case 0xff008090: code = 0x2729d; n_bits = 18; break;
case 0xffe0b020: code = 0x272dd; n_bits = 18; break;
case 0xff3000e0: code = 0x2731d; n_bits = 18; break;
case 0xffc06080: code = 0x2735d; n_bits = 18; break;
case 0xffa08020: code = 0x2739d; n_bits = 18; break;
case 0xffd0f060: code = 0x273dd; n_bits = 18; break;
case 0xfff010b0: code = 0x2741d; n_bits = 18; break;
case 0xff8070a0: code = 0x2745d; n_bits = 18; break;
case 0xff906090: code = 0x2749d; n_bits = 18; break;
case 0xffc0d0d0: code = 0x274dd; n_bits = 18; break;
case 0xff80f0a0: code = 0x2751d; n_bits = 18; break;
case 0xfff000c0: code = 0x2755d; n_bits = 18; break;
case 0xff1030e0: code = 0x2759d; n_bits = 18; break;
case 0xff7040e0: code = 0x275dd; n_bits = 18; break;
case 0xff908010: code = 0x2761d; n_bits = 18; break;
case 0xffb08010: code = 0x2765d; n_bits = 18; break;
case 0xff701080: code = 0x2769d; n_bits = 18; break;
case 0xff4010b0: code = 0x276dd; n_bits = 18; break;
case 0xff009050: code = 0x2771d; n_bits = 18; break;
case 0xff3010b0: code = 0x2775d; n_bits = 18; break;
case 0xff8040e0: code = 0x2779d; n_bits = 18; break;
case 0xffe060b0: code = 0x277dd; n_bits = 18; break;
case 0xff9020f0: code = 0x2785d; n_bits = 18; break;
case 0xff700080: code = 0x2789d; n_bits = 18; break;
case 0xff4090c0: code = 0x278dd; n_bits = 18; break;
case 0xffe00080: code = 0x2791d; n_bits = 18; break;
case 0xff206090: code = 0x2795d; n_bits = 18; break;
case 0xff800080: code = 0x2799d; n_bits = 18; break;
case 0xff406030: code = 0x279dd; n_bits = 18; break;
case 0xffa04050: code = 0x27a1d; n_bits = 18; break;
case 0xff003050: code = 0x27a5d; n_bits = 18; break;
case 0xff70c050: code = 0x27a9d; n_bits = 18; break;
case 0xff40c080: code = 0x27add; n_bits = 18; break;
case 0xff00b010: code = 0x27b1d; n_bits = 18; break;
case 0xfff070f0: code = 0x27b5d; n_bits = 18; break;
case 0xff107000: code = 0x27b9d; n_bits = 18; break;
case 0xffb0e010: code = 0x27bdd; n_bits = 18; break;
case 0xff5080a0: code = 0x27c1d; n_bits = 18; break;
case 0xff7050c0: code = 0x27c5d; n_bits = 18; break;
case 0xff1040d0: code = 0x27c9d; n_bits = 18; break;
case 0xff8040b0: code = 0x27cdd; n_bits = 18; break;
case 0xff70a050: code = 0x27d1d; n_bits = 18; break;
case 0xff2020b0: code = 0x27d5d; n_bits = 18; break;
case 0xff2050b0: code = 0x27d9d; n_bits = 18; break;
case 0xff806010: code = 0x27ddd; n_bits = 18; break;
case 0xffe020b0: code = 0x27e1d; n_bits = 18; break;
case 0xffd04060: code = 0x27e5d; n_bits = 18; break;
case 0xffa00000: code = 0x27e9d; n_bits = 18; break;
case 0xff9020e0: code = 0x27edd; n_bits = 18; break;
case 0xffb0c0e0: code = 0x27f1d; n_bits = 18; break;
case 0xffc0d040: code = 0x27f5d; n_bits = 18; break;
case 0xff30f030: code = 0x27f9d; n_bits = 18; break;
case 0xff30e050: code = 0x27fdd; n_bits = 18; break;
case 0xff907000: code = 0x2805d; n_bits = 18; break;
case 0xff402040: code = 0x2809d; n_bits = 18; break;
case 0xff70c030: code = 0x280dd; n_bits = 18; break;
case 0xff20f090: code = 0x2811d; n_bits = 18; break;
case 0xff40d070: code = 0x2815d; n_bits = 18; break;
case 0xff406080: code = 0x2819d; n_bits = 18; break;
case 0xffd06070: code = 0x281dd; n_bits = 18; break;
case 0xff009010: code = 0x2821d; n_bits = 18; break;
case 0xffb06080: code = 0x2825d; n_bits = 18; break;
case 0xffe06020: code = 0x2829d; n_bits = 18; break;
case 0xffe0a000: code = 0x282dd; n_bits = 18; break;
case 0xff00d0f0: code = 0x2831d; n_bits = 18; break;
case 0xff407020: code = 0x2835d; n_bits = 18; break;
case 0xff403060: code = 0x2839d; n_bits = 18; break;
case 0xff40b0c0: code = 0x283dd; n_bits = 18; break;
case 0xfff08040: code = 0x2845d; n_bits = 18; break;
case 0xff708020: code = 0x2849d; n_bits = 18; break;
case 0xffd000e0: code = 0x284dd; n_bits = 18; break;
case 0xff80d020: code = 0x2851d; n_bits = 18; break;
case 0xff004010: code = 0x2855d; n_bits = 18; break;
case 0xff607060: code = 0x2859d; n_bits = 18; break;
case 0xff4050c0: code = 0x285dd; n_bits = 18; break;
case 0xff00e0a0: code = 0x2861d; n_bits = 18; break;
case 0xffe030e0: code = 0x2865d; n_bits = 18; break;
case 0xff5060d0: code = 0x2869d; n_bits = 18; break;
case 0xff70b070: code = 0x286dd; n_bits = 18; break;
case 0xffb07010: code = 0x2871d; n_bits = 18; break;
case 0xff70a090: code = 0x2875d; n_bits = 18; break;
case 0xff301070: code = 0x2879d; n_bits = 18; break;
case 0xffa090d0: code = 0x287dd; n_bits = 18; break;
case 0xff100060: code = 0x2885d; n_bits = 18; break;
case 0xff3040c0: code = 0x2889d; n_bits = 18; break;
case 0xff205010: code = 0x288dd; n_bits = 18; break;
case 0xff900030: code = 0x2891d; n_bits = 18; break;
case 0xff4020a0: code = 0x2895d; n_bits = 18; break;
case 0xff202070: code = 0x2899d; n_bits = 18; break;
case 0xff2060d0: code = 0x289dd; n_bits = 18; break;
case 0xff3090a0: code = 0x28a1d; n_bits = 18; break;
case 0xff507080: code = 0x28a5d; n_bits = 18; break;
case 0xff60b020: code = 0x28a9d; n_bits = 18; break;
case 0xfff0b0f0: code = 0x28add; n_bits = 18; break;
case 0xffb090a0: code = 0x28b1d; n_bits = 18; break;
case 0xffb02020: code = 0x28b5d; n_bits = 18; break;
case 0xfff03040: code = 0x28b9d; n_bits = 18; break;
case 0xff709020: code = 0x28bdd; n_bits = 18; break;
case 0xffd0c0e0: code = 0x28c1d; n_bits = 18; break;
case 0xffb08030: code = 0x28c5d; n_bits = 18; break;
case 0xffd04010: code = 0x28c9d; n_bits = 18; break;
case 0xff80e060: code = 0x28cdd; n_bits = 18; break;
case 0xff205040: code = 0x28d1d; n_bits = 18; break;
case 0xff005040: code = 0x28d5d; n_bits = 18; break;
case 0xff6040f0: code = 0x28d9d; n_bits = 18; break;
case 0xffa050b0: code = 0x28ddd; n_bits = 18; break;
case 0xff501080: code = 0x28e1d; n_bits = 18; break;
case 0xff803090: code = 0x28e5d; n_bits = 18; break;
case 0xff907040: code = 0x28e9d; n_bits = 18; break;
case 0xff802030: code = 0x28edd; n_bits = 18; break;
case 0xffd0d040: code = 0x28f1d; n_bits = 18; break;
case 0xffc0d000: code = 0x28f5d; n_bits = 18; break;
case 0xffd090a0: code = 0x28f9d; n_bits = 18; break;
case 0xffe060e0: code = 0x28fdd; n_bits = 18; break;
case 0xffa0d0c0: code = 0x2905d; n_bits = 18; break;
case 0xff80e000: code = 0x2909d; n_bits = 18; break;
case 0xfff0c0e0: code = 0x290dd; n_bits = 18; break;
case 0xff506000: code = 0x2911d; n_bits = 18; break;
case 0xff00c090: code = 0x2915d; n_bits = 18; break;
case 0xff0050a0: code = 0x2919d; n_bits = 18; break;
case 0xff60d0b0: code = 0x291dd; n_bits = 18; break;
case 0xff002090: code = 0x2921d; n_bits = 18; break;
case 0xff904080: code = 0x2925d; n_bits = 18; break;
case 0xff0020e0: code = 0x2929d; n_bits = 18; break;
case 0xff10c030: code = 0x292dd; n_bits = 18; break;
case 0xffa06010: code = 0x2931d; n_bits = 18; break;
case 0xffd03070: code = 0x2935d; n_bits = 18; break;
case 0xff7050f0: code = 0x2939d; n_bits = 18; break;
case 0xff0010d0: code = 0x293dd; n_bits = 18; break;
case 0xff90f040: code = 0x2945d; n_bits = 18; break;
case 0xffe070c0: code = 0x2949d; n_bits = 18; break;
case 0xffc0e0a0: code = 0x294dd; n_bits = 18; break;
case 0xff908000: code = 0x2951d; n_bits = 18; break;
case 0xff705080: code = 0x2955d; n_bits = 18; break;
case 0xffd06060: code = 0x2959d; n_bits = 18; break;
case 0xffc090f0: code = 0x295dd; n_bits = 18; break;
case 0xfff0c040: code = 0x2961d; n_bits = 18; break;
case 0xff300040: code = 0x2965d; n_bits = 18; break;
case 0xfff040e0: code = 0x2969d; n_bits = 18; break;
case 0xffe04030: code = 0x296dd; n_bits = 18; break;
case 0xff00c0b0: code = 0x2971d; n_bits = 18; break;
case 0xffb01050: code = 0x2975d; n_bits = 18; break;
case 0xfff0f0d0: code = 0x2979d; n_bits = 18; break;
case 0xff902090: code = 0x297dd; n_bits = 18; break;
case 0xff9080f0: code = 0x2985d; n_bits = 18; break;
case 0xff70f000: code = 0x2989d; n_bits = 18; break;
case 0xff206000: code = 0x298dd; n_bits = 18; break;
case 0xff407060: code = 0x2991d; n_bits = 18; break;
case 0xff80a0d0: code = 0x2995d; n_bits = 18; break;
case 0xff20b0b0: code = 0x2999d; n_bits = 18; break;
case 0xff80e0b0: code = 0x299dd; n_bits = 18; break;
case 0xffd06010: code = 0x29a1d; n_bits = 18; break;
case 0xffc00040: code = 0x29a5d; n_bits = 18; break;
case 0xffa05000: code = 0x29a9d; n_bits = 18; break;
case 0xff40f0e0: code = 0x29add; n_bits = 18; break;
case 0xff00a090: code = 0x29b1d; n_bits = 18; break;
case 0xffa03040: code = 0x29b5d; n_bits = 18; break;
case 0xfff08060: code = 0x29b9d; n_bits = 18; break;
case 0xff80b020: code = 0x29bdd; n_bits = 18; break;
case 0xffe05090: code = 0x29c1d; n_bits = 18; break;
case 0xff90d090: code = 0x29c5d; n_bits = 18; break;
case 0xffc080e0: code = 0x29c9d; n_bits = 18; break;
case 0xff701020: code = 0x29cdd; n_bits = 18; break;
case 0xff60a020: code = 0x29d1d; n_bits = 18; break;
case 0xffc040b0: code = 0x29d5d; n_bits = 18; break;
case 0xff60a040: code = 0x29d9d; n_bits = 18; break;
case 0xff10b0e0: code = 0x29ddd; n_bits = 18; break;
case 0xff809010: code = 0x29e1d; n_bits = 18; break;
case 0xff1080d0: code = 0x29e5d; n_bits = 18; break;
case 0xff606040: code = 0x29e9d; n_bits = 18; break;
case 0xff7010f0: code = 0x29edd; n_bits = 18; break;
case 0xff60d000: code = 0x29f1d; n_bits = 18; break;
case 0xff6040b0: code = 0x29f5d; n_bits = 18; break;
case 0xffe090d0: code = 0x29f9d; n_bits = 18; break;
case 0xff3080a0: code = 0x29fdd; n_bits = 18; break;
case 0xff70e050: code = 0x2a05d; n_bits = 18; break;
case 0xff60e080: code = 0x2a09d; n_bits = 18; break;
case 0xff30e0b0: code = 0x2a0dd; n_bits = 18; break;
case 0xff602010: code = 0x2a11d; n_bits = 18; break;
case 0xff401000: code = 0x2a15d; n_bits = 18; break;
case 0xff005050: code = 0x2a19d; n_bits = 18; break;
case 0xffc0a0f0: code = 0x2a1dd; n_bits = 18; break;
case 0xff308000: code = 0x2a21d; n_bits = 18; break;
case 0xfff02070: code = 0x2a25d; n_bits = 18; break;
case 0xffb020e0: code = 0x2a29d; n_bits = 18; break;
case 0xff00f020: code = 0x2a2dd; n_bits = 18; break;
case 0xffe000b0: code = 0x2a31d; n_bits = 18; break;
case 0xff8090a0: code = 0x2a35d; n_bits = 18; break;
case 0xff006000: code = 0x2a39d; n_bits = 18; break;
case 0xff805040: code = 0x2a3dd; n_bits = 18; break;
case 0xffc0e030: code = 0x2a45d; n_bits = 18; break;
case 0xff707060: code = 0x2a49d; n_bits = 18; break;
case 0xff8080e0: code = 0x2a4dd; n_bits = 18; break;
case 0xfff03010: code = 0x2a51d; n_bits = 18; break;
case 0xff002060: code = 0x2a55d; n_bits = 18; break;
case 0xffc020f0: code = 0x2a59d; n_bits = 18; break;
case 0xffa08030: code = 0x2a5dd; n_bits = 18; break;
case 0xff80c070: code = 0x2a61d; n_bits = 18; break;
case 0xffc04030: code = 0x2a65d; n_bits = 18; break;
case 0xffc02020: code = 0x2a69d; n_bits = 18; break;
case 0xff708010: code = 0x2a6dd; n_bits = 18; break;
case 0xff401020: code = 0x2a71d; n_bits = 18; break;
case 0xff20d0f0: code = 0x2a75d; n_bits = 18; break;
case 0xff30b040: code = 0x2a79d; n_bits = 18; break;
case 0xff500010: code = 0x2a7dd; n_bits = 18; break;
case 0xff609000: code = 0x2a85d; n_bits = 18; break;
case 0xff30b010: code = 0x2a89d; n_bits = 18; break;
case 0xff801090: code = 0x2a8dd; n_bits = 18; break;
case 0xff003010: code = 0x2a91d; n_bits = 18; break;
case 0xff408050: code = 0x2a95d; n_bits = 18; break;
case 0xff70c0c0: code = 0x2a99d; n_bits = 18; break;
case 0xff901090: code = 0x2a9dd; n_bits = 18; break;
case 0xffb08020: code = 0x2aa1d; n_bits = 18; break;
case 0xff701090: code = 0x2aa5d; n_bits = 18; break;
case 0xff900050: code = 0x2aa9d; n_bits = 18; break;
case 0xff7060f0: code = 0x2aadd; n_bits = 18; break;
case 0xff70e040: code = 0x2ab1d; n_bits = 18; break;
case 0xff100000: code = 0x2ab5d; n_bits = 18; break;
case 0xfff0a0f0: code = 0x2ab9d; n_bits = 18; break;
case 0xffd040b0: code = 0x2abdd; n_bits = 18; break;
case 0xff40d050: code = 0x2ac1d; n_bits = 18; break;
case 0xff4060c0: code = 0x2ac5d; n_bits = 18; break;
case 0xff70d080: code = 0x2ac9d; n_bits = 18; break;
case 0xffa0e020: code = 0x2acdd; n_bits = 18; break;
case 0xff805010: code = 0x2ad1d; n_bits = 18; break;
case 0xff1050e0: code = 0x2ad5d; n_bits = 18; break;
case 0xff3050b0: code = 0x2ad9d; n_bits = 18; break;
case 0xff40a020: code = 0x2addd; n_bits = 18; break;
case 0xff507030: code = 0x2ae1d; n_bits = 18; break;
case 0xffb040b0: code = 0x2ae5d; n_bits = 18; break;
case 0xff508070: code = 0x2ae9d; n_bits = 18; break;
case 0xff2080a0: code = 0x2aedd; n_bits = 18; break;
case 0xffd0c070: code = 0x2af1d; n_bits = 18; break;
case 0xffb01020: code = 0x2af5d; n_bits = 18; break;
case 0xff6020c0: code = 0x2af9d; n_bits = 18; break;
case 0xff704020: code = 0x2afdd; n_bits = 18; break;
case 0xff802010: code = 0x2b05d; n_bits = 18; break;
case 0xff20d0a0: code = 0x2b09d; n_bits = 18; break;
case 0xff1060d0: code = 0x2b0dd; n_bits = 18; break;
case 0xff10d0a0: code = 0x2b11d; n_bits = 18; break;
case 0xff9030b0: code = 0x2b15d; n_bits = 18; break;
case 0xffc06030: code = 0x2b19d; n_bits = 18; break;
case 0xffc0a050: code = 0x2b1dd; n_bits = 18; break;
case 0xffa060d0: code = 0x2b21d; n_bits = 18; break;
case 0xff408070: code = 0x2b25d; n_bits = 18; break;
case 0xffc0f060: code = 0x2b29d; n_bits = 18; break;
case 0xff3000f0: code = 0x2b2dd; n_bits = 18; break;
case 0xff201010: code = 0x2b31d; n_bits = 18; break;
case 0xff4080c0: code = 0x2b35d; n_bits = 18; break;
case 0xff307050: code = 0x2b39d; n_bits = 18; break;
case 0xffe070e0: code = 0x2b3dd; n_bits = 18; break;
case 0xff80e030: code = 0x2b41d; n_bits = 18; break;
case 0xff405020: code = 0x2b45d; n_bits = 18; break;
case 0xff4080e0: code = 0x2b49d; n_bits = 18; break;
case 0xff30d080: code = 0x2b4dd; n_bits = 18; break;
case 0xffe0b000: code = 0x2b51d; n_bits = 18; break;
case 0xff70b040: code = 0x2b55d; n_bits = 18; break;
case 0xffe090f0: code = 0x2b59d; n_bits = 18; break;
case 0xff603030: code = 0x2b5dd; n_bits = 18; break;
case 0xff40a060: code = 0x2b61d; n_bits = 18; break;
case 0xfff02010: code = 0x2b65d; n_bits = 18; break;
case 0xff809030: code = 0x2b69d; n_bits = 18; break;
case 0xffc0b0c0: code = 0x2b6dd; n_bits = 18; break;
case 0xff30b0a0: code = 0x2b71d; n_bits = 18; break;
case 0xffe020d0: code = 0x2b75d; n_bits = 18; break;
case 0xff701050: code = 0x2b79d; n_bits = 18; break;
case 0xff307000: code = 0x2b7dd; n_bits = 18; break;
case 0xff208020: code = 0x2b85d; n_bits = 18; break;
case 0xff108050: code = 0x2b89d; n_bits = 18; break;
case 0xff50e000: code = 0x2b8dd; n_bits = 18; break;
case 0xff008050: code = 0x2b91d; n_bits = 18; break;
case 0xff107090: code = 0x2b95d; n_bits = 18; break;
case 0xffa08050: code = 0x2b99d; n_bits = 18; break;
case 0xff2030e0: code = 0x2b9dd; n_bits = 18; break;
case 0xffe0d030: code = 0x2ba1d; n_bits = 18; break;
case 0xff103040: code = 0x2ba5d; n_bits = 18; break;
case 0xffd07050: code = 0x2ba9d; n_bits = 18; break;
case 0xffd0b070: code = 0x2badd; n_bits = 18; break;
case 0xff30d060: code = 0x2bb1d; n_bits = 18; break;
case 0xff50b040: code = 0x2bb5d; n_bits = 18; break;
case 0xff504050: code = 0x2bb9d; n_bits = 18; break;
case 0xff204080: code = 0x2bbdd; n_bits = 18; break;
case 0xffd01010: code = 0x2bc1d; n_bits = 18; break;
case 0xff503090: code = 0x2bc5d; n_bits = 18; break;
case 0xff209010: code = 0x2bc9d; n_bits = 18; break;
case 0xffe070a0: code = 0x2bcdd; n_bits = 18; break;
case 0xffd0a0f0: code = 0x2bd1d; n_bits = 18; break;
case 0xffc0a0b0: code = 0x2bd5d; n_bits = 18; break;
case 0xff2040d0: code = 0x2bd9d; n_bits = 18; break;
case 0xffe02070: code = 0x2bddd; n_bits = 18; break;
case 0xff2020f0: code = 0x2be1d; n_bits = 18; break;
case 0xfff090f0: code = 0x2be5d; n_bits = 18; break;
case 0xffc080c0: code = 0x2be9d; n_bits = 18; break;
case 0xffe010c0: code = 0x2bedd; n_bits = 18; break;
case 0xffd0b0a0: code = 0x2bf1d; n_bits = 18; break;
case 0xffe0a020: code = 0x2bf5d; n_bits = 18; break;
case 0xff6040d0: code = 0x2bf9d; n_bits = 18; break;
case 0xff4050f0: code = 0x2bfdd; n_bits = 18; break;
case 0xff10d010: code = 0x2c05d; n_bits = 18; break;
case 0xff1070c0: code = 0x2c09d; n_bits = 18; break;
case 0xffd0d070: code = 0x2c0dd; n_bits = 18; break;
case 0xff202000: code = 0x2c11d; n_bits = 18; break;
case 0xff20e0b0: code = 0x2c15d; n_bits = 18; break;
case 0xff40c0d0: code = 0x2c19d; n_bits = 18; break;
case 0xff50b050: code = 0x2c1dd; n_bits = 18; break;
case 0xffd09070: code = 0x2c21d; n_bits = 18; break;
case 0xfff0c050: code = 0x2c25d; n_bits = 18; break;
case 0xffd02090: code = 0x2c29d; n_bits = 18; break;
case 0xff80d0c0: code = 0x2c2dd; n_bits = 18; break;
case 0xffd0a000: code = 0x2c31d; n_bits = 18; break;
case 0xffa0b000: code = 0x2c35d; n_bits = 18; break;
case 0xff801020: code = 0x2c39d; n_bits = 18; break;
case 0xff80f020: code = 0x2c3dd; n_bits = 18; break;
case 0xff50e060: code = 0x2c45d; n_bits = 18; break;
case 0xffd0f0b0: code = 0x2c49d; n_bits = 18; break;
case 0xff2030c0: code = 0x2c4dd; n_bits = 18; break;
case 0xffc000e0: code = 0x2c51d; n_bits = 18; break;
case 0xffa0f030: code = 0x2c55d; n_bits = 18; break;
case 0xff80f030: code = 0x2c59d; n_bits = 18; break;
case 0xff308060: code = 0x2c5dd; n_bits = 18; break;
case 0xff500040: code = 0x2c61d; n_bits = 18; break;
case 0xff504060: code = 0x2c65d; n_bits = 18; break;
case 0xffa0b0d0: code = 0x2c69d; n_bits = 18; break;
case 0xff3040e0: code = 0x2c6dd; n_bits = 18; break;
case 0xffa04020: code = 0x2c71d; n_bits = 18; break;
case 0xff300010: code = 0x2c75d; n_bits = 18; break;
case 0xff30e0f0: code = 0x2c79d; n_bits = 18; break;
case 0xffb0a0c0: code = 0x2c7dd; n_bits = 18; break;
case 0xff7050d0: code = 0x2c85d; n_bits = 18; break;
case 0xff00b080: code = 0x2c89d; n_bits = 18; break;
case 0xff1000d0: code = 0x2c8dd; n_bits = 18; break;
case 0xff503000: code = 0x2c91d; n_bits = 18; break;
case 0xff00f0e0: code = 0x2c95d; n_bits = 18; break;
case 0xff90c0c0: code = 0x2c99d; n_bits = 18; break;
case 0xffd0d0e0: code = 0x2c9dd; n_bits = 18; break;
case 0xff50e010: code = 0x2ca1d; n_bits = 18; break;
case 0xffa0b060: code = 0x2ca5d; n_bits = 18; break;
case 0xff807010: code = 0x2ca9d; n_bits = 18; break;
case 0xffc020e0: code = 0x2cadd; n_bits = 18; break;
case 0xff10f0c0: code = 0x2cb1d; n_bits = 18; break;
case 0xff8000c0: code = 0x2cb5d; n_bits = 18; break;
case 0xff904060: code = 0x2cb9d; n_bits = 18; break;
case 0xffd0e090: code = 0x2cbdd; n_bits = 18; break;
case 0xffb0d020: code = 0x2cc1d; n_bits = 18; break;
case 0xff80d050: code = 0x2cc5d; n_bits = 18; break;
case 0xff103030: code = 0x2cc9d; n_bits = 18; break;
case 0xffa050e0: code = 0x2ccdd; n_bits = 18; break;
case 0xff604070: code = 0x2cd1d; n_bits = 18; break;
case 0xffc02070: code = 0x2cd5d; n_bits = 18; break;
case 0xffe09000: code = 0x2cd9d; n_bits = 18; break;
case 0xff0060f0: code = 0x2cddd; n_bits = 18; break;
case 0xff0050d0: code = 0x2ce1d; n_bits = 18; break;
case 0xffe0a060: code = 0x2ce5d; n_bits = 18; break;
case 0xff707030: code = 0x2ce9d; n_bits = 18; break;
case 0xff901080: code = 0x2cedd; n_bits = 18; break;
case 0xff7010b0: code = 0x2cf1d; n_bits = 18; break;
case 0xfff05080: code = 0x2cf5d; n_bits = 18; break;
case 0xfff05000: code = 0x2cf9d; n_bits = 18; break;
case 0xffc06000: code = 0x2cfdd; n_bits = 18; break;
case 0xff50c030: code = 0x2d05d; n_bits = 18; break;
case 0xff40c060: code = 0x2d09d; n_bits = 18; break;
case 0xff10c090: code = 0x2d0dd; n_bits = 18; break;
case 0xffc060e0: code = 0x2d11d; n_bits = 18; break;
case 0xffd020c0: code = 0x2d15d; n_bits = 18; break;
case 0xffe0e0f0: code = 0x2d19d; n_bits = 18; break;
case 0xff20c090: code = 0x2d1dd; n_bits = 18; break;
case 0xffe03000: code = 0x2d21d; n_bits = 18; break;
case 0xff60f020: code = 0x2d25d; n_bits = 18; break;
case 0xff5090a0: code = 0x2d29d; n_bits = 18; break;
case 0xff00a050: code = 0x2d2dd; n_bits = 18; break;
case 0xff608090: code = 0x2d31d; n_bits = 18; break;
case 0xff309090: code = 0x2d35d; n_bits = 18; break;
case 0xffe00090: code = 0x2d39d; n_bits = 18; break;
case 0xff508090: code = 0x2d3dd; n_bits = 18; break;
case 0xff10e000: code = 0x2d41d; n_bits = 18; break;
case 0xff605010: code = 0x2d45d; n_bits = 18; break;
case 0xffd0e010: code = 0x2d49d; n_bits = 18; break;
case 0xffc030b0: code = 0x2d4dd; n_bits = 18; break;
case 0xff205050: code = 0x2d51d; n_bits = 18; break;
case 0xfff06060: code = 0x2d55d; n_bits = 18; break;
case 0xff804080: code = 0x2d59d; n_bits = 18; break;
case 0xff80c080: code = 0x2d5dd; n_bits = 18; break;
case 0xff70c0b0: code = 0x2d61d; n_bits = 18; break;
case 0xff007000: code = 0x2d65d; n_bits = 18; break;
case 0xffa02090: code = 0x2d69d; n_bits = 18; break;
case 0xff90b0d0: code = 0x2d6dd; n_bits = 18; break;
case 0xff50a060: code = 0x2d71d; n_bits = 18; break;
case 0xffe0c0b0: code = 0x2d75d; n_bits = 18; break;
case 0xffc0c0b0: code = 0x2d79d; n_bits = 18; break;
case 0xff609050: code = 0x2d7dd; n_bits = 18; break;
case 0xff501060: code = 0x2d85d; n_bits = 18; break;
case 0xff805090: code = 0x2d89d; n_bits = 18; break;
case 0xffe010f0: code = 0x2d8dd; n_bits = 18; break;
case 0xffb07030: code = 0x2d91d; n_bits = 18; break;
case 0xff609070: code = 0x2d95d; n_bits = 18; break;
case 0xff80c0f0: code = 0x2d99d; n_bits = 18; break;
case 0xff7060d0: code = 0x2d9dd; n_bits = 18; break;
case 0xffc010d0: code = 0x2da1d; n_bits = 18; break;
case 0xff60d060: code = 0x2da5d; n_bits = 18; break;
case 0xff503020: code = 0x2da9d; n_bits = 18; break;
case 0xffb030a0: code = 0x2dadd; n_bits = 18; break;
case 0xff0080f0: code = 0x2db1d; n_bits = 18; break;
case 0xffb0c000: code = 0x2db5d; n_bits = 18; break;
case 0xffb0a0e0: code = 0x2db9d; n_bits = 18; break;
case 0xff8030f0: code = 0x2dbdd; n_bits = 18; break;
case 0xffa02020: code = 0x2dc1d; n_bits = 18; break;
case 0xff90a020: code = 0x2dc5d; n_bits = 18; break;
case 0xff6050e0: code = 0x2dc9d; n_bits = 18; break;
case 0xff80e090: code = 0x2dcdd; n_bits = 18; break;
case 0xff40b060: code = 0x2dd1d; n_bits = 18; break;
case 0xff10d040: code = 0x2dd5d; n_bits = 18; break;
case 0xff906050: code = 0x2dd9d; n_bits = 18; break;
case 0xff1050a0: code = 0x2dddd; n_bits = 18; break;
case 0xff4080a0: code = 0x2de1d; n_bits = 18; break;
case 0xff1000a0: code = 0x2de5d; n_bits = 18; break;
case 0xfff0b0e0: code = 0x2de9d; n_bits = 18; break;
case 0xffe0b0a0: code = 0x2dedd; n_bits = 18; break;
case 0xff3000d0: code = 0x2df1d; n_bits = 18; break;
case 0xff0090b0: code = 0x2df5d; n_bits = 18; break;
case 0xffd070f0: code = 0x2df9d; n_bits = 18; break;
case 0xff9090e0: code = 0x2dfdd; n_bits = 18; break;
case 0xff907060: code = 0x2e05d; n_bits = 18; break;
case 0xff2070f0: code = 0x2e09d; n_bits = 18; break;
case 0xff405090: code = 0x2e0dd; n_bits = 18; break;
case 0xff004060: code = 0x2e11d; n_bits = 18; break;
case 0xffc08080: code = 0x2e15d; n_bits = 18; break;
case 0xff50f0c0: code = 0x2e19d; n_bits = 18; break;
case 0xff601000: code = 0x2e1dd; n_bits = 18; break;
case 0xff109040: code = 0x2e21d; n_bits = 18; break;
case 0xfff0d010: code = 0x2e25d; n_bits = 18; break;
case 0xffa010a0: code = 0x2e29d; n_bits = 18; break;
case 0xff70a0e0: code = 0x2e2dd; n_bits = 18; break;
case 0xff1010a0: code = 0x2e31d; n_bits = 18; break;
case 0xffb0e090: code = 0x2e35d; n_bits = 18; break;
case 0xff70f0d0: code = 0x2e39d; n_bits = 18; break;
case 0xff106010: code = 0x2e3dd; n_bits = 18; break;
case 0xffc04050: code = 0x2e45d; n_bits = 18; break;
case 0xff709070: code = 0x2e49d; n_bits = 18; break;
case 0xff50f0a0: code = 0x2e4dd; n_bits = 18; break;
case 0xfff050b0: code = 0x2e51d; n_bits = 18; break;
case 0xff40f0a0: code = 0x2e55d; n_bits = 18; break;
case 0xfff020d0: code = 0x2e59d; n_bits = 18; break;
case 0xff805050: code = 0x2e5dd; n_bits = 18; break;
case 0xff60c080: code = 0x2e61d; n_bits = 18; break;
case 0xfff0c010: code = 0x2e65d; n_bits = 18; break;
case 0xffd0f090: code = 0x2e69d; n_bits = 18; break;
case 0xffd09050: code = 0x2e6dd; n_bits = 18; break;
case 0xff80d000: code = 0x2e71d; n_bits = 18; break;
case 0xff70b0a0: code = 0x2e75d; n_bits = 18; break;
case 0xff601020: code = 0x2e79d; n_bits = 18; break;
case 0xff20a010: code = 0x2e7dd; n_bits = 18; break;
case 0xffa02070: code = 0x2e85d; n_bits = 18; break;
case 0xff00b040: code = 0x2e89d; n_bits = 18; break;
case 0xff508050: code = 0x2e8dd; n_bits = 18; break;
case 0xff80e0e0: code = 0x2e91d; n_bits = 18; break;
case 0xffe0e070: code = 0x2e95d; n_bits = 18; break;
case 0xffc0e070: code = 0x2e99d; n_bits = 18; break;
case 0xfff0b0d0: code = 0x2e9dd; n_bits = 18; break;
case 0xffb01000: code = 0x2ea1d; n_bits = 18; break;
case 0xff4080f0: code = 0x2ea5d; n_bits = 18; break;
case 0xff10e070: code = 0x2ea9d; n_bits = 18; break;
case 0xff50b010: code = 0x2eadd; n_bits = 18; break;
case 0xff50f080: code = 0x2eb1d; n_bits = 18; break;
case 0xfff070a0: code = 0x2eb5d; n_bits = 18; break;
case 0xff3060b0: code = 0x2eb9d; n_bits = 18; break;
case 0xff30a0d0: code = 0x2ebdd; n_bits = 18; break;
case 0xfff03030: code = 0x2ec1d; n_bits = 18; break;
case 0xff90d080: code = 0x2ec5d; n_bits = 18; break;
case 0xffb0e060: code = 0x2ec9d; n_bits = 18; break;
case 0xff1080b0: code = 0x2ecdd; n_bits = 18; break;
case 0xff10c070: code = 0x2ed1d; n_bits = 18; break;
case 0xfff0e0a0: code = 0x2ed5d; n_bits = 18; break;
case 0xff001010: code = 0x2ed9d; n_bits = 18; break;
case 0xffb0a000: code = 0x2eddd; n_bits = 18; break;
case 0xfff07020: code = 0x2ee1d; n_bits = 18; break;
case 0xff50f060: code = 0x2ee5d; n_bits = 18; break;
case 0xff7070b0: code = 0x2ee9d; n_bits = 18; break;
case 0xff0090e0: code = 0x2eedd; n_bits = 18; break;
case 0xffa09050: code = 0x2ef1d; n_bits = 18; break;
case 0xff7090e0: code = 0x2ef5d; n_bits = 18; break;
case 0xff30c060: code = 0x2ef9d; n_bits = 18; break;
case 0xff507060: code = 0x2efdd; n_bits = 18; break;
case 0xff403080: code = 0x2f05d; n_bits = 18; break;
case 0xff7070f0: code = 0x2f09d; n_bits = 18; break;
case 0xff2030b0: code = 0x2f0dd; n_bits = 18; break;
case 0xffe080c0: code = 0x2f11d; n_bits = 18; break;
case 0xfff000b0: code = 0x2f15d; n_bits = 18; break;
case 0xffb010f0: code = 0x2f19d; n_bits = 18; break;
case 0xff50b080: code = 0x2f1dd; n_bits = 18; break;
case 0xfff06090: code = 0x2f21d; n_bits = 18; break;
case 0xffe06050: code = 0x2f25d; n_bits = 18; break;
case 0xffd02060: code = 0x2f29d; n_bits = 18; break;
case 0xff20f080: code = 0x2f2dd; n_bits = 18; break;
case 0xffd050f0: code = 0x2f31d; n_bits = 18; break;
case 0xff10f080: code = 0x2f35d; n_bits = 18; break;
case 0xff809060: code = 0x2f39d; n_bits = 18; break;
case 0xff4060e0: code = 0x2f3dd; n_bits = 18; break;
case 0xffe05020: code = 0x2f41d; n_bits = 18; break;
case 0xffd05050: code = 0x2f45d; n_bits = 18; break;
case 0xff10f0a0: code = 0x2f49d; n_bits = 18; break;
case 0xff10e0c0: code = 0x2f4dd; n_bits = 18; break;
case 0xffb040c0: code = 0x2f51d; n_bits = 18; break;
case 0xff70b030: code = 0x2f55d; n_bits = 18; break;
case 0xff6080d0: code = 0x2f59d; n_bits = 18; break;
case 0xff00d080: code = 0x2f5dd; n_bits = 18; break;
case 0xffc08050: code = 0x2f61d; n_bits = 18; break;
case 0xff80e0f0: code = 0x2f65d; n_bits = 18; break;
case 0xffd0e0c0: code = 0x2f69d; n_bits = 18; break;
case 0xffb07060: code = 0x2f6dd; n_bits = 18; break;
case 0xff603090: code = 0x2f71d; n_bits = 18; break;
case 0xff30a0c0: code = 0x2f75d; n_bits = 18; break;
case 0xff502090: code = 0x2f79d; n_bits = 18; break;
case 0xff20b0d0: code = 0x2f7dd; n_bits = 18; break;
case 0xffa01080: code = 0x2f85d; n_bits = 18; break;
case 0xffd030c0: code = 0x2f89d; n_bits = 18; break;
case 0xfff09080: code = 0x2f8dd; n_bits = 18; break;
case 0xff807000: code = 0x2f91d; n_bits = 18; break;
case 0xffd09040: code = 0x2f95d; n_bits = 18; break;
case 0xff808000: code = 0x2f99d; n_bits = 18; break;
case 0xff40f040: code = 0x2f9dd; n_bits = 18; break;
case 0xff20d060: code = 0x2fa1d; n_bits = 18; break;
case 0xfff060a0: code = 0x2fa5d; n_bits = 18; break;
case 0xff40a000: code = 0x2fa9d; n_bits = 18; break;
case 0xff10a030: code = 0x2fadd; n_bits = 18; break;
case 0xff407040: code = 0x2fb1d; n_bits = 18; break;
case 0xffc0f090: code = 0x2fb5d; n_bits = 18; break;
case 0xffa02000: code = 0x2fb9d; n_bits = 18; break;
case 0xff90f050: code = 0x2fbdd; n_bits = 18; break;
case 0xff108020: code = 0x2fc1d; n_bits = 18; break;
case 0xffa0b0f0: code = 0x2fc5d; n_bits = 18; break;
case 0xff10d0e0: code = 0x2fc9d; n_bits = 18; break;
case 0xff10d0f0: code = 0x2fcdd; n_bits = 18; break;
case 0xffe090e0: code = 0x2fd1d; n_bits = 18; break;
case 0xffc000d0: code = 0x2fd5d; n_bits = 18; break;
case 0xff70b090: code = 0x2fd9d; n_bits = 18; break;
case 0xffa040f0: code = 0x2fddd; n_bits = 18; break;
case 0xff405040: code = 0x2fe1d; n_bits = 18; break;
case 0xff60c030: code = 0x2fe5d; n_bits = 18; break;
case 0xff605040: code = 0x2fe9d; n_bits = 18; break;
case 0xff30e080: code = 0x2fedd; n_bits = 18; break;
case 0xffd010c0: code = 0x2ff1d; n_bits = 18; break;
case 0xffe00040: code = 0x2ff5d; n_bits = 18; break;
case 0xff20e040: code = 0x2ff9d; n_bits = 18; break;
case 0xffe03020: code = 0x2ffdd; n_bits = 18; break;
case 0xff60e020: code = 0x3005d; n_bits = 18; break;
case 0xff306080: code = 0x3009d; n_bits = 18; break;
case 0xff8060b0: code = 0x300dd; n_bits = 18; break;
case 0xff206080: code = 0x3011d; n_bits = 18; break;
case 0xff404060: code = 0x3015d; n_bits = 18; break;
case 0xffa09010: code = 0x3019d; n_bits = 18; break;
case 0xffe0a0d0: code = 0x301dd; n_bits = 18; break;
case 0xff2040b0: code = 0x3021d; n_bits = 18; break;
case 0xffc090d0: code = 0x3025d; n_bits = 18; break;
case 0xff90e0f0: code = 0x3029d; n_bits = 18; break;
case 0xff8010d0: code = 0x302dd; n_bits = 18; break;
case 0xff20c0b0: code = 0x3031d; n_bits = 18; break;
case 0xffc040e0: code = 0x3035d; n_bits = 18; break;
case 0xff409040: code = 0x3039d; n_bits = 18; break;
case 0xff308030: code = 0x303dd; n_bits = 18; break;
case 0xffc0f000: code = 0x3045d; n_bits = 18; break;
case 0xffe01000: code = 0x3049d; n_bits = 18; break;
case 0xff60e030: code = 0x304dd; n_bits = 18; break;
case 0xffe010b0: code = 0x3051d; n_bits = 18; break;
case 0xff90b0c0: code = 0x3055d; n_bits = 18; break;
case 0xff805000: code = 0x3059d; n_bits = 18; break;
case 0xff008020: code = 0x305dd; n_bits = 18; break;
case 0xff70b010: code = 0x3061d; n_bits = 18; break;
case 0xffc05000: code = 0x3065d; n_bits = 18; break;
case 0xff3050c0: code = 0x3069d; n_bits = 18; break;
case 0xffc0b0f0: code = 0x306dd; n_bits = 18; break;
case 0xffc0b070: code = 0x3071d; n_bits = 18; break;
case 0xff90c070: code = 0x3075d; n_bits = 18; break;
case 0xffc04070: code = 0x3079d; n_bits = 18; break;
case 0xffb04030: code = 0x307dd; n_bits = 18; break;
case 0xffc070b0: code = 0x3085d; n_bits = 18; break;
case 0xffa01030: code = 0x3089d; n_bits = 18; break;
case 0xff801070: code = 0x308dd; n_bits = 18; break;
case 0xff101030: code = 0x3091d; n_bits = 18; break;
case 0xff20d090: code = 0x3095d; n_bits = 18; break;
case 0xff3060d0: code = 0x3099d; n_bits = 18; break;
case 0xff30c0c0: code = 0x309dd; n_bits = 18; break;
case 0xff200080: code = 0x30a1d; n_bits = 18; break;
case 0xffb03030: code = 0x30a5d; n_bits = 18; break;
case 0xff902060: code = 0x30a9d; n_bits = 18; break;
case 0xffd0d010: code = 0x30add; n_bits = 18; break;
case 0xffc04000: code = 0x30b1d; n_bits = 18; break;
case 0xffb0a050: code = 0x30b5d; n_bits = 18; break;
case 0xff00e040: code = 0x30b9d; n_bits = 18; break;
case 0xff6080c0: code = 0x30bdd; n_bits = 18; break;
case 0xffb0b0d0: code = 0x30c1d; n_bits = 18; break;
case 0xff105040: code = 0x30c5d; n_bits = 18; break;
case 0xffe08070: code = 0x30c9d; n_bits = 18; break;
case 0xff70b0f0: code = 0x30cdd; n_bits = 18; break;
case 0xff10e030: code = 0x30d1d; n_bits = 18; break;
case 0xffc0c050: code = 0x30d5d; n_bits = 18; break;
case 0xff702060: code = 0x30d9d; n_bits = 18; break;
case 0xff40d080: code = 0x30ddd; n_bits = 18; break;
case 0xff80c0e0: code = 0x30e1d; n_bits = 18; break;
case 0xff8020f0: code = 0x30e5d; n_bits = 18; break;
case 0xffa00070: code = 0x30e9d; n_bits = 18; break;
case 0xffa0f0c0: code = 0x30edd; n_bits = 18; break;
case 0xff1010b0: code = 0x30f1d; n_bits = 18; break;
case 0xff00b090: code = 0x30f5d; n_bits = 18; break;
case 0xff50b0a0: code = 0x30f9d; n_bits = 18; break;
case 0xff60f000: code = 0x30fdd; n_bits = 18; break;
case 0xff205090: code = 0x3105d; n_bits = 18; break;
case 0xfff080c0: code = 0x3109d; n_bits = 18; break;
case 0xff302040: code = 0x310dd; n_bits = 18; break;
case 0xff6050a0: code = 0x3111d; n_bits = 18; break;
case 0xffe07000: code = 0x3115d; n_bits = 18; break;
case 0xffa07080: code = 0x3119d; n_bits = 18; break;
case 0xffa0c060: code = 0x311dd; n_bits = 18; break;
case 0xff80a0f0: code = 0x3121d; n_bits = 18; break;
case 0xff108060: code = 0x3125d; n_bits = 18; break;
case 0xffe06090: code = 0x3129d; n_bits = 18; break;
case 0xff30e010: code = 0x312dd; n_bits = 18; break;
case 0xffb0a070: code = 0x3131d; n_bits = 18; break;
case 0xff20e010: code = 0x3135d; n_bits = 18; break;
case 0xff80d090: code = 0x3139d; n_bits = 18; break;
case 0xff80e050: code = 0x313dd; n_bits = 18; break;
case 0xffa090c0: code = 0x3145d; n_bits = 18; break;
case 0xfff02020: code = 0x3149d; n_bits = 18; break;
case 0xff005080: code = 0x314dd; n_bits = 18; break;
case 0xffe060a0: code = 0x3151d; n_bits = 18; break;
case 0xff3040b0: code = 0x3155d; n_bits = 18; break;
case 0xffe0a0c0: code = 0x3159d; n_bits = 18; break;
case 0xff6000d0: code = 0x315dd; n_bits = 18; break;
case 0xff40d0c0: code = 0x3161d; n_bits = 18; break;
case 0xff60b0a0: code = 0x3165d; n_bits = 18; break;
case 0xfff04070: code = 0x3169d; n_bits = 18; break;
case 0xff207000: code = 0x316dd; n_bits = 18; break;
case 0xff9070b0: code = 0x3171d; n_bits = 18; break;
case 0xff50c0e0: code = 0x3175d; n_bits = 18; break;
case 0xffa040e0: code = 0x3179d; n_bits = 18; break;
case 0xffd02020: code = 0x317dd; n_bits = 18; break;
case 0xffe0c040: code = 0x3185d; n_bits = 18; break;
case 0xff80f070: code = 0x3189d; n_bits = 18; break;
case 0xffb00020: code = 0x318dd; n_bits = 18; break;
case 0xff500050: code = 0x3191d; n_bits = 18; break;
case 0xffb0b050: code = 0x3195d; n_bits = 18; break;
case 0xffe03050: code = 0x3199d; n_bits = 18; break;
case 0xff80b010: code = 0x319dd; n_bits = 18; break;
case 0xff406070: code = 0x31a1d; n_bits = 18; break;
case 0xffe0e090: code = 0x31a5d; n_bits = 18; break;
case 0xff804040: code = 0x31a9d; n_bits = 18; break;
case 0xff30c050: code = 0x31add; n_bits = 18; break;
case 0xffd0f010: code = 0x31b1d; n_bits = 18; break;
case 0xff5020b0: code = 0x31b5d; n_bits = 18; break;
case 0xffb09080: code = 0x31b9d; n_bits = 18; break;
case 0xff2070e0: code = 0x31bdd; n_bits = 18; break;
case 0xff80f0d0: code = 0x31c1d; n_bits = 18; break;
case 0xff30c040: code = 0x31c5d; n_bits = 18; break;
case 0xffd03040: code = 0x31c9d; n_bits = 18; break;
case 0xff805080: code = 0x31cdd; n_bits = 18; break;
case 0xffb010c0: code = 0x31d1d; n_bits = 18; break;
case 0xff40d0e0: code = 0x31d5d; n_bits = 18; break;
case 0xffe08030: code = 0x31d9d; n_bits = 18; break;
case 0xff80c0a0: code = 0x31ddd; n_bits = 18; break;
case 0xff00f030: code = 0x31e1d; n_bits = 18; break;
case 0xffb06070: code = 0x31e5d; n_bits = 18; break;
case 0xff807060: code = 0x31e9d; n_bits = 18; break;
case 0xff10c0b0: code = 0x31edd; n_bits = 18; break;
case 0xff00a0f0: code = 0x31f1d; n_bits = 18; break;
case 0xff60f0f0: code = 0x31f5d; n_bits = 18; break;
case 0xff9010b0: code = 0x31f9d; n_bits = 18; break;
case 0xffa05010: code = 0x31fdd; n_bits = 18; break;
case 0xffe0e030: code = 0x3205d; n_bits = 18; break;
case 0xff8080f0: code = 0x3209d; n_bits = 18; break;
case 0xff907070: code = 0x320dd; n_bits = 18; break;
case 0xff200070: code = 0x3211d; n_bits = 18; break;
case 0xff8060e0: code = 0x3215d; n_bits = 18; break;
case 0xff204010: code = 0x3219d; n_bits = 18; break;
case 0xff10d0d0: code = 0x321dd; n_bits = 18; break;
case 0xffa0d0a0: code = 0x3221d; n_bits = 18; break;
case 0xffb040a0: code = 0x3225d; n_bits = 18; break;
case 0xffd010a0: code = 0x3229d; n_bits = 18; break;
case 0xfff0d090: code = 0x322dd; n_bits = 18; break;
case 0xffe04080: code = 0x3231d; n_bits = 18; break;
case 0xffc090e0: code = 0x3235d; n_bits = 18; break;
case 0xff80b0c0: code = 0x3239d; n_bits = 18; break;
case 0xff9090a0: code = 0x323dd; n_bits = 18; break;
case 0xff20b040: code = 0x3245d; n_bits = 18; break;
case 0xff70f040: code = 0x3249d; n_bits = 18; break;
case 0xff0030e0: code = 0x324dd; n_bits = 18; break;
case 0xffb0f070: code = 0x3251d; n_bits = 18; break;
case 0xffb0a060: code = 0x3255d; n_bits = 18; break;
case 0xff9090b0: code = 0x3259d; n_bits = 18; break;
case 0xff50f070: code = 0x325dd; n_bits = 18; break;
case 0xff002030: code = 0x3261d; n_bits = 18; break;
case 0xffd08090: code = 0x3265d; n_bits = 18; break;
case 0xffe0d0c0: code = 0x3269d; n_bits = 18; break;
case 0xff802090: code = 0x326dd; n_bits = 18; break;
case 0xff103050: code = 0x3271d; n_bits = 18; break;
case 0xff80e080: code = 0x3275d; n_bits = 18; break;
case 0xff302030: code = 0x3279d; n_bits = 18; break;
case 0xff9050f0: code = 0x327dd; n_bits = 18; break;
case 0xffb05060: code = 0x3285d; n_bits = 18; break;
case 0xff509030: code = 0x3289d; n_bits = 18; break;
case 0xffc08000: code = 0x328dd; n_bits = 18; break;
case 0xff0000d0: code = 0x3291d; n_bits = 18; break;
case 0xff5020d0: code = 0x3295d; n_bits = 18; break;
case 0xff609030: code = 0x3299d; n_bits = 18; break;
case 0xffa0a0c0: code = 0x329dd; n_bits = 18; break;
case 0xffc0c080: code = 0x32a1d; n_bits = 18; break;
case 0xff80f080: code = 0x32a5d; n_bits = 18; break;
case 0xff50f010: code = 0x32a9d; n_bits = 18; break;
case 0xff804050: code = 0x32add; n_bits = 18; break;
case 0xffa0e050: code = 0x32b1d; n_bits = 18; break;
case 0xff2060a0: code = 0x32b5d; n_bits = 18; break;
case 0xff808090: code = 0x32b9d; n_bits = 18; break;
case 0xff1060f0: code = 0x32bdd; n_bits = 18; break;
case 0xff100050: code = 0x32c1d; n_bits = 18; break;
case 0xff60a060: code = 0x32c5d; n_bits = 18; break;
case 0xff4040b0: code = 0x32c9d; n_bits = 18; break;
case 0xff609010: code = 0x32cdd; n_bits = 18; break;
case 0xff1040e0: code = 0x32d1d; n_bits = 18; break;
case 0xff8040f0: code = 0x32d5d; n_bits = 18; break;
case 0xff00c0a0: code = 0x32d9d; n_bits = 18; break;
case 0xff3050f0: code = 0x32ddd; n_bits = 18; break;
case 0xff6010b0: code = 0x32e1d; n_bits = 18; break;
case 0xffa00030: code = 0x32e5d; n_bits = 18; break;
case 0xff6020f0: code = 0x32e9d; n_bits = 18; break;
case 0xffc0d0b0: code = 0x32edd; n_bits = 18; break;
case 0xff5020f0: code = 0x32f1d; n_bits = 18; break;
case 0xff8050a0: code = 0x32f5d; n_bits = 18; break;
case 0xffc0b0e0: code = 0x32f9d; n_bits = 18; break;
case 0xff8000a0: code = 0x32fdd; n_bits = 18; break;
case 0xff30d070: code = 0x3305d; n_bits = 18; break;
case 0xffd09010: code = 0x3309d; n_bits = 18; break;
case 0xffb00050: code = 0x330dd; n_bits = 18; break;
case 0xff901000: code = 0x3311d; n_bits = 18; break;
case 0xfff0a090: code = 0x3315d; n_bits = 18; break;
case 0xffa01000: code = 0x3319d; n_bits = 18; break;
case 0xff8040c0: code = 0x331dd; n_bits = 18; break;
case 0xffc050c0: code = 0x3321d; n_bits = 18; break;
case 0xff008040: code = 0x3325d; n_bits = 18; break;
case 0xffd03060: code = 0x3329d; n_bits = 18; break;
case 0xffe08060: code = 0x332dd; n_bits = 18; break;
case 0xffa010d0: code = 0x3331d; n_bits = 18; break;
case 0xff305030: code = 0x3335d; n_bits = 18; break;
case 0xff4010d0: code = 0x3339d; n_bits = 18; break;
case 0xffa0a040: code = 0x333dd; n_bits = 18; break;
case 0xff90f030: code = 0x3341d; n_bits = 18; break;
case 0xffb09000: code = 0x3345d; n_bits = 18; break;
case 0xffd0e0e0: code = 0x3349d; n_bits = 18; break;
case 0xff504000: code = 0x334dd; n_bits = 18; break;
case 0xffb09070: code = 0x3351d; n_bits = 18; break;
case 0xffb03020: code = 0x3355d; n_bits = 18; break;
case 0xfff04050: code = 0x3359d; n_bits = 18; break;
case 0xff003060: code = 0x335dd; n_bits = 18; break;
case 0xff5040e0: code = 0x3361d; n_bits = 18; break;
case 0xff608040: code = 0x3365d; n_bits = 18; break;
case 0xff207070: code = 0x3369d; n_bits = 18; break;
case 0xff0000e0: code = 0x336dd; n_bits = 18; break;
case 0xff208010: code = 0x3371d; n_bits = 18; break;
case 0xff002040: code = 0x3375d; n_bits = 18; break;
case 0xff10f040: code = 0x3379d; n_bits = 18; break;
case 0xff401080: code = 0x337dd; n_bits = 18; break;
case 0xffd00070: code = 0x3385d; n_bits = 18; break;
case 0xffa020d0: code = 0x3389d; n_bits = 18; break;
case 0xff80a0a0: code = 0x338dd; n_bits = 18; break;
case 0xff1020d0: code = 0x3391d; n_bits = 18; break;
case 0xff20b0f0: code = 0x3395d; n_bits = 18; break;
case 0xff90c060: code = 0x3399d; n_bits = 18; break;
case 0xff708080: code = 0x339dd; n_bits = 18; break;
case 0xff103000: code = 0x33a1d; n_bits = 18; break;
case 0xff209070: code = 0x33a5d; n_bits = 18; break;
case 0xff808030: code = 0x33a9d; n_bits = 18; break;
case 0xffe0f0d0: code = 0x33add; n_bits = 18; break;
case 0xff4070e0: code = 0x33b1d; n_bits = 18; break;
case 0xff6050c0: code = 0x33b5d; n_bits = 18; break;
case 0xff902020: code = 0x33b9d; n_bits = 18; break;
case 0xff80b0e0: code = 0x33bdd; n_bits = 18; break;
case 0xff004030: code = 0x33c1d; n_bits = 18; break;
case 0xff70b060: code = 0x33c5d; n_bits = 18; break;
case 0xfff01030: code = 0x33c9d; n_bits = 18; break;
case 0xff000080: code = 0x33cdd; n_bits = 18; break;
case 0xff20c0a0: code = 0x33d1d; n_bits = 18; break;
case 0xffd05010: code = 0x33d5d; n_bits = 18; break;
case 0xffb000a0: code = 0x33d9d; n_bits = 18; break;
case 0xffa0e0d0: code = 0x33ddd; n_bits = 18; break;
case 0xff70c000: code = 0x33e1d; n_bits = 18; break;
case 0xffc0f0f0: code = 0x33e5d; n_bits = 18; break;
case 0xffd03020: code = 0x33e9d; n_bits = 18; break;
case 0xffb060f0: code = 0x33edd; n_bits = 18; break;
case 0xff20f060: code = 0x33f1d; n_bits = 18; break;
case 0xff404030: code = 0x33f5d; n_bits = 18; break;
case 0xff4000a0: code = 0x33f9d; n_bits = 18; break;
case 0xff607090: code = 0x33fdd; n_bits = 18; break;
case 0xff603070: code = 0x3405d; n_bits = 18; break;
case 0xffd050e0: code = 0x3409d; n_bits = 18; break;
case 0xff6070f0: code = 0x340dd; n_bits = 18; break;
case 0xfff0d080: code = 0x3411d; n_bits = 18; break;
case 0xfff02050: code = 0x3415d; n_bits = 18; break;
case 0xff2070c0: code = 0x3419d; n_bits = 18; break;
case 0xff604060: code = 0x341dd; n_bits = 18; break;
case 0xffe0d0d0: code = 0x3421d; n_bits = 18; break;
case 0xff30b060: code = 0x3425d; n_bits = 18; break;
case 0xff901070: code = 0x3429d; n_bits = 18; break;
case 0xffe00020: code = 0x342dd; n_bits = 18; break;
case 0xffe0e060: code = 0x3431d; n_bits = 18; break;
case 0xff30b0f0: code = 0x3435d; n_bits = 18; break;
case 0xff905080: code = 0x3439d; n_bits = 18; break;
case 0xffe0b080: code = 0x343dd; n_bits = 18; break;
case 0xff100080: code = 0x3445d; n_bits = 18; break;
case 0xff706030: code = 0x3449d; n_bits = 18; break;
case 0xfff080b0: code = 0x344dd; n_bits = 18; break;
case 0xffe0d020: code = 0x3451d; n_bits = 18; break;
case 0xff00d020: code = 0x3455d; n_bits = 18; break;
case 0xff902050: code = 0x3459d; n_bits = 18; break;
case 0xffe0f0b0: code = 0x345dd; n_bits = 18; break;
case 0xff304080: code = 0x3461d; n_bits = 18; break;
case 0xff70a030: code = 0x3465d; n_bits = 18; break;
case 0xffa0e0a0: code = 0x3469d; n_bits = 18; break;
case 0xffa01050: code = 0x346dd; n_bits = 18; break;
case 0xff102030: code = 0x3471d; n_bits = 18; break;
case 0xffa060f0: code = 0x3475d; n_bits = 18; break;
case 0xff901050: code = 0x3479d; n_bits = 18; break;
case 0xff707040: code = 0x347dd; n_bits = 18; break;
case 0xff40d0a0: code = 0x3485d; n_bits = 18; break;
case 0xffa0a0b0: code = 0x3489d; n_bits = 18; break;
case 0xffe0d010: code = 0x348dd; n_bits = 18; break;
case 0xff00a0b0: code = 0x3491d; n_bits = 18; break;
case 0xff0040f0: code = 0x3495d; n_bits = 18; break;
case 0xffc0f050: code = 0x3499d; n_bits = 18; break;
case 0xff508020: code = 0x349dd; n_bits = 18; break;
case 0xff00a0d0: code = 0x34a1d; n_bits = 18; break;
case 0xff00e0f0: code = 0x34a5d; n_bits = 18; break;
case 0xff1080c0: code = 0x34a9d; n_bits = 18; break;
case 0xffd03030: code = 0x34add; n_bits = 18; break;
case 0xff10d000: code = 0x34b1d; n_bits = 18; break;
case 0xffd000d0: code = 0x34b5d; n_bits = 18; break;
case 0xffb0b0b0: code = 0x34b9d; n_bits = 18; break;
case 0xff8030a0: code = 0x34bdd; n_bits = 18; break;
case 0xff90c040: code = 0x34c1d; n_bits = 18; break;
case 0xff004040: code = 0x34c5d; n_bits = 18; break;
case 0xffa0a0f0: code = 0x34c9d; n_bits = 18; break;
case 0xff2040c0: code = 0x34cdd; n_bits = 18; break;
case 0xff10f0d0: code = 0x34d1d; n_bits = 18; break;
case 0xffa01010: code = 0x34d5d; n_bits = 18; break;
case 0xff804070: code = 0x34d9d; n_bits = 18; break;
case 0xff30f0d0: code = 0x34ddd; n_bits = 18; break;
case 0xffa08040: code = 0x34e1d; n_bits = 18; break;
case 0xfff0e0c0: code = 0x34e5d; n_bits = 18; break;
case 0xff8010b0: code = 0x34e9d; n_bits = 18; break;
case 0xff5010e0: code = 0x34edd; n_bits = 18; break;
case 0xffa0a020: code = 0x34f1d; n_bits = 18; break;
case 0xffc03020: code = 0x34f5d; n_bits = 18; break;
case 0xff30c0e0: code = 0x34f9d; n_bits = 18; break;
case 0xffd0a060: code = 0x34fdd; n_bits = 18; break;
case 0xff60b050: code = 0x3505d; n_bits = 18; break;
case 0xff5060e0: code = 0x3509d; n_bits = 18; break;
case 0xff80c020: code = 0x350dd; n_bits = 18; break;
case 0xffd020a0: code = 0x3511d; n_bits = 18; break;
case 0xffd020d0: code = 0x3515d; n_bits = 18; break;
case 0xff6060e0: code = 0x3519d; n_bits = 18; break;
case 0xff203080: code = 0x351dd; n_bits = 18; break;
case 0xffa0f060: code = 0x3521d; n_bits = 18; break;
case 0xffd0c0c0: code = 0x3525d; n_bits = 18; break;
case 0xff406010: code = 0x3529d; n_bits = 18; break;
case 0xfff0f080: code = 0x352dd; n_bits = 18; break;
case 0xff306010: code = 0x3531d; n_bits = 18; break;
case 0xff40d0f0: code = 0x3535d; n_bits = 18; break;
case 0xff005030: code = 0x3539d; n_bits = 18; break;
case 0xff80a0e0: code = 0x353dd; n_bits = 18; break;
case 0xff908030: code = 0x3545d; n_bits = 18; break;
case 0xff504010: code = 0x3549d; n_bits = 18; break;
case 0xffe020a0: code = 0x354dd; n_bits = 18; break;
case 0xff40d020: code = 0x3551d; n_bits = 18; break;
case 0xff9030a0: code = 0x3555d; n_bits = 18; break;
case 0xff807090: code = 0x3559d; n_bits = 18; break;
case 0xffe0e0e0: code = 0x355dd; n_bits = 18; break;
case 0xff7030a0: code = 0x3561d; n_bits = 18; break;
case 0xffd070c0: code = 0x3565d; n_bits = 18; break;
case 0xff60e0f0: code = 0x3569d; n_bits = 18; break;
case 0xff1020c0: code = 0x356dd; n_bits = 18; break;
case 0xffb0f050: code = 0x3571d; n_bits = 18; break;
case 0xfff07010: code = 0x3575d; n_bits = 18; break;
case 0xffd07010: code = 0x3579d; n_bits = 18; break;
case 0xff600040: code = 0x357dd; n_bits = 18; break;
case 0xffd0a050: code = 0x3585d; n_bits = 18; break;
case 0xff9090f0: code = 0x3589d; n_bits = 18; break;
case 0xffa08070: code = 0x358dd; n_bits = 18; break;
case 0xff104040: code = 0x3591d; n_bits = 18; break;
case 0xff70d0d0: code = 0x3595d; n_bits = 18; break;
case 0xff50d0d0: code = 0x3599d; n_bits = 18; break;
case 0xfff03070: code = 0x359dd; n_bits = 18; break;
case 0xff104020: code = 0x35a1d; n_bits = 18; break;
case 0xff7070e0: code = 0x35a5d; n_bits = 18; break;
case 0xff40d060: code = 0x35a9d; n_bits = 18; break;
case 0xff80a060: code = 0x35add; n_bits = 18; break;
case 0xff50b000: code = 0x35b1d; n_bits = 18; break;
case 0xfff09030: code = 0x35b5d; n_bits = 18; break;
case 0xffc05040: code = 0x35b9d; n_bits = 18; break;
case 0xff70e0a0: code = 0x35bdd; n_bits = 18; break;
case 0xffe020f0: code = 0x35c1d; n_bits = 18; break;
case 0xffa040a0: code = 0x35c5d; n_bits = 18; break;
case 0xff801060: code = 0x35c9d; n_bits = 18; break;
case 0xff80c0d0: code = 0x35cdd; n_bits = 18; break;
case 0xffd010e0: code = 0x35d1d; n_bits = 18; break;
case 0xff904000: code = 0x35d5d; n_bits = 18; break;
case 0xfff020b0: code = 0x35d9d; n_bits = 18; break;
case 0xff1010f0: code = 0x35ddd; n_bits = 18; break;
case 0xff903090: code = 0x35e1d; n_bits = 18; break;
case 0xff60f090: code = 0x35e5d; n_bits = 18; break;
case 0xff809000: code = 0x35e9d; n_bits = 18; break;
case 0xfff06000: code = 0x35edd; n_bits = 18; break;
case 0xffd080a0: code = 0x35f1d; n_bits = 18; break;
case 0xff90e050: code = 0x35f5d; n_bits = 18; break;
case 0xff709010: code = 0x35f9d; n_bits = 18; break;
case 0xffb000f0: code = 0x35fdd; n_bits = 18; break;
case 0xff506080: code = 0x3605d; n_bits = 18; break;
case 0xff30c030: code = 0x3609d; n_bits = 18; break;
case 0xff5090f0: code = 0x360dd; n_bits = 18; break;
case 0xffb0b0a0: code = 0x3611d; n_bits = 18; break;
case 0xfff0d030: code = 0x3615d; n_bits = 18; break;
case 0xffe0f0c0: code = 0x3619d; n_bits = 18; break;
case 0xff1030f0: code = 0x361dd; n_bits = 18; break;
case 0xff6000e0: code = 0x3621d; n_bits = 18; break;
case 0xff400090: code = 0x3625d; n_bits = 18; break;
case 0xff90d010: code = 0x3629d; n_bits = 18; break;
case 0xffc0a070: code = 0x362dd; n_bits = 18; break;
case 0xff505000: code = 0x3631d; n_bits = 18; break;
case 0xff60a0e0: code = 0x3635d; n_bits = 18; break;
case 0xffd02030: code = 0x3639d; n_bits = 18; break;
case 0xff60d0c0: code = 0x363dd; n_bits = 18; break;
case 0xffd080b0: code = 0x3645d; n_bits = 18; break;
case 0xff80d0d0: code = 0x3649d; n_bits = 18; break;
case 0xff40c010: code = 0x364dd; n_bits = 18; break;
case 0xff90e030: code = 0x3651d; n_bits = 18; break;
case 0xff30e070: code = 0x3655d; n_bits = 18; break;
case 0xffa090f0: code = 0x3659d; n_bits = 18; break;
case 0xffb020b0: code = 0x365dd; n_bits = 18; break;
case 0xff00c030: code = 0x3661d; n_bits = 18; break;
case 0xff20a050: code = 0x3665d; n_bits = 18; break;
case 0xffc020d0: code = 0x3669d; n_bits = 18; break;
case 0xffd000c0: code = 0x366dd; n_bits = 18; break;
case 0xff202060: code = 0x3671d; n_bits = 18; break;
case 0xffd09020: code = 0x3675d; n_bits = 18; break;
case 0xff90c080: code = 0x3679d; n_bits = 18; break;
case 0xfff0a0e0: code = 0x367dd; n_bits = 18; break;
case 0xff808060: code = 0x3685d; n_bits = 18; break;
case 0xff1020a0: code = 0x3689d; n_bits = 18; break;
case 0xff6020d0: code = 0x368dd; n_bits = 18; break;
case 0xffe01040: code = 0x3691d; n_bits = 18; break;
case 0xfff070d0: code = 0x3695d; n_bits = 18; break;
case 0xff1070f0: code = 0x3699d; n_bits = 18; break;
case 0xff7020d0: code = 0x369dd; n_bits = 18; break;
case 0xff605030: code = 0x36a1d; n_bits = 18; break;
case 0xffb050b0: code = 0x36a5d; n_bits = 18; break;
case 0xffd0c060: code = 0x36a9d; n_bits = 18; break;
case 0xff4030d0: code = 0x36add; n_bits = 18; break;
case 0xff001080: code = 0x36b1d; n_bits = 18; break;
case 0xffc02090: code = 0x36b5d; n_bits = 18; break;
case 0xff505070: code = 0x36b9d; n_bits = 18; break;
case 0xff4060a0: code = 0x36bdd; n_bits = 18; break;
case 0xff206060: code = 0x36c1d; n_bits = 18; break;
case 0xff60e0b0: code = 0x36c5d; n_bits = 18; break;
case 0xffd0d020: code = 0x36c9d; n_bits = 18; break;
case 0xff70b000: code = 0x36cdd; n_bits = 18; break;
case 0xff2060f0: code = 0x36d1d; n_bits = 18; break;
case 0xff509010: code = 0x36d5d; n_bits = 18; break;
case 0xffc00060: code = 0x36d9d; n_bits = 18; break;
case 0xffc0e060: code = 0x36ddd; n_bits = 18; break;
case 0xffe0f050: code = 0x36e1d; n_bits = 18; break;
case 0xff6090e0: code = 0x36e5d; n_bits = 18; break;
case 0xff3000a0: code = 0x36e9d; n_bits = 18; break;
case 0xff90a090: code = 0x36edd; n_bits = 18; break;
case 0xff2000a0: code = 0x36f1d; n_bits = 18; break;
case 0xfff05070: code = 0x36f5d; n_bits = 18; break;
case 0xff300070: code = 0x36f9d; n_bits = 18; break;
case 0xfff08050: code = 0x36fdd; n_bits = 18; break;
case 0xff600080: code = 0x3705d; n_bits = 18; break;
case 0xff30a050: code = 0x3709d; n_bits = 18; break;
case 0xff40b080: code = 0x370dd; n_bits = 18; break;
case 0xff70e0e0: code = 0x3711d; n_bits = 18; break;
case 0xff100020: code = 0x3715d; n_bits = 18; break;
case 0xff8080b0: code = 0x3719d; n_bits = 18; break;
case 0xff907030: code = 0x371dd; n_bits = 18; break;
case 0xff106000: code = 0x3721d; n_bits = 18; break;
case 0xfff0a0b0: code = 0x3725d; n_bits = 18; break;
case 0xff70e010: code = 0x3729d; n_bits = 18; break;
case 0xfff020e0: code = 0x372dd; n_bits = 18; break;
case 0xff908050: code = 0x3731d; n_bits = 18; break;
case 0xffd0c080: code = 0x3735d; n_bits = 18; break;
case 0xff400070: code = 0x3739d; n_bits = 18; break;
case 0xffc0b000: code = 0x373dd; n_bits = 18; break;
case 0xffe0f070: code = 0x3741d; n_bits = 18; break;
case 0xff10f020: code = 0x3745d; n_bits = 18; break;
case 0xff803000: code = 0x3749d; n_bits = 18; break;
case 0xff30f090: code = 0x374dd; n_bits = 18; break;
case 0xfff0e050: code = 0x3751d; n_bits = 18; break;
case 0xff900020: code = 0x3755d; n_bits = 18; break;
case 0xffb060d0: code = 0x3759d; n_bits = 18; break;
case 0xff60c040: code = 0x375dd; n_bits = 18; break;
case 0xffd0c0b0: code = 0x3761d; n_bits = 18; break;
case 0xff409080: code = 0x3765d; n_bits = 18; break;
case 0xff90d0c0: code = 0x3769d; n_bits = 18; break;
case 0xff40a0c0: code = 0x376dd; n_bits = 18; break;
case 0xff20f0f0: code = 0x3771d; n_bits = 18; break;
case 0xff207030: code = 0x3775d; n_bits = 18; break;
case 0xff008010: code = 0x3779d; n_bits = 18; break;
case 0xff9030d0: code = 0x377dd; n_bits = 18; break;
case 0xff9030e0: code = 0x3785d; n_bits = 18; break;
case 0xffa0a080: code = 0x3789d; n_bits = 18; break;
case 0xffa010f0: code = 0x378dd; n_bits = 18; break;
case 0xff2070d0: code = 0x3791d; n_bits = 18; break;
case 0xffe0d0a0: code = 0x3795d; n_bits = 18; break;
case 0xffc0d0a0: code = 0x3799d; n_bits = 18; break;
case 0xff5090c0: code = 0x379dd; n_bits = 18; break;
case 0xff3070e0: code = 0x37a1d; n_bits = 18; break;
case 0xff60a000: code = 0x37a5d; n_bits = 18; break;
case 0xff9090d0: code = 0x37a9d; n_bits = 18; break;
case 0xffe050f0: code = 0x37add; n_bits = 18; break;
case 0xff90e0a0: code = 0x37b1d; n_bits = 18; break;
case 0xff903000: code = 0x37b5d; n_bits = 18; break;
case 0xfff07090: code = 0x37b9d; n_bits = 18; break;
case 0xff0050c0: code = 0x37bdd; n_bits = 18; break;
case 0xff001000: code = 0x37c1d; n_bits = 18; break;
case 0xffa01040: code = 0x37c5d; n_bits = 18; break;
case 0xffa06030: code = 0x37c9d; n_bits = 18; break;
case 0xff208030: code = 0x37cdd; n_bits = 18; break;
case 0xffb02030: code = 0x37d1d; n_bits = 18; break;
case 0xff40f090: code = 0x37d5d; n_bits = 18; break;
case 0xff702080: code = 0x37d9d; n_bits = 18; break;
case 0xff70b0b0: code = 0x37ddd; n_bits = 18; break;
case 0xffc0f0c0: code = 0x37e1d; n_bits = 18; break;
case 0xffa000c0: code = 0x37e5d; n_bits = 18; break;
case 0xff801040: code = 0x37e9d; n_bits = 18; break;
case 0xff209000: code = 0x37edd; n_bits = 18; break;
case 0xffb050d0: code = 0x37f1d; n_bits = 18; break;
case 0xfff040a0: code = 0x37f5d; n_bits = 18; break;
case 0xff107060: code = 0x37f9d; n_bits = 18; break;
case 0xfff07080: code = 0x37fdd; n_bits = 18; break;
case 0xff5090e0: code = 0x3805d; n_bits = 18; break;
case 0xffe05030: code = 0x3809d; n_bits = 18; break;
case 0xff00f0c0: code = 0x380dd; n_bits = 18; break;
case 0xff704030: code = 0x3811d; n_bits = 18; break;
case 0xffb0e0b0: code = 0x3815d; n_bits = 18; break;
case 0xff80e020: code = 0x3819d; n_bits = 18; break;
case 0xff90f0c0: code = 0x381dd; n_bits = 18; break;
case 0xff10c0a0: code = 0x3821d; n_bits = 18; break;
case 0xff6030c0: code = 0x3825d; n_bits = 18; break;
case 0xff300030: code = 0x3829d; n_bits = 18; break;
case 0xff507020: code = 0x382dd; n_bits = 18; break;
case 0xff209040: code = 0x3831d; n_bits = 18; break;
case 0xffd0e020: code = 0x3835d; n_bits = 18; break;
case 0xffc0e020: code = 0x3839d; n_bits = 18; break;
case 0xff2030f0: code = 0x383dd; n_bits = 18; break;
case 0xff308050: code = 0x3845d; n_bits = 18; break;
case 0xffa03080: code = 0x3849d; n_bits = 18; break;
case 0xff40f070: code = 0x384dd; n_bits = 18; break;
case 0xff00e000: code = 0x3851d; n_bits = 18; break;
case 0xff20b000: code = 0x3855d; n_bits = 18; break;
case 0xff308080: code = 0x3859d; n_bits = 18; break;
case 0xffb050f0: code = 0x385dd; n_bits = 18; break;
case 0xff90b0f0: code = 0x3861d; n_bits = 18; break;
case 0xffa0c080: code = 0x3865d; n_bits = 18; break;
case 0xfff0f0e0: code = 0x3869d; n_bits = 18; break;
case 0xff5030a0: code = 0x386dd; n_bits = 18; break;
case 0xffa0c0b0: code = 0x3871d; n_bits = 18; break;
case 0xffd00010: code = 0x3875d; n_bits = 18; break;
case 0xffb00010: code = 0x3879d; n_bits = 18; break;
case 0xff50c080: code = 0x387dd; n_bits = 18; break;
case 0xff404090: code = 0x3885d; n_bits = 18; break;
case 0xff607020: code = 0x3889d; n_bits = 18; break;
case 0xff006050: code = 0x388dd; n_bits = 18; break;
case 0xff600090: code = 0x3891d; n_bits = 18; break;
case 0xff00e0d0: code = 0x3895d; n_bits = 18; break;
case 0xff4040c0: code = 0x3899d; n_bits = 18; break;
case 0xffb0c0d0: code = 0x389dd; n_bits = 18; break;
case 0xff1010d0: code = 0x38a1d; n_bits = 18; break;
case 0xff40d000: code = 0x38a5d; n_bits = 18; break;
case 0xff20d000: code = 0x38a9d; n_bits = 18; break;
case 0xffe07090: code = 0x38add; n_bits = 18; break;
case 0xffe020e0: code = 0x38b1d; n_bits = 18; break;
case 0xff405060: code = 0x38b5d; n_bits = 18; break;
case 0xff307080: code = 0x38b9d; n_bits = 18; break;
case 0xff306070: code = 0x38bdd; n_bits = 18; break;
case 0xff905050: code = 0x38c1d; n_bits = 18; break;
case 0xff706070: code = 0x38c5d; n_bits = 18; break;
case 0xffc090b0: code = 0x38c9d; n_bits = 18; break;
case 0xff00b030: code = 0x38cdd; n_bits = 18; break;
case 0xff901020: code = 0x38d1d; n_bits = 18; break;
case 0xffa0d090: code = 0x38d5d; n_bits = 18; break;
case 0xff3060c0: code = 0x38d9d; n_bits = 18; break;
case 0xff50e090: code = 0x38ddd; n_bits = 18; break;
case 0xff5070b0: code = 0x38e1d; n_bits = 18; break;
case 0xffa0a060: code = 0x38e5d; n_bits = 18; break;
case 0xffd01060: code = 0x38e9d; n_bits = 18; break;
case 0xff606020: code = 0x38edd; n_bits = 18; break;
case 0xff005020: code = 0x38f1d; n_bits = 18; break;
case 0xfff06040: code = 0x38f5d; n_bits = 18; break;
case 0xff3030d0: code = 0x38f9d; n_bits = 18; break;
case 0xff407030: code = 0x38fdd; n_bits = 18; break;
case 0xff805070: code = 0x3905d; n_bits = 18; break;
case 0xff70e0b0: code = 0x3909d; n_bits = 18; break;
case 0xffe030a0: code = 0x390dd; n_bits = 18; break;
case 0xfff07040: code = 0x3911d; n_bits = 18; break;
case 0xff501030: code = 0x3915d; n_bits = 18; break;
case 0xffa07040: code = 0x3919d; n_bits = 18; break;
case 0xff40b050: code = 0x391dd; n_bits = 18; break;
case 0xffc08030: code = 0x3921d; n_bits = 18; break;
case 0xffe030f0: code = 0x3925d; n_bits = 18; break;
case 0xff80b0f0: code = 0x3929d; n_bits = 18; break;
case 0xff106040: code = 0x392dd; n_bits = 18; break;
case 0xff80a000: code = 0x3931d; n_bits = 18; break;
case 0xff1000c0: code = 0x3935d; n_bits = 18; break;
case 0xff1020e0: code = 0x3939d; n_bits = 18; break;
case 0xff707050: code = 0x393dd; n_bits = 18; break;
case 0xffe0c000: code = 0x3945d; n_bits = 18; break;
case 0xffa000a0: code = 0x3949d; n_bits = 18; break;
case 0xffb0a040: code = 0x394dd; n_bits = 18; break;
case 0xff70a0b0: code = 0x3951d; n_bits = 18; break;
case 0xff001090: code = 0x3955d; n_bits = 18; break;
case 0xffc02000: code = 0x3959d; n_bits = 18; break;
case 0xff00f0b0: code = 0x395dd; n_bits = 18; break;
case 0xffe03080: code = 0x3961d; n_bits = 18; break;
case 0xffd0b010: code = 0x3965d; n_bits = 18; break;
case 0xffd050b0: code = 0x3969d; n_bits = 18; break;
case 0xffd090d0: code = 0x396dd; n_bits = 18; break;
case 0xff501050: code = 0x3971d; n_bits = 18; break;
case 0xffb00080: code = 0x3975d; n_bits = 18; break;
case 0xff408080: code = 0x3979d; n_bits = 18; break;
case 0xff9040a0: code = 0x397dd; n_bits = 18; break;
case 0xfff09010: code = 0x3985d; n_bits = 18; break;
case 0xff70c0f0: code = 0x3989d; n_bits = 18; break;
case 0xffc07030: code = 0x398dd; n_bits = 18; break;
case 0xffe0a050: code = 0x3991d; n_bits = 18; break;
case 0xff90c090: code = 0x3995d; n_bits = 18; break;
case 0xffc04090: code = 0x3999d; n_bits = 18; break;
case 0xff306000: code = 0x399dd; n_bits = 18; break;
case 0xff104060: code = 0x39a1d; n_bits = 18; break;
case 0xffd0a030: code = 0x39a5d; n_bits = 18; break;
case 0xff90a0a0: code = 0x39a9d; n_bits = 18; break;
case 0xfff01020: code = 0x39add; n_bits = 18; break;
case 0xffc07050: code = 0x39b1d; n_bits = 18; break;
case 0xff20c050: code = 0x39b5d; n_bits = 18; break;
case 0xff801010: code = 0x39b9d; n_bits = 18; break;
case 0xfff0c080: code = 0x39bdd; n_bits = 18; break;
case 0xffd01030: code = 0x39c1d; n_bits = 18; break;
case 0xff101010: code = 0x39c5d; n_bits = 18; break;
case 0xff00d0b0: code = 0x39c9d; n_bits = 18; break;
case 0xffc0c010: code = 0x39cdd; n_bits = 18; break;
case 0xffb03000: code = 0x39d1d; n_bits = 18; break;
case 0xff008000: code = 0x39d5d; n_bits = 18; break;
case 0xffc09070: code = 0x39d9d; n_bits = 18; break;
case 0xffa050c0: code = 0x39ddd; n_bits = 18; break;
case 0xff405000: code = 0x39e1d; n_bits = 18; break;
case 0xff00e050: code = 0x39e5d; n_bits = 18; break;
case 0xff6080a0: code = 0x39e9d; n_bits = 18; break;
case 0xff3080d0: code = 0x39edd; n_bits = 18; break;
case 0xff405010: code = 0x39f1d; n_bits = 18; break;
case 0xff8040d0: code = 0x39f5d; n_bits = 18; break;
case 0xffd05070: code = 0x39f9d; n_bits = 18; break;
case 0xff8070b0: code = 0x39fdd; n_bits = 18; break;
case 0xffd030d0: code = 0x3a05d; n_bits = 18; break;
case 0xff00a010: code = 0x3a09d; n_bits = 18; break;
case 0xff7080b0: code = 0x3a0dd; n_bits = 18; break;
case 0xff90a080: code = 0x3a11d; n_bits = 18; break;
case 0xff40a010: code = 0x3a15d; n_bits = 18; break;
case 0xffa03050: code = 0x3a19d; n_bits = 18; break;
case 0xff903050: code = 0x3a1dd; n_bits = 18; break;
case 0xff100030: code = 0x3a21d; n_bits = 18; break;
case 0xff10b0c0: code = 0x3a25d; n_bits = 18; break;
case 0xff80a0c0: code = 0x3a29d; n_bits = 18; break;
case 0xffe09030: code = 0x3a2dd; n_bits = 18; break;
case 0xff906010: code = 0x3a31d; n_bits = 18; break;
case 0xff6010d0: code = 0x3a35d; n_bits = 18; break;
case 0xff007050: code = 0x3a39d; n_bits = 18; break;
case 0xfff0b000: code = 0x3a3dd; n_bits = 18; break;
case 0xffa0f070: code = 0x3a45d; n_bits = 18; break;
case 0xffa0c090: code = 0x3a49d; n_bits = 18; break;
case 0xfff0e060: code = 0x3a4dd; n_bits = 18; break;
case 0xffe080b0: code = 0x3a51d; n_bits = 18; break;
case 0xff406090: code = 0x3a55d; n_bits = 18; break;
case 0xff20b090: code = 0x3a59d; n_bits = 18; break;
case 0xff608000: code = 0x3a5dd; n_bits = 18; break;
case 0xff60f0e0: code = 0x3a61d; n_bits = 18; break;
case 0xff3030a0: code = 0x3a65d; n_bits = 18; break;
case 0xff30b070: code = 0x3a69d; n_bits = 18; break;
case 0xffb070c0: code = 0x3a6dd; n_bits = 18; break;
case 0xff108010: code = 0x3a71d; n_bits = 18; break;
case 0xff702090: code = 0x3a75d; n_bits = 18; break;
case 0xff103070: code = 0x3a79d; n_bits = 18; break;
case 0xffd0c000: code = 0x3a7dd; n_bits = 18; break;
case 0xff401030: code = 0x3a85d; n_bits = 18; break;
case 0xff301060: code = 0x3a89d; n_bits = 18; break;
case 0xff707010: code = 0x3a8dd; n_bits = 18; break;
case 0xffa01060: code = 0x3a91d; n_bits = 18; break;
case 0xffa070e0: code = 0x3a95d; n_bits = 18; break;
case 0xff40a040: code = 0x3a99d; n_bits = 18; break;
case 0xff802000: code = 0x3a9dd; n_bits = 18; break;
case 0xffb00040: code = 0x3aa1d; n_bits = 18; break;
case 0xffb0c040: code = 0x3aa5d; n_bits = 18; break;
case 0xff20a0d0: code = 0x3aa9d; n_bits = 18; break;
case 0xff9070e0: code = 0x3aadd; n_bits = 18; break;
case 0xffd07090: code = 0x3ab1d; n_bits = 18; break;
case 0xfff00090: code = 0x3ab5d; n_bits = 18; break;
case 0xffb010d0: code = 0x3ab9d; n_bits = 18; break;
case 0xff60e070: code = 0x3abdd; n_bits = 18; break;
case 0xffb03040: code = 0x3ac1d; n_bits = 18; break;
case 0xff40f0d0: code = 0x3ac5d; n_bits = 18; break;
case 0xff402020: code = 0x3ac9d; n_bits = 18; break;
case 0xff70c0a0: code = 0x3acdd; n_bits = 18; break;
case 0xffb0b030: code = 0x3ad1d; n_bits = 18; break;
case 0xff80b060: code = 0x3ad5d; n_bits = 18; break;
case 0xffc04060: code = 0x3ad9d; n_bits = 18; break;
case 0xffa02050: code = 0x3addd; n_bits = 18; break;
case 0xff60a0c0: code = 0x3ae1d; n_bits = 18; break;
case 0xff804020: code = 0x3ae5d; n_bits = 18; break;
case 0xffb05030: code = 0x3ae9d; n_bits = 18; break;
case 0xff90e020: code = 0x3aedd; n_bits = 18; break;
case 0xff10a0c0: code = 0x3af1d; n_bits = 18; break;
case 0xff00e020: code = 0x3af5d; n_bits = 18; break;
case 0xff508040: code = 0x3af9d; n_bits = 18; break;
case 0xff70f030: code = 0x3afdd; n_bits = 18; break;
case 0xff7060a0: code = 0x3b05d; n_bits = 18; break;
case 0xff003000: code = 0x3b09d; n_bits = 18; break;
case 0xff007020: code = 0x3b0dd; n_bits = 18; break;
case 0xff602040: code = 0x3b11d; n_bits = 18; break;
case 0xffd0b0d0: code = 0x3b15d; n_bits = 18; break;
case 0xff30d0a0: code = 0x3b19d; n_bits = 18; break;
case 0xfff03090: code = 0x3b1dd; n_bits = 18; break;
case 0xff8060c0: code = 0x3b21d; n_bits = 18; break;
case 0xff602020: code = 0x3b25d; n_bits = 18; break;
case 0xffb0b000: code = 0x3b29d; n_bits = 18; break;
case 0xff80c000: code = 0x3b2dd; n_bits = 18; break;
case 0xff20a0e0: code = 0x3b31d; n_bits = 18; break;
case 0xff2000f0: code = 0x3b35d; n_bits = 18; break;
case 0xff40a0e0: code = 0x3b39d; n_bits = 18; break;
case 0xff1030d0: code = 0x3b3dd; n_bits = 18; break;
case 0xff7000e0: code = 0x3b41d; n_bits = 18; break;
case 0xff90a040: code = 0x3b45d; n_bits = 18; break;
case 0xff30e060: code = 0x3b49d; n_bits = 18; break;
case 0xff002020: code = 0x3b4dd; n_bits = 18; break;
case 0xff70c010: code = 0x3b51d; n_bits = 18; break;
case 0xff20d080: code = 0x3b55d; n_bits = 18; break;
case 0xffd05090: code = 0x3b59d; n_bits = 18; break;
case 0xff8080a0: code = 0x3b5dd; n_bits = 18; break;
case 0xff202090: code = 0x3b61d; n_bits = 18; break;
case 0xffc0c070: code = 0x3b65d; n_bits = 18; break;
case 0xfff020c0: code = 0x3b69d; n_bits = 18; break;
case 0xff5040d0: code = 0x3b6dd; n_bits = 18; break;
case 0xff9060b0: code = 0x3b71d; n_bits = 18; break;
case 0xff509080: code = 0x3b75d; n_bits = 18; break;
case 0xff40d040: code = 0x3b79d; n_bits = 18; break;
case 0xffb02090: code = 0x3b7dd; n_bits = 18; break;
case 0xff6090b0: code = 0x3b85d; n_bits = 18; break;
case 0xff604030: code = 0x3b89d; n_bits = 18; break;
case 0xff203070: code = 0x3b8dd; n_bits = 18; break;
case 0xff408040: code = 0x3b91d; n_bits = 18; break;
case 0xff9010f0: code = 0x3b95d; n_bits = 18; break;
case 0xff20c030: code = 0x3b99d; n_bits = 18; break;
case 0xff5000b0: code = 0x3b9dd; n_bits = 18; break;
case 0xffb0a0a0: code = 0x3ba1d; n_bits = 18; break;
case 0xff202010: code = 0x3ba5d; n_bits = 18; break;
case 0xff0060d0: code = 0x3ba9d; n_bits = 18; break;
case 0xff1090c0: code = 0x3badd; n_bits = 18; break;
case 0xff105090: code = 0x3bb1d; n_bits = 18; break;
case 0xff303070: code = 0x3bb5d; n_bits = 18; break;
case 0xff6070e0: code = 0x3bb9d; n_bits = 18; break;
case 0xff10b020: code = 0x3bbdd; n_bits = 18; break;
case 0xfff09000: code = 0x3bc1d; n_bits = 18; break;
case 0xffc09010: code = 0x3bc5d; n_bits = 18; break;
case 0xff30c0a0: code = 0x3bc9d; n_bits = 18; break;
case 0xff50b070: code = 0x3bcdd; n_bits = 18; break;
case 0xffd030a0: code = 0x3bd1d; n_bits = 18; break;
case 0xffb06050: code = 0x3bd5d; n_bits = 18; break;
case 0xffc0e0e0: code = 0x3bd9d; n_bits = 18; break;
case 0xfff070e0: code = 0x3bddd; n_bits = 18; break;
case 0xffe0e080: code = 0x3be1d; n_bits = 18; break;
case 0xffa0b020: code = 0x3be5d; n_bits = 18; break;
case 0xff60c060: code = 0x3be9d; n_bits = 18; break;
case 0xff305070: code = 0x3bedd; n_bits = 18; break;
case 0xffc07040: code = 0x3bf1d; n_bits = 18; break;
case 0xff5070c0: code = 0x3bf5d; n_bits = 18; break;
case 0xff306020: code = 0x3bf9d; n_bits = 18; break;
case 0xff305040: code = 0x3bfdd; n_bits = 18; break;
case 0xffd0d0b0: code = 0x3c05d; n_bits = 18; break;
case 0xffb02010: code = 0x3c09d; n_bits = 18; break;
case 0xffb06030: code = 0x3c0dd; n_bits = 18; break;
case 0xffb0a090: code = 0x3c11d; n_bits = 18; break;
case 0xffd03090: code = 0x3c15d; n_bits = 18; break;
case 0xff800070: code = 0x3c19d; n_bits = 18; break;
case 0xff302010: code = 0x3c1dd; n_bits = 18; break;
case 0xff70d0e0: code = 0x3c21d; n_bits = 18; break;
case 0xffd0d090: code = 0x3c25d; n_bits = 18; break;
case 0xff10a080: code = 0x3c29d; n_bits = 18; break;
case 0xff9050c0: code = 0x3c2dd; n_bits = 18; break;
case 0xff6020b0: code = 0x3c31d; n_bits = 18; break;
case 0xff000090: code = 0x3c35d; n_bits = 18; break;
case 0xff708030: code = 0x3c39d; n_bits = 18; break;
case 0xfff010a0: code = 0x3c3dd; n_bits = 18; break;
case 0xff902000: code = 0x3c45d; n_bits = 18; break;
case 0xff208060: code = 0x3c49d; n_bits = 18; break;
case 0xff90d020: code = 0x3c4dd; n_bits = 18; break;
case 0xff60f040: code = 0x3c51d; n_bits = 18; break;
case 0xffe05050: code = 0x3c55d; n_bits = 18; break;
case 0xff806030: code = 0x3c59d; n_bits = 18; break;
case 0xffd0b050: code = 0x3c5dd; n_bits = 18; break;
case 0xfff0b020: code = 0x3c61d; n_bits = 18; break;
case 0xff102090: code = 0x3c65d; n_bits = 18; break;
case 0xfff05040: code = 0x3c69d; n_bits = 18; break;
case 0xff30d0f0: code = 0x3c6dd; n_bits = 18; break;
case 0xffc0a0d0: code = 0x3c71d; n_bits = 18; break;
case 0xff4030a0: code = 0x3c75d; n_bits = 18; break;
case 0xffa0e0c0: code = 0x3c79d; n_bits = 18; break;
case 0xff00e0c0: code = 0x3c7dd; n_bits = 18; break;
case 0xff104070: code = 0x3c85d; n_bits = 18; break;
case 0xffa0f000: code = 0x3c89d; n_bits = 18; break;
case 0xff3030e0: code = 0x3c8dd; n_bits = 18; break;
case 0xff5030b0: code = 0x3c91d; n_bits = 18; break;
case 0xffb0c020: code = 0x3c95d; n_bits = 18; break;
case 0xff90c020: code = 0x3c99d; n_bits = 18; break;
case 0xffc09080: code = 0x3c9dd; n_bits = 18; break;
case 0xfff0f0a0: code = 0x3ca1d; n_bits = 18; break;
case 0xff1000f0: code = 0x3ca5d; n_bits = 18; break;
case 0xff606070: code = 0x3ca9d; n_bits = 18; break;
case 0xff3060a0: code = 0x3cadd; n_bits = 18; break;
case 0xffc0d010: code = 0x3cb1d; n_bits = 18; break;
case 0xffe06010: code = 0x3cb5d; n_bits = 18; break;
case 0xff30d000: code = 0x3cb9d; n_bits = 18; break;
case 0xffc0a030: code = 0x3cbdd; n_bits = 18; break;
case 0xff70f0a0: code = 0x3cc1d; n_bits = 18; break;
case 0xff407090: code = 0x3cc5d; n_bits = 18; break;
case 0xffa060c0: code = 0x3cc9d; n_bits = 18; break;
case 0xff00b020: code = 0x3ccdd; n_bits = 18; break;
case 0xff60b0f0: code = 0x3cd1d; n_bits = 18; break;
case 0xff20a020: code = 0x3cd5d; n_bits = 18; break;
case 0xff6050b0: code = 0x3cd9d; n_bits = 18; break;
case 0xff107010: code = 0x3cddd; n_bits = 18; break;
case 0xff90d0f0: code = 0x3ce1d; n_bits = 18; break;
case 0xffc0b0a0: code = 0x3ce5d; n_bits = 18; break;
case 0xfff0c0b0: code = 0x3ce9d; n_bits = 18; break;
case 0xffe0c070: code = 0x3cedd; n_bits = 18; break;
case 0xff20f000: code = 0x3cf1d; n_bits = 18; break;
case 0xfff0c020: code = 0x3cf5d; n_bits = 18; break;
case 0xffe0a0a0: code = 0x3cf9d; n_bits = 18; break;
case 0xffd01080: code = 0x3cfdd; n_bits = 18; break;
case 0xff60f0c0: code = 0x3d05d; n_bits = 18; break;
case 0xff40a080: code = 0x3d09d; n_bits = 18; break;
case 0xff807040: code = 0x3d0dd; n_bits = 18; break;
case 0xff40f0f0: code = 0x3d11d; n_bits = 18; break;
case 0xfff04000: code = 0x3d15d; n_bits = 18; break;
case 0xff50c060: code = 0x3d19d; n_bits = 18; break;
case 0xff8030c0: code = 0x3d1dd; n_bits = 18; break;
case 0xffa09070: code = 0x3d21d; n_bits = 18; break;
case 0xffb04000: code = 0x3d25d; n_bits = 18; break;
case 0xff3010d0: code = 0x3d29d; n_bits = 18; break;
case 0xff405030: code = 0x3d2dd; n_bits = 18; break;
case 0xff4090a0: code = 0x3d31d; n_bits = 18; break;
case 0xff9030c0: code = 0x3d35d; n_bits = 18; break;
case 0xffe090a0: code = 0x3d39d; n_bits = 18; break;
case 0xff10d0b0: code = 0x3d3dd; n_bits = 18; break;
case 0xff00f0d0: code = 0x3d41d; n_bits = 18; break;
case 0xffe0c020: code = 0x3d45d; n_bits = 18; break;
case 0xfff0d0a0: code = 0x3d49d; n_bits = 18; break;
case 0xffc040c0: code = 0x3d4dd; n_bits = 18; break;
case 0xff3080e0: code = 0x3d51d; n_bits = 18; break;
case 0xff40c040: code = 0x3d55d; n_bits = 18; break;
case 0xffd0f070: code = 0x3d59d; n_bits = 18; break;
case 0xffb05090: code = 0x3d5dd; n_bits = 18; break;
case 0xff401050: code = 0x3d61d; n_bits = 18; break;
case 0xff7020c0: code = 0x3d65d; n_bits = 18; break;
case 0xff40b0a0: code = 0x3d69d; n_bits = 18; break;
case 0xff600070: code = 0x3d6dd; n_bits = 18; break;
case 0xffa02040: code = 0x3d71d; n_bits = 18; break;
case 0xffd08050: code = 0x3d75d; n_bits = 18; break;
case 0xffa030a0: code = 0x3d79d; n_bits = 18; break;
case 0xff70c0e0: code = 0x3d7dd; n_bits = 18; break;
case 0xff50a070: code = 0x3d85d; n_bits = 18; break;
case 0xffb0c0c0: code = 0x3d89d; n_bits = 18; break;
case 0xff8090b0: code = 0x3d8dd; n_bits = 18; break;
case 0xffa07010: code = 0x3d91d; n_bits = 18; break;
case 0xff3000b0: code = 0x3d95d; n_bits = 18; break;
case 0xff20a0b0: code = 0x3d99d; n_bits = 18; break;
case 0xffb01040: code = 0x3d9dd; n_bits = 18; break;
case 0xff10d070: code = 0x3da1d; n_bits = 18; break;
case 0xff302000: code = 0x3da5d; n_bits = 18; break;
case 0xff90b010: code = 0x3da9d; n_bits = 18; break;
case 0xff507040: code = 0x3dadd; n_bits = 18; break;
case 0xffc0c040: code = 0x3db1d; n_bits = 18; break;
case 0xff70a000: code = 0x3db5d; n_bits = 18; break;
case 0xff70c040: code = 0x3db9d; n_bits = 18; break;
case 0xff40c050: code = 0x3dbdd; n_bits = 18; break;
case 0xffb0e0c0: code = 0x3dc1d; n_bits = 18; break;
case 0xff60e090: code = 0x3dc5d; n_bits = 18; break;
case 0xff50b060: code = 0x3dc9d; n_bits = 18; break;
case 0xff50c0a0: code = 0x3dcdd; n_bits = 18; break;
case 0xff909010: code = 0x3dd1d; n_bits = 18; break;
case 0xfff0d0d0: code = 0x3dd5d; n_bits = 18; break;
case 0xff309010: code = 0x3dd9d; n_bits = 18; break;
case 0xff302080: code = 0x3dddd; n_bits = 18; break;
case 0xff30e020: code = 0x3de1d; n_bits = 18; break;
case 0xff4070c0: code = 0x3de5d; n_bits = 18; break;
case 0xffc060a0: code = 0x3de9d; n_bits = 18; break;
case 0xffd07040: code = 0x3dedd; n_bits = 18; break;
case 0xffc09040: code = 0x3df1d; n_bits = 18; break;
case 0xfff06080: code = 0x3df5d; n_bits = 18; break;
case 0xff60a050: code = 0x3df9d; n_bits = 18; break;
case 0xff70f090: code = 0x3dfdd; n_bits = 18; break;
case 0xffa04030: code = 0x3e05d; n_bits = 18; break;
case 0xff90d070: code = 0x3e09d; n_bits = 18; break;
case 0xff501000: code = 0x3e0dd; n_bits = 18; break;
case 0xff201030: code = 0x3e11d; n_bits = 18; break;
case 0xff20b050: code = 0x3e15d; n_bits = 18; break;
case 0xff3070f0: code = 0x3e19d; n_bits = 18; break;
case 0xff60a010: code = 0x3e1dd; n_bits = 18; break;
case 0xff701070: code = 0x3e21d; n_bits = 18; break;
case 0xff3090d0: code = 0x3e25d; n_bits = 18; break;
case 0xffa0d0f0: code = 0x3e29d; n_bits = 18; break;
case 0xfff030b0: code = 0x3e2dd; n_bits = 18; break;
case 0xff7030e0: code = 0x3e31d; n_bits = 18; break;
case 0xff2010b0: code = 0x3e35d; n_bits = 18; break;
case 0xff3010a0: code = 0x3e39d; n_bits = 18; break;
case 0xffa0d010: code = 0x3e3dd; n_bits = 18; break;
case 0xff2000b0: code = 0x3e45d; n_bits = 18; break;
case 0xffa020b0: code = 0x3e49d; n_bits = 18; break;
case 0xffa04040: code = 0x3e4dd; n_bits = 18; break;
case 0xff40e0d0: code = 0x3e51d; n_bits = 18; break;
case 0xffb0c0f0: code = 0x3e55d; n_bits = 18; break;
case 0xff604010: code = 0x3e59d; n_bits = 18; break;
case 0xff40b0f0: code = 0x3e5dd; n_bits = 18; break;
case 0xff301020: code = 0x3e61d; n_bits = 18; break;
case 0xff00a060: code = 0x3e65d; n_bits = 18; break;
case 0xffa0f0e0: code = 0x3e69d; n_bits = 18; break;
case 0xff60c0e0: code = 0x3e6dd; n_bits = 18; break;
case 0xffb06040: code = 0x3e71d; n_bits = 18; break;
case 0xff400040: code = 0x3e75d; n_bits = 18; break;
case 0xffc030a0: code = 0x3e79d; n_bits = 18; break;
case 0xff90e080: code = 0x3e7dd; n_bits = 18; break;
case 0xff70a040: code = 0x3e85d; n_bits = 18; break;
case 0xfff06030: code = 0x3e89d; n_bits = 18; break;
case 0xff60b0e0: code = 0x3e8dd; n_bits = 18; break;
case 0xff70a080: code = 0x3e91d; n_bits = 18; break;
case 0xff90f010: code = 0x3e95d; n_bits = 18; break;
case 0xffb0a010: code = 0x3e99d; n_bits = 18; break;
case 0xffe07070: code = 0x3e9dd; n_bits = 18; break;
case 0xff10e040: code = 0x3ea1d; n_bits = 18; break;
case 0xffb02060: code = 0x3ea5d; n_bits = 18; break;
case 0xff603010: code = 0x3ea9d; n_bits = 18; break;
case 0xff1000b0: code = 0x3eadd; n_bits = 18; break;
case 0xff30d0b0: code = 0x3eb1d; n_bits = 18; break;
case 0xff109010: code = 0x3eb5d; n_bits = 18; break;
case 0xff70f080: code = 0x3eb9d; n_bits = 18; break;
case 0xff104050: code = 0x3ebdd; n_bits = 18; break;
case 0xff109060: code = 0x3ec1d; n_bits = 18; break;
case 0xff7050b0: code = 0x3ec5d; n_bits = 18; break;
case 0xfff02000: code = 0x3ec9d; n_bits = 18; break;
case 0xffe010e0: code = 0x3ecdd; n_bits = 18; break;
case 0xfff0a080: code = 0x3ed1d; n_bits = 18; break;
case 0xffd0f0e0: code = 0x3ed5d; n_bits = 18; break;
case 0xff1040a0: code = 0x3ed9d; n_bits = 18; break;
case 0xff003090: code = 0x3eddd; n_bits = 18; break;
case 0xff106080: code = 0x3ee1d; n_bits = 18; break;
case 0xff204000: code = 0x3ee5d; n_bits = 18; break;
case 0xff20f030: code = 0x3ee9d; n_bits = 18; break;
case 0xffc010e0: code = 0x3eedd; n_bits = 18; break;
case 0xff10f030: code = 0x3ef1d; n_bits = 18; break;
case 0xffd060b0: code = 0x3ef5d; n_bits = 18; break;
case 0xffd0f050: code = 0x3ef9d; n_bits = 18; break;
case 0xff202040: code = 0x3efdd; n_bits = 18; break;
case 0xffe06070: code = 0x3f05d; n_bits = 18; break;
case 0xff503080: code = 0x3f09d; n_bits = 18; break;
case 0xff60c090: code = 0x3f0dd; n_bits = 18; break;
case 0xffc03050: code = 0x3f11d; n_bits = 18; break;
case 0xffe0a070: code = 0x3f15d; n_bits = 18; break;
case 0xff90e0e0: code = 0x3f19d; n_bits = 18; break;
case 0xff10c010: code = 0x3f1dd; n_bits = 18; break;
case 0xff300090: code = 0x3f21d; n_bits = 18; break;
case 0xff706040: code = 0x3f25d; n_bits = 18; break;
case 0xff6000c0: code = 0x3f29d; n_bits = 18; break;
case 0xffc020b0: code = 0x3f2dd; n_bits = 18; break;
case 0xffe0c0c0: code = 0x3f31d; n_bits = 18; break;
case 0xfff01060: code = 0x3f35d; n_bits = 18; break;
case 0xff705000: code = 0x3f39d; n_bits = 18; break;
case 0xffa0c040: code = 0x3f3dd; n_bits = 18; break;
case 0xff304010: code = 0x3f41d; n_bits = 18; break;
case 0xff6080e0: code = 0x3f45d; n_bits = 18; break;
case 0xff604040: code = 0x3f49d; n_bits = 18; break;
case 0xff50d010: code = 0x3f4dd; n_bits = 18; break;
case 0xffa00060: code = 0x3f51d; n_bits = 18; break;
case 0xff907090: code = 0x3f55d; n_bits = 18; break;
case 0xff40b000: code = 0x3f59d; n_bits = 18; break;
case 0xfff08070: code = 0x3f5dd; n_bits = 18; break;
case 0xff0030d0: code = 0x3f61d; n_bits = 18; break;
case 0xff10b010: code = 0x3f65d; n_bits = 18; break;
case 0xffc0a060: code = 0x3f69d; n_bits = 18; break;
case 0xffc0e080: code = 0x3f6dd; n_bits = 18; break;
case 0xff601080: code = 0x3f71d; n_bits = 18; break;
case 0xff1020f0: code = 0x3f75d; n_bits = 18; break;
case 0xff4070b0: code = 0x3f79d; n_bits = 18; break;
case 0xff2080e0: code = 0x3f7dd; n_bits = 18; break;
case 0xff601090: code = 0x3f85d; n_bits = 18; break;
case 0xff5010c0: code = 0x3f89d; n_bits = 18; break;
case 0xff10e090: code = 0x3f8dd; n_bits = 18; break;
case 0xff307040: code = 0x3f91d; n_bits = 18; break;
case 0xffc070e0: code = 0x3f95d; n_bits = 18; break;
case 0xffa0e0e0: code = 0x3f99d; n_bits = 18; break;
case 0xffc0d090: code = 0x3f9dd; n_bits = 18; break;
case 0xffa0b080: code = 0x3fa1d; n_bits = 18; break;
case 0xfff020f0: code = 0x3fa5d; n_bits = 18; break;
case 0xff6060b0: code = 0x3fa9d; n_bits = 18; break;
case 0xff20d0c0: code = 0x3fadd; n_bits = 18; break;
case 0xff603040: code = 0x3fb1d; n_bits = 18; break;
case 0xff1040b0: code = 0x3fb5d; n_bits = 18; break;
case 0xffe03030: code = 0x3fb9d; n_bits = 18; break;
case 0xff8070e0: code = 0x3fbdd; n_bits = 18; break;
case 0xffb0b080: code = 0x3fc1d; n_bits = 18; break;
case 0xffd0e060: code = 0x3fc5d; n_bits = 18; break;
case 0xff308090: code = 0x3fc9d; n_bits = 18; break;
case 0xff000060: code = 0x3fcdd; n_bits = 18; break;
case 0xff502080: code = 0x3fd1d; n_bits = 18; break;
case 0xff0030f0: code = 0x3fd5d; n_bits = 18; break;
case 0xffb0e020: code = 0x3fd9d; n_bits = 18; break;
case 0xff408090: code = 0x3fddd; n_bits = 18; break;
case 0xff40e050: code = 0x3fe1d; n_bits = 18; break;
case 0xff70f0c0: code = 0x3fe5d; n_bits = 18; break;
case 0xff60e050: code = 0x3fe9d; n_bits = 18; break;
case 0xff00a040: code = 0x3fedd; n_bits = 18; break;
case 0xff50e050: code = 0x3ff1d; n_bits = 18; break;
case 0xff80d0e0: code = 0x3ff5d; n_bits = 18; break;
case 0xffe05010: code = 0x3ff9d; n_bits = 18; break;
case 0xff906080: code = 0x3ffdd; n_bits = 18; break;
