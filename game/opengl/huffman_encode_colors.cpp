// DO NOT EDIT - file generated by game/gen_huffman.py
case 0xff305050: code = 0x000; n_bits =  1; break;
case 0xff707070: code = 0x003; n_bits =  3; break;
case 0xfff0f0f0: code = 0x007; n_bits =  3; break;
case 0xfff0f000: code = 0x005; n_bits =  4; break;
case 0xff000000: code = 0x00d; n_bits =  5; break;
case 0xff505050: code = 0x011; n_bits =  5; break;
case 0xffe0a040: code = 0x019; n_bits =  6; break;
case 0xff202020: code = 0x01d; n_bits =  6; break;
case 0xff404040: code = 0x029; n_bits =  6; break;
case 0xfff00000: code = 0x03d; n_bits =  6; break;
case 0xff009000: code = 0x039; n_bits =  7; break;
case 0xff404000: code = 0x049; n_bits =  7; break;
case 0xff400000: code = 0x061; n_bits =  7; break;
case 0xfff0a040: code = 0x0f9; n_bits =  8; break;
case 0xff909000: code = 0x079; n_bits =  9; break;
case 0xff900000: code = 0x189; n_bits =  9; break;
case 0xff402010: code = 0x289; n_bits = 10; break;
case 0xff002000: code = 0x179; n_bits = 11; break;
case 0xff909090: code = 0x6579; n_bits = 15; break;
case 0xff203020: code = 0x001; n_bits = 17; break;
case 0xff302010: code = 0x009; n_bits = 17; break;
case 0xffe0f010: code = 0x021; n_bits = 17; break;
case 0xff005050: code = 0x041; n_bits = 17; break;
case 0xff1050c0: code = 0x081; n_bits = 17; break;
case 0xffc0d070: code = 0x089; n_bits = 17; break;
case 0xff907070: code = 0x0a1; n_bits = 17; break;
case 0xff70e050: code = 0x0c1; n_bits = 17; break;
case 0xffe04080: code = 0x101; n_bits = 17; break;
case 0xfff010a0: code = 0x109; n_bits = 17; break;
case 0xffb02050: code = 0x121; n_bits = 17; break;
case 0xffb0d050: code = 0x141; n_bits = 17; break;
case 0xff8090a0: code = 0x181; n_bits = 17; break;
case 0xff9050c0: code = 0x1a1; n_bits = 17; break;
case 0xffd030b0: code = 0x1c1; n_bits = 17; break;
case 0xfff03010: code = 0x201; n_bits = 17; break;
case 0xffe000e0: code = 0x209; n_bits = 17; break;
case 0xffc04010: code = 0x221; n_bits = 17; break;
case 0xffc020f0: code = 0x241; n_bits = 17; break;
case 0xffa0c090: code = 0x281; n_bits = 17; break;
case 0xff70c020: code = 0x2a1; n_bits = 17; break;
case 0xff400020: code = 0x2c1; n_bits = 17; break;
case 0xff70c080: code = 0x301; n_bits = 17; break;
case 0xff809050: code = 0x309; n_bits = 17; break;
case 0xff80e080: code = 0x321; n_bits = 17; break;
case 0xff305060: code = 0x341; n_bits = 17; break;
case 0xffc02020: code = 0x381; n_bits = 17; break;
case 0xff30d0f0: code = 0x3a1; n_bits = 17; break;
case 0xff001050: code = 0x3c1; n_bits = 17; break;
case 0xff003010: code = 0x401; n_bits = 17; break;
case 0xff10c0e0: code = 0x409; n_bits = 17; break;
case 0xffd01000: code = 0x421; n_bits = 17; break;
case 0xff70c0c0: code = 0x441; n_bits = 17; break;
case 0xff509030: code = 0x481; n_bits = 17; break;
case 0xff10d090: code = 0x489; n_bits = 17; break;
case 0xffa09060: code = 0x4a1; n_bits = 17; break;
case 0xffd0b020: code = 0x4c1; n_bits = 17; break;
case 0xff6000f0: code = 0x501; n_bits = 17; break;
case 0xffc0a030: code = 0x509; n_bits = 17; break;
case 0xffd0b0b0: code = 0x521; n_bits = 17; break;
case 0xffa080c0: code = 0x541; n_bits = 17; break;
case 0xffd0d0a0: code = 0x579; n_bits = 17; break;
case 0xff50f010: code = 0x581; n_bits = 17; break;
case 0xffb04070: code = 0x5a1; n_bits = 17; break;
case 0xffb0c040: code = 0x5c1; n_bits = 17; break;
case 0xff1040e0: code = 0x601; n_bits = 17; break;
case 0xfff0c070: code = 0x609; n_bits = 17; break;
case 0xff109010: code = 0x621; n_bits = 17; break;
case 0xfff03080: code = 0x641; n_bits = 17; break;
case 0xff70d080: code = 0x681; n_bits = 17; break;
case 0xff600000: code = 0x6a1; n_bits = 17; break;
case 0xfff0e0e0: code = 0x6c1; n_bits = 17; break;
case 0xff5020f0: code = 0x701; n_bits = 17; break;
case 0xff2010e0: code = 0x709; n_bits = 17; break;
case 0xffb01020: code = 0x721; n_bits = 17; break;
case 0xff2090c0: code = 0x741; n_bits = 17; break;
case 0xffc09090: code = 0x781; n_bits = 17; break;
case 0xffe0c070: code = 0x7a1; n_bits = 17; break;
case 0xff10d060: code = 0x7c1; n_bits = 17; break;
case 0xff10f0e0: code = 0x801; n_bits = 17; break;
case 0xff8030c0: code = 0x809; n_bits = 17; break;
case 0xff90e030: code = 0x821; n_bits = 17; break;
case 0xffc06030: code = 0x841; n_bits = 17; break;
case 0xffd09010: code = 0x881; n_bits = 17; break;
case 0xfff0a020: code = 0x889; n_bits = 17; break;
case 0xff802040: code = 0x8a1; n_bits = 17; break;
case 0xff7060a0: code = 0x8c1; n_bits = 17; break;
case 0xff107050: code = 0x901; n_bits = 17; break;
case 0xff10d0b0: code = 0x909; n_bits = 17; break;
case 0xffb0b0f0: code = 0x921; n_bits = 17; break;
case 0xff307050: code = 0x941; n_bits = 17; break;
case 0xffd03060: code = 0x981; n_bits = 17; break;
case 0xff00a050: code = 0x9a1; n_bits = 17; break;
case 0xff905000: code = 0x9c1; n_bits = 17; break;
case 0xffb09070: code = 0xa01; n_bits = 17; break;
case 0xff30d050: code = 0xa09; n_bits = 17; break;
case 0xff70b040: code = 0xa21; n_bits = 17; break;
case 0xffa0c050: code = 0xa41; n_bits = 17; break;
case 0xffb06020: code = 0xa81; n_bits = 17; break;
case 0xffc040c0: code = 0xaa1; n_bits = 17; break;
case 0xff90a040: code = 0xac1; n_bits = 17; break;
case 0xffb05070: code = 0xb01; n_bits = 17; break;
case 0xff70c0e0: code = 0xb09; n_bits = 17; break;
case 0xffa05030: code = 0xb21; n_bits = 17; break;
case 0xffe01090: code = 0xb41; n_bits = 17; break;
case 0xff809030: code = 0xb81; n_bits = 17; break;
case 0xff600070: code = 0xba1; n_bits = 17; break;
case 0xffa0d0b0: code = 0xbc1; n_bits = 17; break;
case 0xff90b0e0: code = 0xc01; n_bits = 17; break;
case 0xff7060d0: code = 0xc09; n_bits = 17; break;
case 0xff3090c0: code = 0xc21; n_bits = 17; break;
case 0xffa08050: code = 0xc41; n_bits = 17; break;
case 0xff20b0e0: code = 0xc81; n_bits = 17; break;
case 0xff907010: code = 0xc89; n_bits = 17; break;
case 0xffb020f0: code = 0xca1; n_bits = 17; break;
case 0xff000050: code = 0xcc1; n_bits = 17; break;
case 0xffd0b0e0: code = 0xd01; n_bits = 17; break;
case 0xff40c050: code = 0xd09; n_bits = 17; break;
case 0xffc06080: code = 0xd21; n_bits = 17; break;
case 0xff504050: code = 0xd41; n_bits = 17; break;
case 0xff20e0a0: code = 0xd81; n_bits = 17; break;
case 0xff80e0a0: code = 0xda1; n_bits = 17; break;
case 0xff20f0e0: code = 0xdc1; n_bits = 17; break;
case 0xff20c0a0: code = 0xe01; n_bits = 17; break;
case 0xff20a0a0: code = 0xe09; n_bits = 17; break;
case 0xff80d010: code = 0xe21; n_bits = 17; break;
case 0xff5080d0: code = 0xe41; n_bits = 17; break;
case 0xff90e0d0: code = 0xe81; n_bits = 17; break;
case 0xffc02030: code = 0xea1; n_bits = 17; break;
case 0xfff0d070: code = 0xec1; n_bits = 17; break;
case 0xff20f060: code = 0xf01; n_bits = 17; break;
case 0xff504090: code = 0xf09; n_bits = 17; break;
case 0xff404030: code = 0xf21; n_bits = 17; break;
case 0xff4090b0: code = 0xf41; n_bits = 17; break;
case 0xff30f060: code = 0xf81; n_bits = 17; break;
case 0xffd07040: code = 0xfa1; n_bits = 17; break;
case 0xffa0b020: code = 0xfc1; n_bits = 17; break;
case 0xff50b020: code = 0x1001; n_bits = 17; break;
case 0xff60a010: code = 0x1009; n_bits = 17; break;
case 0xffc08040: code = 0x1021; n_bits = 17; break;
case 0xff90d0e0: code = 0x1041; n_bits = 17; break;
case 0xff7050a0: code = 0x1081; n_bits = 17; break;
case 0xff60c050: code = 0x1089; n_bits = 17; break;
case 0xffd0e000: code = 0x10a1; n_bits = 17; break;
case 0xff805070: code = 0x10c1; n_bits = 17; break;
case 0xffa06010: code = 0x1101; n_bits = 17; break;
case 0xffa0d010: code = 0x1109; n_bits = 17; break;
case 0xff20e010: code = 0x1121; n_bits = 17; break;
case 0xff800050: code = 0x1141; n_bits = 17; break;
case 0xffe06090: code = 0x1181; n_bits = 17; break;
case 0xfff030b0: code = 0x11a1; n_bits = 17; break;
case 0xffe030f0: code = 0x11c1; n_bits = 17; break;
case 0xffe060a0: code = 0x1201; n_bits = 17; break;
case 0xff9030f0: code = 0x1209; n_bits = 17; break;
case 0xff3040b0: code = 0x1221; n_bits = 17; break;
case 0xffd06060: code = 0x1241; n_bits = 17; break;
case 0xff806060: code = 0x1281; n_bits = 17; break;
case 0xffa04040: code = 0x12a1; n_bits = 17; break;
case 0xff50b000: code = 0x12c1; n_bits = 17; break;
case 0xff0030a0: code = 0x1301; n_bits = 17; break;
case 0xff90e080: code = 0x1309; n_bits = 17; break;
case 0xff1030b0: code = 0x1321; n_bits = 17; break;
case 0xff402060: code = 0x1341; n_bits = 17; break;
case 0xfff040e0: code = 0x1381; n_bits = 17; break;
case 0xff60c0e0: code = 0x13a1; n_bits = 17; break;
case 0xff40c0e0: code = 0x13c1; n_bits = 17; break;
case 0xff6030e0: code = 0x1401; n_bits = 17; break;
case 0xffe07070: code = 0x1409; n_bits = 17; break;
case 0xff004000: code = 0x1421; n_bits = 17; break;
case 0xff20b0b0: code = 0x1441; n_bits = 17; break;
case 0xff30f000: code = 0x1481; n_bits = 17; break;
case 0xfff04020: code = 0x1489; n_bits = 17; break;
case 0xffe0f0f0: code = 0x14a1; n_bits = 17; break;
case 0xfff09010: code = 0x14c1; n_bits = 17; break;
case 0xff005060: code = 0x1501; n_bits = 17; break;
case 0xff104050: code = 0x1509; n_bits = 17; break;
case 0xff40b010: code = 0x1521; n_bits = 17; break;
case 0xfff08060: code = 0x1541; n_bits = 17; break;
case 0xff804040: code = 0x1581; n_bits = 17; break;
case 0xff90a0b0: code = 0x15a1; n_bits = 17; break;
case 0xffb050e0: code = 0x15c1; n_bits = 17; break;
case 0xffb010c0: code = 0x1601; n_bits = 17; break;
case 0xff700000: code = 0x1609; n_bits = 17; break;
case 0xffc040b0: code = 0x1621; n_bits = 17; break;
case 0xff60a040: code = 0x1641; n_bits = 17; break;
case 0xffc080e0: code = 0x1681; n_bits = 17; break;
case 0xfff0f030: code = 0x16a1; n_bits = 17; break;
case 0xffd050d0: code = 0x16c1; n_bits = 17; break;
case 0xff60b0d0: code = 0x1701; n_bits = 17; break;
case 0xffd09090: code = 0x1709; n_bits = 17; break;
case 0xff6040b0: code = 0x1721; n_bits = 17; break;
case 0xff807030: code = 0x1741; n_bits = 17; break;
case 0xff2050d0: code = 0x1781; n_bits = 17; break;
case 0xff70f060: code = 0x17a1; n_bits = 17; break;
case 0xff90f0a0: code = 0x17c1; n_bits = 17; break;
case 0xff900030: code = 0x1801; n_bits = 17; break;
case 0xff10c010: code = 0x1809; n_bits = 17; break;
case 0xff4020a0: code = 0x1821; n_bits = 17; break;
case 0xff202070: code = 0x1841; n_bits = 17; break;
case 0xffe090e0: code = 0x1881; n_bits = 17; break;
case 0xff30c090: code = 0x1889; n_bits = 17; break;
case 0xff20c0c0: code = 0x18a1; n_bits = 17; break;
case 0xff404090: code = 0x18c1; n_bits = 17; break;
case 0xffb090a0: code = 0x1901; n_bits = 17; break;
case 0xffa0c040: code = 0x1909; n_bits = 17; break;
case 0xff60d030: code = 0x1921; n_bits = 17; break;
case 0xfff03040: code = 0x1941; n_bits = 17; break;
case 0xff902060: code = 0x1981; n_bits = 17; break;
case 0xff20f080: code = 0x19a1; n_bits = 17; break;
case 0xff40d000: code = 0x19c1; n_bits = 17; break;
case 0xffe000f0: code = 0x1a01; n_bits = 17; break;
case 0xff00d080: code = 0x1a09; n_bits = 17; break;
case 0xff005040: code = 0x1a21; n_bits = 17; break;
case 0xff207050: code = 0x1a41; n_bits = 17; break;
case 0xff80c010: code = 0x1a81; n_bits = 17; break;
case 0xff603060: code = 0x1aa1; n_bits = 17; break;
case 0xffe01070: code = 0x1ac1; n_bits = 17; break;
case 0xff308040: code = 0x1b01; n_bits = 17; break;
case 0xff1080b0: code = 0x1b09; n_bits = 17; break;
case 0xff6000a0: code = 0x1b21; n_bits = 17; break;
case 0xff80f0a0: code = 0x1b41; n_bits = 17; break;
case 0xff907040: code = 0x1b81; n_bits = 17; break;
case 0xffc0e080: code = 0x1ba1; n_bits = 17; break;
case 0xffc0f030: code = 0x1bc1; n_bits = 17; break;
case 0xffd05020: code = 0x1c01; n_bits = 17; break;
case 0xff3010f0: code = 0x1c09; n_bits = 17; break;
case 0xff30f070: code = 0x1c21; n_bits = 17; break;
case 0xff607060: code = 0x1c41; n_bits = 17; break;
case 0xffa08080: code = 0x1c81; n_bits = 17; break;
case 0xff500080: code = 0x1c89; n_bits = 17; break;
case 0xff10e090: code = 0x1ca1; n_bits = 17; break;
case 0xff308050: code = 0x1cc1; n_bits = 17; break;
case 0xfff040b0: code = 0x1d01; n_bits = 17; break;
case 0xff8070e0: code = 0x1d09; n_bits = 17; break;
case 0xff90c070: code = 0x1d21; n_bits = 17; break;
case 0xff301070: code = 0x1d41; n_bits = 17; break;
case 0xff5060d0: code = 0x1d81; n_bits = 17; break;
case 0xffb020d0: code = 0x1da1; n_bits = 17; break;
case 0xff0040b0: code = 0x1dc1; n_bits = 17; break;
case 0xff200030: code = 0x1e01; n_bits = 17; break;
case 0xff4050e0: code = 0x1e09; n_bits = 17; break;
case 0xff5010a0: code = 0x1e21; n_bits = 17; break;
case 0xff403060: code = 0x1e41; n_bits = 17; break;
case 0xffe06020: code = 0x1e81; n_bits = 17; break;
case 0xffb08090: code = 0x1ea1; n_bits = 17; break;
case 0xff509040: code = 0x1ec1; n_bits = 17; break;
case 0xff306080: code = 0x1f01; n_bits = 17; break;
case 0xff90b020: code = 0x1f09; n_bits = 17; break;
case 0xff0060b0: code = 0x1f21; n_bits = 17; break;
case 0xff5090e0: code = 0x1f41; n_bits = 17; break;
case 0xff406080: code = 0x1f81; n_bits = 17; break;
case 0xff00a040: code = 0x1fa1; n_bits = 17; break;
case 0xff102010: code = 0x1fc1; n_bits = 17; break;
case 0xfff060e0: code = 0x2001; n_bits = 17; break;
case 0xff903050: code = 0x2009; n_bits = 17; break;
case 0xffa09090: code = 0x2021; n_bits = 17; break;
case 0xff50f0c0: code = 0x2041; n_bits = 17; break;
case 0xff40f0c0: code = 0x2081; n_bits = 17; break;
case 0xffc01040: code = 0x2089; n_bits = 17; break;
case 0xff5090f0: code = 0x20a1; n_bits = 17; break;
case 0xff5080b0: code = 0x20c1; n_bits = 17; break;
case 0xff9010a0: code = 0x2101; n_bits = 17; break;
case 0xfff0b000: code = 0x2109; n_bits = 17; break;
case 0xff60a0e0: code = 0x2121; n_bits = 17; break;
case 0xff80a030: code = 0x2141; n_bits = 17; break;
case 0xffe05010: code = 0x2181; n_bits = 17; break;
case 0xff7010d0: code = 0x21a1; n_bits = 17; break;
case 0xff3090d0: code = 0x21c1; n_bits = 17; break;
case 0xff60d090: code = 0x2201; n_bits = 17; break;
case 0xffa04010: code = 0x2209; n_bits = 17; break;
case 0xff30e070: code = 0x2221; n_bits = 17; break;
case 0xff10f070: code = 0x2241; n_bits = 17; break;
case 0xffa020b0: code = 0x2281; n_bits = 17; break;
case 0xfff0e060: code = 0x22a1; n_bits = 17; break;
case 0xff106030: code = 0x22c1; n_bits = 17; break;
case 0xffd05000: code = 0x2301; n_bits = 17; break;
case 0xffd0c000: code = 0x2309; n_bits = 17; break;
case 0xffc0e0c0: code = 0x2321; n_bits = 17; break;
case 0xffe02060: code = 0x2341; n_bits = 17; break;
case 0xffd0f090: code = 0x2381; n_bits = 17; break;
case 0xffb070c0: code = 0x23a1; n_bits = 17; break;
case 0xff602090: code = 0x23c1; n_bits = 17; break;
case 0xff80e0e0: code = 0x2401; n_bits = 17; break;
case 0xff20f0a0: code = 0x2409; n_bits = 17; break;
case 0xff209090: code = 0x2421; n_bits = 17; break;
case 0xffc0e070: code = 0x2441; n_bits = 17; break;
case 0xff00b040: code = 0x2481; n_bits = 17; break;
case 0xff40c0c0: code = 0x2489; n_bits = 17; break;
case 0xff00a0a0: code = 0x24a1; n_bits = 17; break;
case 0xffa03050: code = 0x24c1; n_bits = 17; break;
case 0xff3070b0: code = 0x2501; n_bits = 17; break;
case 0xff708050: code = 0x2509; n_bits = 17; break;
case 0xff0070e0: code = 0x2521; n_bits = 17; break;
case 0xff202050: code = 0x2541; n_bits = 17; break;
case 0xffa070d0: code = 0x2579; n_bits = 17; break;
case 0xffd0c060: code = 0x2581; n_bits = 17; break;
case 0xff9070e0: code = 0x25a1; n_bits = 17; break;
case 0xffb02060: code = 0x25c1; n_bits = 17; break;
case 0xff2060f0: code = 0x2601; n_bits = 17; break;
case 0xffa02050: code = 0x2609; n_bits = 17; break;
case 0xfff0e0a0: code = 0x2621; n_bits = 17; break;
case 0xff001010: code = 0x2641; n_bits = 17; break;
case 0xffb0e060: code = 0x2681; n_bits = 17; break;
case 0xff401040: code = 0x26a1; n_bits = 17; break;
case 0xff10e050: code = 0x26c1; n_bits = 17; break;
case 0xff2000a0: code = 0x2701; n_bits = 17; break;
case 0xff20c020: code = 0x2709; n_bits = 17; break;
case 0xff7090e0: code = 0x2721; n_bits = 17; break;
case 0xff206060: code = 0x2741; n_bits = 17; break;
case 0xff206020: code = 0x2781; n_bits = 17; break;
case 0xff8000d0: code = 0x27a1; n_bits = 17; break;
case 0xff20d010: code = 0x27c1; n_bits = 17; break;
case 0xffe080c0: code = 0x2801; n_bits = 17; break;
case 0xfff03090: code = 0x2809; n_bits = 17; break;
case 0xff005090: code = 0x2821; n_bits = 17; break;
case 0xffb010f0: code = 0x2841; n_bits = 17; break;
case 0xff70b050: code = 0x2881; n_bits = 17; break;
case 0xffc020c0: code = 0x2889; n_bits = 17; break;
case 0xffe070b0: code = 0x28a1; n_bits = 17; break;
case 0xffe06070: code = 0x28c1; n_bits = 17; break;
case 0xffd050f0: code = 0x2901; n_bits = 17; break;
case 0xff1030d0: code = 0x2909; n_bits = 17; break;
case 0xff106070: code = 0x2921; n_bits = 17; break;
case 0xff809060: code = 0x2941; n_bits = 17; break;
case 0xff70e010: code = 0x2981; n_bits = 17; break;
case 0xff3000f0: code = 0x29a1; n_bits = 17; break;
case 0xff2040a0: code = 0x29c1; n_bits = 17; break;
case 0xfff0e050: code = 0x2a01; n_bits = 17; break;
case 0xff603030: code = 0x2a09; n_bits = 17; break;
case 0xff70b030: code = 0x2a21; n_bits = 17; break;
case 0xff60e0d0: code = 0x2a41; n_bits = 17; break;
case 0xffa00010: code = 0x2a81; n_bits = 17; break;
case 0xffd08030: code = 0x2aa1; n_bits = 17; break;
case 0xffe0b050: code = 0x2ac1; n_bits = 17; break;
case 0xff90c0e0: code = 0x2b01; n_bits = 17; break;
case 0xffb02090: code = 0x2b09; n_bits = 17; break;
case 0xff00b050: code = 0x2b21; n_bits = 17; break;
case 0xff80d0f0: code = 0x2b41; n_bits = 17; break;
case 0xffd0e0c0: code = 0x2b81; n_bits = 17; break;
case 0xff5040d0: code = 0x2ba1; n_bits = 17; break;
case 0xffa030d0: code = 0x2bc1; n_bits = 17; break;
case 0xff807000: code = 0x2c01; n_bits = 17; break;
case 0xff60e000: code = 0x2c09; n_bits = 17; break;
case 0xff505020: code = 0x2c21; n_bits = 17; break;
case 0xff808000: code = 0x2c41; n_bits = 17; break;
case 0xffc0c020: code = 0x2c81; n_bits = 17; break;
case 0xffd04090: code = 0x2c89; n_bits = 17; break;
case 0xff203070: code = 0x2ca1; n_bits = 17; break;
case 0xff601090: code = 0x2cc1; n_bits = 17; break;
case 0xff709060: code = 0x2d01; n_bits = 17; break;
case 0xff10b020: code = 0x2d09; n_bits = 17; break;
case 0xff903000: code = 0x2d21; n_bits = 17; break;
case 0xff305090: code = 0x2d41; n_bits = 17; break;
case 0xff40a000: code = 0x2d81; n_bits = 17; break;
case 0xffb0c0b0: code = 0x2da1; n_bits = 17; break;
case 0xffd09060: code = 0x2dc1; n_bits = 17; break;
case 0xffb02030: code = 0x2e01; n_bits = 17; break;
case 0xffe02070: code = 0x2e09; n_bits = 17; break;
case 0xff20b0c0: code = 0x2e21; n_bits = 17; break;
case 0xff70b090: code = 0x2e41; n_bits = 17; break;
case 0xff10d0e0: code = 0x2e81; n_bits = 17; break;
case 0xff8040b0: code = 0x2ea1; n_bits = 17; break;
case 0xffb0f0a0: code = 0x2ec1; n_bits = 17; break;
case 0xffb050d0: code = 0x2f01; n_bits = 17; break;
case 0xffe0d000: code = 0x2f09; n_bits = 17; break;
case 0xfff040a0: code = 0x2f21; n_bits = 17; break;
case 0xffc0a020: code = 0x2f41; n_bits = 17; break;
case 0xfff09060: code = 0x2f81; n_bits = 17; break;
case 0xff305070: code = 0x2fa1; n_bits = 17; break;
case 0xff70f0c0: code = 0x2fc1; n_bits = 17; break;
case 0xffc04020: code = 0x3001; n_bits = 17; break;
case 0xff40b050: code = 0x3009; n_bits = 17; break;
case 0xff0010a0: code = 0x3021; n_bits = 17; break;
case 0xffe0e0f0: code = 0x3041; n_bits = 17; break;
case 0xff609040: code = 0x3081; n_bits = 17; break;
case 0xff3060e0: code = 0x3089; n_bits = 17; break;
case 0xff40e0e0: code = 0x30a1; n_bits = 17; break;
case 0xff60f0c0: code = 0x30c1; n_bits = 17; break;
case 0xffb00090: code = 0x3101; n_bits = 17; break;
case 0xff707050: code = 0x3109; n_bits = 17; break;
case 0xff40d0f0: code = 0x3121; n_bits = 17; break;
case 0xffe00090: code = 0x3141; n_bits = 17; break;
case 0xff406010: code = 0x3181; n_bits = 17; break;
case 0xff5090d0: code = 0x31a1; n_bits = 17; break;
case 0xff5010d0: code = 0x31c1; n_bits = 17; break;
case 0xff40d020: code = 0x3201; n_bits = 17; break;
case 0xffc090f0: code = 0x3209; n_bits = 17; break;
case 0xff5060c0: code = 0x3221; n_bits = 17; break;
case 0xff804080: code = 0x3241; n_bits = 17; break;
case 0xff6070a0: code = 0x3281; n_bits = 17; break;
case 0xffb0a040: code = 0x32a1; n_bits = 17; break;
case 0xffe0c020: code = 0x32c1; n_bits = 17; break;
case 0xfff0c0f0: code = 0x3301; n_bits = 17; break;
case 0xff9040a0: code = 0x3309; n_bits = 17; break;
case 0xffa0f010: code = 0x3321; n_bits = 17; break;
case 0xff80f010: code = 0x3341; n_bits = 17; break;
case 0xffa02090: code = 0x3381; n_bits = 17; break;
case 0xffd090d0: code = 0x33a1; n_bits = 17; break;
case 0xfff00080: code = 0x33c1; n_bits = 17; break;
case 0xfff040d0: code = 0x3401; n_bits = 17; break;
case 0xffb04050: code = 0x3409; n_bits = 17; break;
case 0xff8020a0: code = 0x3421; n_bits = 17; break;
case 0xff80c0f0: code = 0x3441; n_bits = 17; break;
case 0xff805090: code = 0x3481; n_bits = 17; break;
case 0xff5030e0: code = 0x3489; n_bits = 17; break;
case 0xff20f010: code = 0x34a1; n_bits = 17; break;
case 0xffa07030: code = 0x34c1; n_bits = 17; break;
case 0xff50c020: code = 0x3501; n_bits = 17; break;
case 0xfff0c080: code = 0x3509; n_bits = 17; break;
case 0xff30f0e0: code = 0x3521; n_bits = 17; break;
case 0xffb0a0e0: code = 0x3541; n_bits = 17; break;
case 0xffa05090: code = 0x3581; n_bits = 17; break;
case 0xffa09020: code = 0x35a1; n_bits = 17; break;
case 0xffb0b010: code = 0x35c1; n_bits = 17; break;
case 0xffd010e0: code = 0x3601; n_bits = 17; break;
case 0xffa050c0: code = 0x3609; n_bits = 17; break;
case 0xff10d040: code = 0x3621; n_bits = 17; break;
case 0xff906050: code = 0x3641; n_bits = 17; break;
case 0xff6050e0: code = 0x3681; n_bits = 17; break;
case 0xff0030c0: code = 0x36a1; n_bits = 17; break;
case 0xff0050e0: code = 0x36c1; n_bits = 17; break;
case 0xffd080a0: code = 0x3701; n_bits = 17; break;
case 0xff902010: code = 0x3709; n_bits = 17; break;
case 0xff90e050: code = 0x3721; n_bits = 17; break;
case 0xff608070: code = 0x3741; n_bits = 17; break;
case 0xffb0e040: code = 0x3781; n_bits = 17; break;
case 0xff3080d0: code = 0x37a1; n_bits = 17; break;
case 0xff4070c0: code = 0x37c1; n_bits = 17; break;
case 0xff503000: code = 0x3801; n_bits = 17; break;
case 0xffb0c0d0: code = 0x3809; n_bits = 17; break;
case 0xfff01090: code = 0x3821; n_bits = 17; break;
case 0xff902070: code = 0x3841; n_bits = 17; break;
case 0xffa0a0b0: code = 0x3881; n_bits = 17; break;
case 0xff80a040: code = 0x3889; n_bits = 17; break;
case 0xff5020a0: code = 0x38a1; n_bits = 17; break;
case 0xff104070: code = 0x38c1; n_bits = 17; break;
case 0xff705030: code = 0x3901; n_bits = 17; break;
case 0xff306070: code = 0x3909; n_bits = 17; break;
case 0xff00f080: code = 0x3921; n_bits = 17; break;
case 0xff904060: code = 0x3941; n_bits = 17; break;
case 0xff1080c0: code = 0x3981; n_bits = 17; break;
case 0xff505060: code = 0x39a1; n_bits = 17; break;
case 0xff9000f0: code = 0x39c1; n_bits = 17; break;
case 0xff10f0d0: code = 0x3a01; n_bits = 17; break;
case 0xffa050b0: code = 0x3a09; n_bits = 17; break;
case 0xff3040a0: code = 0x3a21; n_bits = 17; break;
case 0xff80d080: code = 0x3a41; n_bits = 17; break;
case 0xff40e090: code = 0x3a81; n_bits = 17; break;
case 0xff4080d0: code = 0x3aa1; n_bits = 17; break;
case 0xffe05080: code = 0x3ac1; n_bits = 17; break;
case 0xff909080: code = 0x3b01; n_bits = 17; break;
case 0xfff08080: code = 0x3b09; n_bits = 17; break;
case 0xff307060: code = 0x3b21; n_bits = 17; break;
case 0xffa0d000: code = 0x3b41; n_bits = 17; break;
case 0xff707030: code = 0x3b81; n_bits = 17; break;
case 0xff90b060: code = 0x3ba1; n_bits = 17; break;
case 0xffa0c0e0: code = 0x3bc1; n_bits = 17; break;
case 0xffc000e0: code = 0x3c01; n_bits = 17; break;
case 0xff5070d0: code = 0x3c09; n_bits = 17; break;
case 0xff80d020: code = 0x3c21; n_bits = 17; break;
case 0xff80f030: code = 0x3c41; n_bits = 17; break;
case 0xff700060: code = 0x3c81; n_bits = 17; break;
case 0xff10b0f0: code = 0x3c89; n_bits = 17; break;
case 0xff406060: code = 0x3ca1; n_bits = 17; break;
case 0xffa03020: code = 0x3cc1; n_bits = 17; break;
case 0xff2050c0: code = 0x3d01; n_bits = 17; break;
case 0xff50c080: code = 0x3d09; n_bits = 17; break;
case 0xffa060f0: code = 0x3d21; n_bits = 17; break;
case 0xff30e0f0: code = 0x3d41; n_bits = 17; break;
case 0xff501020: code = 0x3d81; n_bits = 17; break;
case 0xffd06080: code = 0x3da1; n_bits = 17; break;
case 0xffe0c0f0: code = 0x3dc1; n_bits = 17; break;
case 0xffe0e060: code = 0x3e01; n_bits = 17; break;
case 0xff2030f0: code = 0x3e09; n_bits = 17; break;
case 0xfff03000: code = 0x3e21; n_bits = 17; break;
case 0xff0020b0: code = 0x3e41; n_bits = 17; break;
case 0xffd0b080: code = 0x3e81; n_bits = 17; break;
case 0xffc0b040: code = 0x3ea1; n_bits = 17; break;
case 0xff206040: code = 0x3ec1; n_bits = 17; break;
case 0xff1070c0: code = 0x3f01; n_bits = 17; break;
case 0xff7070c0: code = 0x3f09; n_bits = 17; break;
case 0xff6070f0: code = 0x3f21; n_bits = 17; break;
case 0xff10d010: code = 0x3f41; n_bits = 17; break;
case 0xff40c0d0: code = 0x3f81; n_bits = 17; break;
case 0xff90f0c0: code = 0x3fa1; n_bits = 17; break;
case 0xffd03090: code = 0x3fc1; n_bits = 17; break;
case 0xffb0f0c0: code = 0x4001; n_bits = 17; break;
case 0xff10d0d0: code = 0x4009; n_bits = 17; break;
case 0xffe02080: code = 0x4021; n_bits = 17; break;
case 0xff40c030: code = 0x4041; n_bits = 17; break;
case 0xff00d0d0: code = 0x4081; n_bits = 17; break;
case 0xff40e080: code = 0x4089; n_bits = 17; break;
case 0xff7080b0: code = 0x40a1; n_bits = 17; break;
case 0xff1040f0: code = 0x40c1; n_bits = 17; break;
case 0xff906010: code = 0x4101; n_bits = 17; break;
case 0xff9090a0: code = 0x4109; n_bits = 17; break;
case 0xff507050: code = 0x4121; n_bits = 17; break;
case 0xff90e090: code = 0x4141; n_bits = 17; break;
case 0xff80a0c0: code = 0x4181; n_bits = 17; break;
case 0xff1090a0: code = 0x41a1; n_bits = 17; break;
case 0xffb040f0: code = 0x41c1; n_bits = 17; break;
case 0xff80c050: code = 0x4201; n_bits = 17; break;
case 0xffb0c090: code = 0x4209; n_bits = 17; break;
case 0xff406090: code = 0x4221; n_bits = 17; break;
case 0xff30e030: code = 0x4241; n_bits = 17; break;
case 0xff80d0d0: code = 0x4281; n_bits = 17; break;
case 0xff0030e0: code = 0x42a1; n_bits = 17; break;
case 0xff201060: code = 0x42c1; n_bits = 17; break;
case 0xfff0d0c0: code = 0x4301; n_bits = 17; break;
case 0xff9050f0: code = 0x4309; n_bits = 17; break;
case 0xff702090: code = 0x4321; n_bits = 17; break;
case 0xffc0d080: code = 0x4341; n_bits = 17; break;
case 0xff000010: code = 0x4381; n_bits = 17; break;
case 0xff802090: code = 0x43a1; n_bits = 17; break;
case 0xfff0c010: code = 0x43c1; n_bits = 17; break;
case 0xffb08000: code = 0x4401; n_bits = 17; break;
case 0xff20a0c0: code = 0x4409; n_bits = 17; break;
case 0xff50d070: code = 0x4421; n_bits = 17; break;
case 0xffd00060: code = 0x4441; n_bits = 17; break;
case 0xff301060: code = 0x4481; n_bits = 17; break;
case 0xff4060d0: code = 0x4489; n_bits = 17; break;
case 0xff001090: code = 0x44a1; n_bits = 17; break;
case 0xffa08000: code = 0x44c1; n_bits = 17; break;
case 0xffb080d0: code = 0x4501; n_bits = 17; break;
case 0xffa0b070: code = 0x4509; n_bits = 17; break;
case 0xff10c020: code = 0x4521; n_bits = 17; break;
case 0xff8000f0: code = 0x4541; n_bits = 17; break;
case 0xff506030: code = 0x4579; n_bits = 17; break;
case 0xff20a0d0: code = 0x4581; n_bits = 17; break;
case 0xff804050: code = 0x45a1; n_bits = 17; break;
case 0xffc010a0: code = 0x45c1; n_bits = 17; break;
case 0xffb0b030: code = 0x4601; n_bits = 17; break;
case 0xff400050: code = 0x4609; n_bits = 17; break;
case 0xff104030: code = 0x4621; n_bits = 17; break;
case 0xff303060: code = 0x4641; n_bits = 17; break;
case 0xffc080a0: code = 0x4681; n_bits = 17; break;
case 0xffa0e020: code = 0x46a1; n_bits = 17; break;
case 0xffd06020: code = 0x46c1; n_bits = 17; break;
case 0xff10a0c0: code = 0x4701; n_bits = 17; break;
case 0xffd02080: code = 0x4709; n_bits = 17; break;
case 0xffc0c030: code = 0x4721; n_bits = 17; break;
case 0xfff0e010: code = 0x4741; n_bits = 17; break;
case 0xfff020d0: code = 0x4781; n_bits = 17; break;
case 0xffc0d0b0: code = 0x47a1; n_bits = 17; break;
case 0xffe09090: code = 0x47c1; n_bits = 17; break;
case 0xfff06070: code = 0x4801; n_bits = 17; break;
case 0xff8040c0: code = 0x4809; n_bits = 17; break;
case 0xffc07070: code = 0x4821; n_bits = 17; break;
case 0xff903010: code = 0x4841; n_bits = 17; break;
case 0xff803030: code = 0x4881; n_bits = 17; break;
case 0xff00d0a0: code = 0x4889; n_bits = 17; break;
case 0xff1060d0: code = 0x48a1; n_bits = 17; break;
case 0xff600080: code = 0x48c1; n_bits = 17; break;
case 0xff3000e0: code = 0x4901; n_bits = 17; break;
case 0xffa0a040: code = 0x4909; n_bits = 17; break;
case 0xff4080c0: code = 0x4921; n_bits = 17; break;
case 0xffa08020: code = 0x4941; n_bits = 17; break;
case 0xffb0b000: code = 0x4981; n_bits = 17; break;
case 0xfff0c0c0: code = 0x49a1; n_bits = 17; break;
case 0xfff0a0b0: code = 0x49c1; n_bits = 17; break;
case 0xff70c010: code = 0x4a01; n_bits = 17; break;
case 0xffc06020: code = 0x4a09; n_bits = 17; break;
case 0xfff000c0: code = 0x4a21; n_bits = 17; break;
case 0xff70d050: code = 0x4a41; n_bits = 17; break;
case 0xff505030: code = 0x4a81; n_bits = 17; break;
case 0xff00f0c0: code = 0x4aa1; n_bits = 17; break;
case 0xff703030: code = 0x4ac1; n_bits = 17; break;
case 0xff40e0b0: code = 0x4b01; n_bits = 17; break;
case 0xff401080: code = 0x4b09; n_bits = 17; break;
case 0xff40f000: code = 0x4b21; n_bits = 17; break;
case 0xff805030: code = 0x4b41; n_bits = 17; break;
case 0xff701080: code = 0x4b81; n_bits = 17; break;
case 0xff0000e0: code = 0x4ba1; n_bits = 17; break;
case 0xffb0e0d0: code = 0x4bc1; n_bits = 17; break;
case 0xff50f0f0: code = 0x4c01; n_bits = 17; break;
case 0xffe0e010: code = 0x4c09; n_bits = 17; break;
case 0xff007070: code = 0x4c21; n_bits = 17; break;
case 0xff800080: code = 0x4c41; n_bits = 17; break;
case 0xff606000: code = 0x4c81; n_bits = 17; break;
case 0xfff03050: code = 0x4c89; n_bits = 17; break;
case 0xff80a0a0: code = 0x4ca1; n_bits = 17; break;
case 0xff306090: code = 0x4cc1; n_bits = 17; break;
case 0xff500030: code = 0x4d01; n_bits = 17; break;
case 0xff80b0e0: code = 0x4d09; n_bits = 17; break;
case 0xff303070: code = 0x4d21; n_bits = 17; break;
case 0xff107000: code = 0x4d41; n_bits = 17; break;
case 0xff70c050: code = 0x4d81; n_bits = 17; break;
case 0xff403070: code = 0x4da1; n_bits = 17; break;
case 0xfff060a0: code = 0x4dc1; n_bits = 17; break;
case 0xffd030a0: code = 0x4e01; n_bits = 17; break;
case 0xff30b090: code = 0x4e09; n_bits = 17; break;
case 0xfff030f0: code = 0x4e21; n_bits = 17; break;
case 0xff10a050: code = 0x4e41; n_bits = 17; break;
case 0xff001040: code = 0x4e81; n_bits = 17; break;
case 0xffc0c0f0: code = 0x4ea1; n_bits = 17; break;
case 0xffb0d0e0: code = 0x4ec1; n_bits = 17; break;
case 0xffc07040: code = 0x4f01; n_bits = 17; break;
case 0xff3050d0: code = 0x4f09; n_bits = 17; break;
case 0xff5070c0: code = 0x4f21; n_bits = 17; break;
case 0xff20a0f0: code = 0x4f41; n_bits = 17; break;
case 0xff00d010: code = 0x4f81; n_bits = 17; break;
case 0xffb060f0: code = 0x4fa1; n_bits = 17; break;
case 0xffa000c0: code = 0x4fc1; n_bits = 17; break;
case 0xff303050: code = 0x5001; n_bits = 17; break;
case 0xffa0c060: code = 0x5009; n_bits = 17; break;
case 0xfff010c0: code = 0x5021; n_bits = 17; break;
case 0xff705020: code = 0x5041; n_bits = 17; break;
case 0xffd00000: code = 0x5081; n_bits = 17; break;
case 0xff4000f0: code = 0x5089; n_bits = 17; break;
case 0xfff0c0e0: code = 0x50a1; n_bits = 17; break;
case 0xff60b050: code = 0x50c1; n_bits = 17; break;
case 0xffc00090: code = 0x5101; n_bits = 17; break;
case 0xff80e050: code = 0x5109; n_bits = 17; break;
case 0xff1000c0: code = 0x5121; n_bits = 17; break;
case 0xff90b0f0: code = 0x5141; n_bits = 17; break;
case 0xff00b0f0: code = 0x5181; n_bits = 17; break;
case 0xff30e010: code = 0x51a1; n_bits = 17; break;
case 0xffe07020: code = 0x51c1; n_bits = 17; break;
case 0xff70a0b0: code = 0x5201; n_bits = 17; break;
case 0xff80e060: code = 0x5209; n_bits = 17; break;
case 0xffe07080: code = 0x5221; n_bits = 17; break;
case 0xff5080e0: code = 0x5241; n_bits = 17; break;
case 0xffc080d0: code = 0x5281; n_bits = 17; break;
case 0xff005080: code = 0x52a1; n_bits = 17; break;
case 0xff908030: code = 0x52c1; n_bits = 17; break;
case 0xff70c000: code = 0x5301; n_bits = 17; break;
case 0xffd02020: code = 0x5309; n_bits = 17; break;
case 0xff608080: code = 0x5321; n_bits = 17; break;
case 0xff40b070: code = 0x5341; n_bits = 17; break;
case 0xffc01050: code = 0x5381; n_bits = 17; break;
case 0xff207000: code = 0x53a1; n_bits = 17; break;
case 0xff007000: code = 0x53c1; n_bits = 17; break;
case 0xffc0b090: code = 0x5401; n_bits = 17; break;
case 0xffd03010: code = 0x5409; n_bits = 17; break;
case 0xff2020e0: code = 0x5421; n_bits = 17; break;
case 0xff003090: code = 0x5441; n_bits = 17; break;
case 0xfff00030: code = 0x5481; n_bits = 17; break;
case 0xffd05060: code = 0x5489; n_bits = 17; break;
case 0xff204040: code = 0x54a1; n_bits = 17; break;
case 0xff50c050: code = 0x54c1; n_bits = 17; break;
case 0xfff0f060: code = 0x5501; n_bits = 17; break;
case 0xff2070e0: code = 0x5509; n_bits = 17; break;
case 0xffa03040: code = 0x5521; n_bits = 17; break;
case 0xff90c000: code = 0x5541; n_bits = 17; break;
case 0xffe07030: code = 0x5581; n_bits = 17; break;
case 0xffb0d080: code = 0x55a1; n_bits = 17; break;
case 0xffe040b0: code = 0x55c1; n_bits = 17; break;
case 0xffb03000: code = 0x5601; n_bits = 17; break;
case 0xff80c0a0: code = 0x5609; n_bits = 17; break;
case 0xff804000: code = 0x5621; n_bits = 17; break;
case 0xff7050e0: code = 0x5641; n_bits = 17; break;
case 0xff702040: code = 0x5681; n_bits = 17; break;
case 0xff701020: code = 0x56a1; n_bits = 17; break;
case 0xff90a020: code = 0x56c1; n_bits = 17; break;
case 0xff405010: code = 0x5701; n_bits = 17; break;
case 0xffb030c0: code = 0x5709; n_bits = 17; break;
case 0xff8040d0: code = 0x5721; n_bits = 17; break;
case 0xffc01010: code = 0x5741; n_bits = 17; break;
case 0xffd0d000: code = 0x5781; n_bits = 17; break;
case 0xff10c0b0: code = 0x57a1; n_bits = 17; break;
case 0xff50c000: code = 0x57c1; n_bits = 17; break;
case 0xff702070: code = 0x5801; n_bits = 17; break;
case 0xff30c0c0: code = 0x5809; n_bits = 17; break;
case 0xff40b0b0: code = 0x5821; n_bits = 17; break;
case 0xff90f020: code = 0x5841; n_bits = 17; break;
case 0xff607020: code = 0x5881; n_bits = 17; break;
case 0xffd0f030: code = 0x5889; n_bits = 17; break;
case 0xff70a070: code = 0x58a1; n_bits = 17; break;
case 0xff40d0a0: code = 0x58c1; n_bits = 17; break;
case 0xffc01090: code = 0x5901; n_bits = 17; break;
case 0xff6080c0: code = 0x5909; n_bits = 17; break;
case 0xff706040: code = 0x5921; n_bits = 17; break;
case 0xffd0a070: code = 0x5941; n_bits = 17; break;
case 0xff20d000: code = 0x5981; n_bits = 17; break;
case 0xff70d030: code = 0x59a1; n_bits = 17; break;
case 0xff00e0f0: code = 0x59c1; n_bits = 17; break;
case 0xff901020: code = 0x5a01; n_bits = 17; break;
case 0xff90c010: code = 0x5a09; n_bits = 17; break;
case 0xffe01030: code = 0x5a21; n_bits = 17; break;
case 0xffc00050: code = 0x5a41; n_bits = 17; break;
case 0xff30b000: code = 0x5a81; n_bits = 17; break;
case 0xff301010: code = 0x5aa1; n_bits = 17; break;
case 0xff20d050: code = 0x5ac1; n_bits = 17; break;
case 0xffb0e080: code = 0x5b01; n_bits = 17; break;
case 0xffa09040: code = 0x5b09; n_bits = 17; break;
case 0xff50f030: code = 0x5b21; n_bits = 17; break;
case 0xff302070: code = 0x5b41; n_bits = 17; break;
case 0xffc00080: code = 0x5b81; n_bits = 17; break;
case 0xffa0f0c0: code = 0x5ba1; n_bits = 17; break;
case 0xff207060: code = 0x5bc1; n_bits = 17; break;
case 0xff606030: code = 0x5c01; n_bits = 17; break;
case 0xffd02040: code = 0x5c09; n_bits = 17; break;
case 0xffb000a0: code = 0x5c21; n_bits = 17; break;
case 0xff304040: code = 0x5c41; n_bits = 17; break;
case 0xff8000b0: code = 0x5c81; n_bits = 17; break;
case 0xff30a0b0: code = 0x5c89; n_bits = 17; break;
case 0xff60e030: code = 0x5ca1; n_bits = 17; break;
case 0xff100080: code = 0x5cc1; n_bits = 17; break;
case 0xff30a000: code = 0x5d01; n_bits = 17; break;
case 0xffb04030: code = 0x5d09; n_bits = 17; break;
case 0xffd00010: code = 0x5d21; n_bits = 17; break;
case 0xff50d0b0: code = 0x5d41; n_bits = 17; break;
case 0xff00c080: code = 0x5d81; n_bits = 17; break;
case 0xff8050f0: code = 0x5da1; n_bits = 17; break;
case 0xff504060: code = 0x5dc1; n_bits = 17; break;
case 0xff209040: code = 0x5e01; n_bits = 17; break;
case 0xff308030: code = 0x5e09; n_bits = 17; break;
case 0xff706050: code = 0x5e21; n_bits = 17; break;
case 0xfff010e0: code = 0x5e41; n_bits = 17; break;
case 0xff309040: code = 0x5e81; n_bits = 17; break;
case 0xffe0a000: code = 0x5ea1; n_bits = 17; break;
case 0xfff0c050: code = 0x5ec1; n_bits = 17; break;
case 0xff2060e0: code = 0x5f01; n_bits = 17; break;
case 0xff70c060: code = 0x5f09; n_bits = 17; break;
case 0xff80f0c0: code = 0x5f21; n_bits = 17; break;
case 0xff509080: code = 0x5f41; n_bits = 17; break;
case 0xff904030: code = 0x5f81; n_bits = 17; break;
case 0xffe0a0d0: code = 0x5fa1; n_bits = 17; break;
case 0xfff02050: code = 0x5fc1; n_bits = 17; break;
case 0xff002070: code = 0x6001; n_bits = 17; break;
case 0xff1030f0: code = 0x6009; n_bits = 17; break;
case 0xff003080: code = 0x6021; n_bits = 17; break;
case 0xff70f000: code = 0x6041; n_bits = 17; break;
case 0xffc0f080: code = 0x6081; n_bits = 17; break;
case 0xff50c0d0: code = 0x6089; n_bits = 17; break;
case 0xff501000: code = 0x60a1; n_bits = 17; break;
case 0xff205090: code = 0x60c1; n_bits = 17; break;
case 0xffd09030: code = 0x6101; n_bits = 17; break;
case 0xff60d0c0: code = 0x6109; n_bits = 17; break;
case 0xffa010b0: code = 0x6121; n_bits = 17; break;
case 0xffa07020: code = 0x6141; n_bits = 17; break;
case 0xffc06050: code = 0x6181; n_bits = 17; break;
case 0xff607050: code = 0x61a1; n_bits = 17; break;
case 0xff108060: code = 0x61c1; n_bits = 17; break;
case 0xff40e0d0: code = 0x6201; n_bits = 17; break;
case 0xff20d020: code = 0x6209; n_bits = 17; break;
case 0xffb0c0f0: code = 0x6221; n_bits = 17; break;
case 0xfff05020: code = 0x6241; n_bits = 17; break;
case 0xfff02020: code = 0x6281; n_bits = 17; break;
case 0xff40c010: code = 0x62a1; n_bits = 17; break;
case 0xff90f040: code = 0x62c1; n_bits = 17; break;
case 0xff700010: code = 0x6301; n_bits = 17; break;
case 0xfff0a0e0: code = 0x6309; n_bits = 17; break;
case 0xffa06000: code = 0x6321; n_bits = 17; break;
case 0xff10f010: code = 0x6341; n_bits = 17; break;
case 0xffc0b030: code = 0x6381; n_bits = 17; break;
case 0xffd000c0: code = 0x63a1; n_bits = 17; break;
case 0xff4030d0: code = 0x63c1; n_bits = 17; break;
case 0xff10e020: code = 0x6401; n_bits = 17; break;
case 0xff7020d0: code = 0x6409; n_bits = 17; break;
case 0xffd0a010: code = 0x6421; n_bits = 17; break;
case 0xff400060: code = 0x6441; n_bits = 17; break;
case 0xff600050: code = 0x6481; n_bits = 17; break;
case 0xff90a070: code = 0x6489; n_bits = 17; break;
case 0xff508050: code = 0x64a1; n_bits = 17; break;
case 0xfff050f0: code = 0x64c1; n_bits = 17; break;
case 0xffb0f040: code = 0x6501; n_bits = 17; break;
case 0xffc08090: code = 0x6509; n_bits = 17; break;
case 0xfff070a0: code = 0x6521; n_bits = 17; break;
case 0xff404020: code = 0x6541; n_bits = 17; break;
case 0xff603010: code = 0x6581; n_bits = 17; break;
case 0xff502000: code = 0x65a1; n_bits = 17; break;
case 0xff605080: code = 0x65c1; n_bits = 17; break;
case 0xfff0a080: code = 0x6601; n_bits = 17; break;
case 0xffc0e060: code = 0x6609; n_bits = 17; break;
case 0xffa000b0: code = 0x6621; n_bits = 17; break;
case 0xff8020e0: code = 0x6641; n_bits = 17; break;
case 0xff20c070: code = 0x6681; n_bits = 17; break;
case 0xff3080b0: code = 0x66a1; n_bits = 17; break;
case 0xffc03060: code = 0x66c1; n_bits = 17; break;
case 0xff10f030: code = 0x6701; n_bits = 17; break;
case 0xff6010e0: code = 0x6709; n_bits = 17; break;
case 0xffc02050: code = 0x6721; n_bits = 17; break;
case 0xff009040: code = 0x6741; n_bits = 17; break;
case 0xffa000f0: code = 0x6781; n_bits = 17; break;
case 0xff2000e0: code = 0x67a1; n_bits = 17; break;
case 0xff40f0b0: code = 0x67c1; n_bits = 17; break;
case 0xffb080f0: code = 0x6801; n_bits = 17; break;
case 0xff907030: code = 0x6809; n_bits = 17; break;
case 0xff10a010: code = 0x6821; n_bits = 17; break;
case 0xff00d090: code = 0x6841; n_bits = 17; break;
case 0xfff020a0: code = 0x6881; n_bits = 17; break;
case 0xff60e0e0: code = 0x6889; n_bits = 17; break;
case 0xff2030b0: code = 0x68a1; n_bits = 17; break;
case 0xffc070b0: code = 0x68c1; n_bits = 17; break;
case 0xffd08060: code = 0x6901; n_bits = 17; break;
case 0xffc0b000: code = 0x6909; n_bits = 17; break;
case 0xff609090: code = 0x6921; n_bits = 17; break;
case 0xff60a0a0: code = 0x6941; n_bits = 17; break;
case 0xff6000c0: code = 0x6981; n_bits = 17; break;
case 0xffe0b020: code = 0x69a1; n_bits = 17; break;
case 0xffb03030: code = 0x69c1; n_bits = 17; break;
case 0xffa00060: code = 0x6a01; n_bits = 17; break;
case 0xff7040e0: code = 0x6a09; n_bits = 17; break;
case 0xff209060: code = 0x6a21; n_bits = 17; break;
case 0xff8030b0: code = 0x6a41; n_bits = 17; break;
case 0xff60d050: code = 0x6a81; n_bits = 17; break;
case 0xff2000d0: code = 0x6aa1; n_bits = 17; break;
case 0xff00a0e0: code = 0x6ac1; n_bits = 17; break;
case 0xff007030: code = 0x6b01; n_bits = 17; break;
case 0xff9030d0: code = 0x6b09; n_bits = 17; break;
case 0xff808070: code = 0x6b21; n_bits = 17; break;
case 0xff408010: code = 0x6b41; n_bits = 17; break;
case 0xffb06000: code = 0x6b81; n_bits = 17; break;
case 0xff40a0c0: code = 0x6ba1; n_bits = 17; break;
case 0xff5000a0: code = 0x6bc1; n_bits = 17; break;
case 0xffe09080: code = 0x6c01; n_bits = 17; break;
case 0xffd0c020: code = 0x6c09; n_bits = 17; break;
case 0xffb0a080: code = 0x6c21; n_bits = 17; break;
case 0xffa060b0: code = 0x6c41; n_bits = 17; break;
case 0xff50a0d0: code = 0x6c81; n_bits = 17; break;
case 0xffc00030: code = 0x6c89; n_bits = 17; break;
case 0xff2010f0: code = 0x6ca1; n_bits = 17; break;
case 0xffc0f000: code = 0x6cc1; n_bits = 17; break;
case 0xff208080: code = 0x6d01; n_bits = 17; break;
case 0xff0050c0: code = 0x6d09; n_bits = 17; break;
case 0xff001020: code = 0x6d21; n_bits = 17; break;
case 0xff20b010: code = 0x6d41; n_bits = 17; break;
case 0xffa02030: code = 0x6d81; n_bits = 17; break;
case 0xffa040b0: code = 0x6da1; n_bits = 17; break;
case 0xffe030e0: code = 0x6dc1; n_bits = 17; break;
case 0xffe08040: code = 0x6e01; n_bits = 17; break;
case 0xff806010: code = 0x6e09; n_bits = 17; break;
case 0xff108090: code = 0x6e21; n_bits = 17; break;
case 0xff5030c0: code = 0x6e41; n_bits = 17; break;
case 0xff602080: code = 0x6e81; n_bits = 17; break;
case 0xff10d0f0: code = 0x6ea1; n_bits = 17; break;
case 0xffb06080: code = 0x6ec1; n_bits = 17; break;
case 0xff50e050: code = 0x6f01; n_bits = 17; break;
case 0xffc070c0: code = 0x6f09; n_bits = 17; break;
case 0xff80d0e0: code = 0x6f21; n_bits = 17; break;
case 0xff60e020: code = 0x6f41; n_bits = 17; break;
case 0xffb0d070: code = 0x6f81; n_bits = 17; break;
case 0xff209000: code = 0x6fa1; n_bits = 17; break;
case 0xff404060: code = 0x6fc1; n_bits = 17; break;
case 0xff80a010: code = 0x7001; n_bits = 17; break;
case 0xff203080: code = 0x7009; n_bits = 17; break;
case 0xfff0a090: code = 0x7021; n_bits = 17; break;
case 0xffd0a090: code = 0x7041; n_bits = 17; break;
case 0xff101000: code = 0x7081; n_bits = 17; break;
case 0xff80f000: code = 0x7089; n_bits = 17; break;
case 0xff10c090: code = 0x70a1; n_bits = 17; break;
case 0xff30d070: code = 0x70c1; n_bits = 17; break;
case 0xff9010d0: code = 0x7101; n_bits = 17; break;
case 0xff80a0e0: code = 0x7109; n_bits = 17; break;
case 0xff607080: code = 0x7121; n_bits = 17; break;
case 0xffe0f0a0: code = 0x7141; n_bits = 17; break;
case 0xff3010d0: code = 0x7181; n_bits = 17; break;
case 0xff2060b0: code = 0x71a1; n_bits = 17; break;
case 0xffd020e0: code = 0x71c1; n_bits = 17; break;
case 0xff3080e0: code = 0x7201; n_bits = 17; break;
case 0xff0000f0: code = 0x7209; n_bits = 17; break;
case 0xffe02000: code = 0x7221; n_bits = 17; break;
case 0xff50d030: code = 0x7241; n_bits = 17; break;
case 0xffe09040: code = 0x7281; n_bits = 17; break;
case 0xffe020a0: code = 0x72a1; n_bits = 17; break;
case 0xffb09000: code = 0x72c1; n_bits = 17; break;
case 0xff302090: code = 0x7301; n_bits = 17; break;
case 0xff600040: code = 0x7309; n_bits = 17; break;
case 0xff201000: code = 0x7321; n_bits = 17; break;
case 0xffe08090: code = 0x7341; n_bits = 17; break;
case 0xff30b0d0: code = 0x7381; n_bits = 17; break;
case 0xff9020c0: code = 0x73a1; n_bits = 17; break;
case 0xff2050f0: code = 0x73c1; n_bits = 17; break;
case 0xff804010: code = 0x7401; n_bits = 17; break;
case 0xff905090: code = 0x7409; n_bits = 17; break;
case 0xff9020b0: code = 0x7421; n_bits = 17; break;
case 0xff5030f0: code = 0x7441; n_bits = 17; break;
case 0xff10e0d0: code = 0x7481; n_bits = 17; break;
case 0xffa01090: code = 0x7489; n_bits = 17; break;
case 0xff1010c0: code = 0x74a1; n_bits = 17; break;
case 0xff3020a0: code = 0x74c1; n_bits = 17; break;
case 0xffa0d080: code = 0x7501; n_bits = 17; break;
case 0xff70e0a0: code = 0x7509; n_bits = 17; break;
case 0xfff090a0: code = 0x7521; n_bits = 17; break;
case 0xffc030d0: code = 0x7541; n_bits = 17; break;
case 0xfff06010: code = 0x7581; n_bits = 17; break;
case 0xff706000: code = 0x75a1; n_bits = 17; break;
case 0xff40a0d0: code = 0x75c1; n_bits = 17; break;
case 0xff0090f0: code = 0x7601; n_bits = 17; break;
case 0xff1010f0: code = 0x7609; n_bits = 17; break;
case 0xff6040a0: code = 0x7621; n_bits = 17; break;
case 0xff707090: code = 0x7641; n_bits = 17; break;
case 0xff006040: code = 0x7681; n_bits = 17; break;
case 0xffd06090: code = 0x76a1; n_bits = 17; break;
case 0xff207010: code = 0x76c1; n_bits = 17; break;
case 0xffc09040: code = 0x7701; n_bits = 17; break;
case 0xff703050: code = 0x7709; n_bits = 17; break;
case 0xfff06080: code = 0x7721; n_bits = 17; break;
case 0xff4000a0: code = 0x7741; n_bits = 17; break;
case 0xffa070b0: code = 0x7781; n_bits = 17; break;
case 0xfff06000: code = 0x77a1; n_bits = 17; break;
case 0xffc0f0f0: code = 0x77c1; n_bits = 17; break;
case 0xff409030: code = 0x7801; n_bits = 17; break;
case 0xffb06060: code = 0x7809; n_bits = 17; break;
case 0xfff090c0: code = 0x7821; n_bits = 17; break;
case 0xff10b080: code = 0x7841; n_bits = 17; break;
case 0xfff07000: code = 0x7881; n_bits = 17; break;
case 0xffc010f0: code = 0x7889; n_bits = 17; break;
case 0xff1000d0: code = 0x78a1; n_bits = 17; break;
case 0xff703080: code = 0x78c1; n_bits = 17; break;
case 0xfff06050: code = 0x7901; n_bits = 17; break;
case 0xff8030a0: code = 0x7909; n_bits = 17; break;
case 0xff8000c0: code = 0x7921; n_bits = 17; break;
case 0xff409020: code = 0x7941; n_bits = 17; break;
case 0xff606070: code = 0x7981; n_bits = 17; break;
case 0xff2050e0: code = 0x79a1; n_bits = 17; break;
case 0xff80f080: code = 0x79c1; n_bits = 17; break;
case 0xff60b0f0: code = 0x7a01; n_bits = 17; break;
case 0xff20e0c0: code = 0x7a09; n_bits = 17; break;
case 0xff90b080: code = 0x7a21; n_bits = 17; break;
case 0xffe0d040: code = 0x7a41; n_bits = 17; break;
case 0xff10c040: code = 0x7a81; n_bits = 17; break;
case 0xff1050b0: code = 0x7aa1; n_bits = 17; break;
case 0xffe050a0: code = 0x7ac1; n_bits = 17; break;
case 0xff20f000: code = 0x7b01; n_bits = 17; break;
case 0xff50a0c0: code = 0x7b09; n_bits = 17; break;
case 0xff005010: code = 0x7b21; n_bits = 17; break;
case 0xffd06040: code = 0x7b41; n_bits = 17; break;
case 0xffe08050: code = 0x7b81; n_bits = 17; break;
case 0xff5010e0: code = 0x7ba1; n_bits = 17; break;
case 0xff70e020: code = 0x7bc1; n_bits = 17; break;
case 0xff10c080: code = 0x7c01; n_bits = 17; break;
case 0xfff0a010: code = 0x7c09; n_bits = 17; break;
case 0xffe05050: code = 0x7c21; n_bits = 17; break;
case 0xff9090c0: code = 0x7c41; n_bits = 17; break;
case 0xff104000: code = 0x7c81; n_bits = 17; break;
case 0xffa0c0a0: code = 0x7c89; n_bits = 17; break;
case 0xff904010: code = 0x7ca1; n_bits = 17; break;
case 0xff607040: code = 0x7cc1; n_bits = 17; break;
case 0xff20e0d0: code = 0x7d01; n_bits = 17; break;
case 0xff707040: code = 0x7d09; n_bits = 17; break;
case 0xff4030a0: code = 0x7d21; n_bits = 17; break;
case 0xff80f0d0: code = 0x7d41; n_bits = 17; break;
case 0xfff0b040: code = 0x7d81; n_bits = 17; break;
case 0xff50d000: code = 0x7da1; n_bits = 17; break;
case 0xffc04030: code = 0x7dc1; n_bits = 17; break;
case 0xff6020b0: code = 0x7e01; n_bits = 17; break;
case 0xffe0b080: code = 0x7e09; n_bits = 17; break;
case 0xffe00060: code = 0x7e21; n_bits = 17; break;
case 0xffd0c010: code = 0x7e41; n_bits = 17; break;
case 0xfff00060: code = 0x7e81; n_bits = 17; break;
case 0xffe00020: code = 0x7ea1; n_bits = 17; break;
case 0xff808030: code = 0x7ec1; n_bits = 17; break;
case 0xffe05070: code = 0x7f01; n_bits = 17; break;
case 0xffe0c030: code = 0x7f09; n_bits = 17; break;
case 0xffb06030: code = 0x7f21; n_bits = 17; break;
case 0xffb0e0f0: code = 0x7f41; n_bits = 17; break;
case 0xff705070: code = 0x7f81; n_bits = 17; break;
case 0xff604060: code = 0x7fa1; n_bits = 17; break;
case 0xff60c0d0: code = 0x7fc1; n_bits = 17; break;
case 0xff6080b0: code = 0x8001; n_bits = 17; break;
case 0xff4050a0: code = 0x8009; n_bits = 17; break;
case 0xff10a0f0: code = 0x8021; n_bits = 17; break;
case 0xff803050: code = 0x8041; n_bits = 17; break;
case 0xff600030: code = 0x8081; n_bits = 17; break;
case 0xffb09010: code = 0x8089; n_bits = 17; break;
case 0xff30e0b0: code = 0x80a1; n_bits = 17; break;
case 0xffd030d0: code = 0x80c1; n_bits = 17; break;
case 0xffe000b0: code = 0x8101; n_bits = 17; break;
case 0xffa04000: code = 0x8109; n_bits = 17; break;
case 0xff70f020: code = 0x8121; n_bits = 17; break;
case 0xff500060: code = 0x8141; n_bits = 17; break;
case 0xffb020e0: code = 0x8181; n_bits = 17; break;
case 0xff605000: code = 0x81a1; n_bits = 17; break;
case 0xff00f050: code = 0x81c1; n_bits = 17; break;
case 0xffe080b0: code = 0x8201; n_bits = 17; break;
case 0xff506060: code = 0x8209; n_bits = 17; break;
case 0xff002060: code = 0x8221; n_bits = 17; break;
case 0xff20b090: code = 0x8241; n_bits = 17; break;
case 0xffe00030: code = 0x8281; n_bits = 17; break;
case 0xff702010: code = 0x82a1; n_bits = 17; break;
case 0xff109060: code = 0x82c1; n_bits = 17; break;
case 0xff40a030: code = 0x8301; n_bits = 17; break;
case 0xff10b0d0: code = 0x8309; n_bits = 17; break;
case 0xffe0e020: code = 0x8321; n_bits = 17; break;
case 0xffe0c040: code = 0x8341; n_bits = 17; break;
case 0xff30b070: code = 0x8381; n_bits = 17; break;
case 0xff90d000: code = 0x83a1; n_bits = 17; break;
case 0xff20a050: code = 0x83c1; n_bits = 17; break;
case 0xffa01060: code = 0x8401; n_bits = 17; break;
case 0xff40c0f0: code = 0x8409; n_bits = 17; break;
case 0xffb02040: code = 0x8421; n_bits = 17; break;
case 0xff40a040: code = 0x8441; n_bits = 17; break;
case 0xff30b010: code = 0x8481; n_bits = 17; break;
case 0xff60b080: code = 0x8489; n_bits = 17; break;
case 0xffc08000: code = 0x84a1; n_bits = 17; break;
case 0xffb0c060: code = 0x84c1; n_bits = 17; break;
case 0xff506070: code = 0x8501; n_bits = 17; break;
case 0xff00d030: code = 0x8509; n_bits = 17; break;
case 0xffa060a0: code = 0x8521; n_bits = 17; break;
case 0xff6090d0: code = 0x8541; n_bits = 17; break;
case 0xff6000b0: code = 0x8579; n_bits = 17; break;
case 0xff900050: code = 0x8581; n_bits = 17; break;
case 0xff0060c0: code = 0x85a1; n_bits = 17; break;
case 0xffd040a0: code = 0x85c1; n_bits = 17; break;
case 0xff805010: code = 0x8601; n_bits = 17; break;
case 0xff5040b0: code = 0x8609; n_bits = 17; break;
case 0xff80b060: code = 0x8621; n_bits = 17; break;
case 0xffc040d0: code = 0x8641; n_bits = 17; break;
case 0xff402020: code = 0x8681; n_bits = 17; break;
case 0xff609010: code = 0x86a1; n_bits = 17; break;
case 0xffd050a0: code = 0x86c1; n_bits = 17; break;
case 0xffd0c070: code = 0x8701; n_bits = 17; break;
case 0xffe040e0: code = 0x8709; n_bits = 17; break;
case 0xff00e020: code = 0x8721; n_bits = 17; break;
case 0xffe000c0: code = 0x8741; n_bits = 17; break;
case 0xff002050: code = 0x8781; n_bits = 17; break;
case 0xff3080c0: code = 0x87a1; n_bits = 17; break;
case 0xfff0d0f0: code = 0x87c1; n_bits = 17; break;
case 0xffc0d030: code = 0x8801; n_bits = 17; break;
case 0xffe09010: code = 0x8809; n_bits = 17; break;
case 0xff009030: code = 0x8821; n_bits = 17; break;
case 0xff30d0a0: code = 0x8841; n_bits = 17; break;
case 0xff107060: code = 0x8881; n_bits = 17; break;
case 0xffa0d0e0: code = 0x8889; n_bits = 17; break;
case 0xffb00050: code = 0x88a1; n_bits = 17; break;
case 0xff10a040: code = 0x88c1; n_bits = 17; break;
case 0xff20a0e0: code = 0x8901; n_bits = 17; break;
case 0xff4060f0: code = 0x8909; n_bits = 17; break;
case 0xff305030: code = 0x8921; n_bits = 17; break;
case 0xff40a0e0: code = 0x8941; n_bits = 17; break;
case 0xffc0f060: code = 0x8981; n_bits = 17; break;
case 0xff405030: code = 0x89a1; n_bits = 17; break;
case 0xff10e010: code = 0x89c1; n_bits = 17; break;
case 0xffe0b000: code = 0x8a01; n_bits = 17; break;
case 0xffb05090: code = 0x8a09; n_bits = 17; break;
case 0xff20d080: code = 0x8a21; n_bits = 17; break;
case 0xff0070d0: code = 0x8a41; n_bits = 17; break;
case 0xffa0b0c0: code = 0x8a81; n_bits = 17; break;
case 0xffb00060: code = 0x8aa1; n_bits = 17; break;
case 0xff8070a0: code = 0x8ac1; n_bits = 17; break;
case 0xffa01010: code = 0x8b01; n_bits = 17; break;
case 0xff7040f0: code = 0x8b09; n_bits = 17; break;
case 0xffa070a0: code = 0x8b21; n_bits = 17; break;
case 0xff001030: code = 0x8b41; n_bits = 17; break;
case 0xfff020c0: code = 0x8b81; n_bits = 17; break;
case 0xff70f0a0: code = 0x8ba1; n_bits = 17; break;
case 0xffb0f000: code = 0x8bc1; n_bits = 17; break;
case 0xff7010a0: code = 0x8c01; n_bits = 17; break;
case 0xffb01040: code = 0x8c09; n_bits = 17; break;
case 0xff20f040: code = 0x8c21; n_bits = 17; break;
case 0xff20c030: code = 0x8c41; n_bits = 17; break;
case 0xfff0c000: code = 0x8c81; n_bits = 17; break;
case 0xffb0f0b0: code = 0x8c89; n_bits = 17; break;
case 0xff506090: code = 0x8ca1; n_bits = 17; break;
case 0xff40a0f0: code = 0x8cc1; n_bits = 17; break;
case 0xff70a060: code = 0x8d01; n_bits = 17; break;
case 0xff50f0e0: code = 0x8d09; n_bits = 17; break;
case 0xff1060a0: code = 0x8d21; n_bits = 17; break;
case 0xff6070e0: code = 0x8d41; n_bits = 17; break;
case 0xff200000: code = 0x8d81; n_bits = 17; break;
case 0xfff0a030: code = 0x8da1; n_bits = 17; break;
case 0xff60a000: code = 0x8dc1; n_bits = 17; break;
case 0xffd0a0f0: code = 0x8e01; n_bits = 17; break;
case 0xff007080: code = 0x8e09; n_bits = 17; break;
case 0xff103060: code = 0x8e21; n_bits = 17; break;
case 0xff20e030: code = 0x8e41; n_bits = 17; break;
case 0xff30c0a0: code = 0x8e81; n_bits = 17; break;
case 0xff60f0d0: code = 0x8ea1; n_bits = 17; break;
case 0xff807070: code = 0x8ec1; n_bits = 17; break;
case 0xffd0b0a0: code = 0x8f01; n_bits = 17; break;
case 0xff80f060: code = 0x8f09; n_bits = 17; break;
case 0xffe0a020: code = 0x8f21; n_bits = 17; break;
case 0xff30f030: code = 0x8f41; n_bits = 17; break;
case 0xff90a030: code = 0x8f81; n_bits = 17; break;
case 0xff3010e0: code = 0x8fa1; n_bits = 17; break;
case 0xffd04060: code = 0x8fc1; n_bits = 17; break;
case 0xffa0f040: code = 0x9001; n_bits = 17; break;
case 0xff70d0a0: code = 0x9009; n_bits = 17; break;
case 0xff10a0a0: code = 0x9021; n_bits = 17; break;
case 0xffd00090: code = 0x9041; n_bits = 17; break;
case 0xffe04060: code = 0x9081; n_bits = 17; break;
case 0xff105050: code = 0x9089; n_bits = 17; break;
case 0xff302040: code = 0x90a1; n_bits = 17; break;
case 0xffb0e000: code = 0x90c1; n_bits = 17; break;
case 0xff80a000: code = 0x9101; n_bits = 17; break;
case 0xffa090a0: code = 0x9109; n_bits = 17; break;
case 0xffd03070: code = 0x9121; n_bits = 17; break;
case 0xff1020e0: code = 0x9141; n_bits = 17; break;
case 0xff0020e0: code = 0x9181; n_bits = 17; break;
case 0xff907050: code = 0x91a1; n_bits = 17; break;
case 0xfff030c0: code = 0x91c1; n_bits = 17; break;
case 0xff908000: code = 0x9201; n_bits = 17; break;
case 0xff9080e0: code = 0x9209; n_bits = 17; break;
case 0xff705080: code = 0x9221; n_bits = 17; break;
case 0xffc02000: code = 0x9241; n_bits = 17; break;
case 0xff00f070: code = 0x9281; n_bits = 17; break;
case 0xff2010d0: code = 0x92a1; n_bits = 17; break;
case 0xff00d050: code = 0x92c1; n_bits = 17; break;
case 0xff803020: code = 0x9301; n_bits = 17; break;
case 0xffd020b0: code = 0x9309; n_bits = 17; break;
case 0xff201080: code = 0x9321; n_bits = 17; break;
case 0xff900080: code = 0x9341; n_bits = 17; break;
case 0xffd050b0: code = 0x9381; n_bits = 17; break;
case 0xff301080: code = 0x93a1; n_bits = 17; break;
case 0xffd070c0: code = 0x93c1; n_bits = 17; break;
case 0xff303000: code = 0x9401; n_bits = 17; break;
case 0xff300020: code = 0x9409; n_bits = 17; break;
case 0xffe04090: code = 0x9421; n_bits = 17; break;
case 0xffc04090: code = 0x9441; n_bits = 17; break;
case 0xff609060: code = 0x9481; n_bits = 17; break;
case 0xffe090c0: code = 0x9489; n_bits = 17; break;
case 0xff8060b0: code = 0x94a1; n_bits = 17; break;
case 0xff80c0c0: code = 0x94c1; n_bits = 17; break;
case 0xff00e070: code = 0x9501; n_bits = 17; break;
case 0xff90a060: code = 0x9509; n_bits = 17; break;
case 0xff5020b0: code = 0x9521; n_bits = 17; break;
case 0xff801010: code = 0x9541; n_bits = 17; break;
case 0xff90d0a0: code = 0x9581; n_bits = 17; break;
case 0xffd0c040: code = 0x95a1; n_bits = 17; break;
case 0xffb0b070: code = 0x95c1; n_bits = 17; break;
case 0xff60a020: code = 0x9601; n_bits = 17; break;
case 0xff90b040: code = 0x9609; n_bits = 17; break;
case 0xff008000: code = 0x9621; n_bits = 17; break;
case 0xffc09070: code = 0x9641; n_bits = 17; break;
case 0xff00d0b0: code = 0x9681; n_bits = 17; break;
case 0xff805080: code = 0x96a1; n_bits = 17; break;
case 0xffa040a0: code = 0x96c1; n_bits = 17; break;
case 0xffd090c0: code = 0x9701; n_bits = 17; break;
case 0xff1070e0: code = 0x9709; n_bits = 17; break;
case 0xff50b090: code = 0x9721; n_bits = 17; break;
case 0xff80d070: code = 0x9741; n_bits = 17; break;
case 0xff505010: code = 0x9781; n_bits = 17; break;
case 0xff9000b0: code = 0x97a1; n_bits = 17; break;
case 0xff606080: code = 0x97c1; n_bits = 17; break;
case 0xff600090: code = 0x9801; n_bits = 17; break;
case 0xff209030: code = 0x9809; n_bits = 17; break;
case 0xff100090: code = 0x9821; n_bits = 17; break;
case 0xff10c050: code = 0x9841; n_bits = 17; break;
case 0xff3040c0: code = 0x9881; n_bits = 17; break;
case 0xff4020c0: code = 0x9889; n_bits = 17; break;
case 0xff70d090: code = 0x98a1; n_bits = 17; break;
case 0xff904090: code = 0x98c1; n_bits = 17; break;
case 0xffe020e0: code = 0x9901; n_bits = 17; break;
case 0xffd03080: code = 0x9909; n_bits = 17; break;
case 0xff203000: code = 0x9921; n_bits = 17; break;
case 0xff307080: code = 0x9941; n_bits = 17; break;
case 0xff60b020: code = 0x9981; n_bits = 17; break;
case 0xff9020d0: code = 0x99a1; n_bits = 17; break;
case 0xff205030: code = 0x99c1; n_bits = 17; break;
case 0xff205040: code = 0x9a01; n_bits = 17; break;
case 0xfff08070: code = 0x9a09; n_bits = 17; break;
case 0xffa0d090: code = 0x9a21; n_bits = 17; break;
case 0xff10c0f0: code = 0x9a41; n_bits = 17; break;
case 0xff405080: code = 0x9a81; n_bits = 17; break;
case 0xffc030f0: code = 0x9aa1; n_bits = 17; break;
case 0xffc070a0: code = 0x9ac1; n_bits = 17; break;
case 0xff100070: code = 0x9b01; n_bits = 17; break;
case 0xff004050: code = 0x9b09; n_bits = 17; break;
case 0xff506020: code = 0x9b21; n_bits = 17; break;
case 0xff209050: code = 0x9b41; n_bits = 17; break;
case 0xffd01060: code = 0x9b81; n_bits = 17; break;
case 0xff3040d0: code = 0x9ba1; n_bits = 17; break;
case 0xffb010e0: code = 0x9bc1; n_bits = 17; break;
case 0xff00e000: code = 0x9c01; n_bits = 17; break;
case 0xffa09000: code = 0x9c09; n_bits = 17; break;
case 0xff004010: code = 0x9c21; n_bits = 17; break;
case 0xff308080: code = 0x9c41; n_bits = 17; break;
case 0xffb040d0: code = 0x9c81; n_bits = 17; break;
case 0xff509090: code = 0x9c89; n_bits = 17; break;
case 0xffc06060: code = 0x9ca1; n_bits = 17; break;
case 0xff40b0e0: code = 0x9cc1; n_bits = 17; break;
case 0xff404080: code = 0x9d01; n_bits = 17; break;
case 0xff101040: code = 0x9d09; n_bits = 17; break;
case 0xff70a090: code = 0x9d21; n_bits = 17; break;
case 0xffb00010: code = 0x9d41; n_bits = 17; break;
case 0xffc0a0c0: code = 0x9d81; n_bits = 17; break;
case 0xff7030d0: code = 0x9da1; n_bits = 17; break;
case 0xff70a030: code = 0x9dc1; n_bits = 17; break;
case 0xff00d0f0: code = 0x9e01; n_bits = 17; break;
case 0xff60a080: code = 0x9e09; n_bits = 17; break;
case 0xffc060b0: code = 0x9e21; n_bits = 17; break;
case 0xffc0e020: code = 0x9e41; n_bits = 17; break;
case 0xff300030: code = 0x9e81; n_bits = 17; break;
case 0xff8010d0: code = 0x9ea1; n_bits = 17; break;
case 0xff30b060: code = 0x9ec1; n_bits = 17; break;
case 0xffa06020: code = 0x9f01; n_bits = 17; break;
case 0xffa0d0d0: code = 0x9f09; n_bits = 17; break;
case 0xff70c030: code = 0x9f21; n_bits = 17; break;
case 0xff40f060: code = 0x9f41; n_bits = 17; break;
case 0xff80e020: code = 0x9f81; n_bits = 17; break;
case 0xfff05030: code = 0x9fa1; n_bits = 17; break;
case 0xff2050a0: code = 0x9fc1; n_bits = 17; break;
case 0xff00d070: code = 0xa001; n_bits = 17; break;
case 0xffd0f000: code = 0xa009; n_bits = 17; break;
case 0xff30e0e0: code = 0xa021; n_bits = 17; break;
case 0xff3070f0: code = 0xa041; n_bits = 17; break;
case 0xffe0e040: code = 0xa081; n_bits = 17; break;
case 0xff20f0c0: code = 0xa089; n_bits = 17; break;
case 0xff405090: code = 0xa0a1; n_bits = 17; break;
case 0xff8010f0: code = 0xa0c1; n_bits = 17; break;
case 0xff7030e0: code = 0xa101; n_bits = 17; break;
case 0xffd030e0: code = 0xa109; n_bits = 17; break;
case 0xffb0e090: code = 0xa121; n_bits = 17; break;
case 0xffb03070: code = 0xa141; n_bits = 17; break;
case 0xffd0a0b0: code = 0xa181; n_bits = 17; break;
case 0xffd0e0d0: code = 0xa1a1; n_bits = 17; break;
case 0xff205070: code = 0xa1c1; n_bits = 17; break;
case 0xfff050b0: code = 0xa201; n_bits = 17; break;
case 0xffd01070: code = 0xa209; n_bits = 17; break;
case 0xff40f0a0: code = 0xa221; n_bits = 17; break;
case 0xff604010: code = 0xa241; n_bits = 17; break;
case 0xffa0e030: code = 0xa281; n_bits = 17; break;
case 0xff403000: code = 0xa2a1; n_bits = 17; break;
case 0xffa090c0: code = 0xa2c1; n_bits = 17; break;
case 0xff20b070: code = 0xa301; n_bits = 17; break;
case 0xff40d010: code = 0xa309; n_bits = 17; break;
case 0xffb0a060: code = 0xa321; n_bits = 17; break;
case 0xff806000: code = 0xa341; n_bits = 17; break;
case 0xffa0f0e0: code = 0xa381; n_bits = 17; break;
case 0xffd0f0f0: code = 0xa3a1; n_bits = 17; break;
case 0xff60b0a0: code = 0xa3c1; n_bits = 17; break;
case 0xff00b0b0: code = 0xa401; n_bits = 17; break;
case 0xff90a0a0: code = 0xa409; n_bits = 17; break;
case 0xff707020: code = 0xa421; n_bits = 17; break;
case 0xffb0a010: code = 0xa441; n_bits = 17; break;
case 0xfff06030: code = 0xa481; n_bits = 17; break;
case 0xffd0f040: code = 0xa489; n_bits = 17; break;
case 0xff6020d0: code = 0xa4a1; n_bits = 17; break;
case 0xff20b080: code = 0xa4c1; n_bits = 17; break;
case 0xff20d030: code = 0xa501; n_bits = 17; break;
case 0xff303010: code = 0xa509; n_bits = 17; break;
case 0xffc02090: code = 0xa521; n_bits = 17; break;
case 0xff808050: code = 0xa541; n_bits = 17; break;
case 0xff4010f0: code = 0xa579; n_bits = 17; break;
case 0xff10e070: code = 0xa581; n_bits = 17; break;
case 0xff80d060: code = 0xa5a1; n_bits = 17; break;
case 0xff9060a0: code = 0xa5c1; n_bits = 17; break;
case 0xff10c070: code = 0xa601; n_bits = 17; break;
case 0xff10c0c0: code = 0xa609; n_bits = 17; break;
case 0xffd0f0e0: code = 0xa621; n_bits = 17; break;
case 0xff1040a0: code = 0xa641; n_bits = 17; break;
case 0xfff02000: code = 0xa681; n_bits = 17; break;
case 0xff40a050: code = 0xa6a1; n_bits = 17; break;
case 0xff70e0c0: code = 0xa6c1; n_bits = 17; break;
case 0xffa09050: code = 0xa701; n_bits = 17; break;
case 0xffc0f010: code = 0xa709; n_bits = 17; break;
case 0xffd060b0: code = 0xa721; n_bits = 17; break;
case 0xff208000: code = 0xa741; n_bits = 17; break;
case 0xff20f0b0: code = 0xa781; n_bits = 17; break;
case 0xffe02090: code = 0xa7a1; n_bits = 17; break;
case 0xfff040c0: code = 0xa7c1; n_bits = 17; break;
case 0xffc03050: code = 0xa801; n_bits = 17; break;
case 0xff502070: code = 0xa809; n_bits = 17; break;
case 0xffd010f0: code = 0xa821; n_bits = 17; break;
case 0xff90e0e0: code = 0xa841; n_bits = 17; break;
case 0xff00e0e0: code = 0xa881; n_bits = 17; break;
case 0xff606060: code = 0xa889; n_bits = 17; break;
case 0xff40b080: code = 0xa8a1; n_bits = 17; break;
case 0xff7060e0: code = 0xa8c1; n_bits = 17; break;
case 0xffe0c0c0: code = 0xa901; n_bits = 17; break;
case 0xffd0f060: code = 0xa909; n_bits = 17; break;
case 0xffc08020: code = 0xa921; n_bits = 17; break;
case 0xff705000: code = 0xa941; n_bits = 17; break;
case 0xffd02060: code = 0xa981; n_bits = 17; break;
case 0xff80c000: code = 0xa9a1; n_bits = 17; break;
case 0xff70f050: code = 0xa9c1; n_bits = 17; break;
case 0xffb040c0: code = 0xaa01; n_bits = 17; break;
case 0xff8080a0: code = 0xaa09; n_bits = 17; break;
case 0xff907090: code = 0xaa21; n_bits = 17; break;
case 0xff505080: code = 0xaa41; n_bits = 17; break;
case 0xffb0f030: code = 0xaa81; n_bits = 17; break;
case 0xff80b030: code = 0xaaa1; n_bits = 17; break;
case 0xffc0c090: code = 0xaac1; n_bits = 17; break;
case 0xff10b090: code = 0xab01; n_bits = 17; break;
case 0xffe060b0: code = 0xab09; n_bits = 17; break;
case 0xff304090: code = 0xab21; n_bits = 17; break;
case 0xff502010: code = 0xab41; n_bits = 17; break;
case 0xffc0a060: code = 0xab81; n_bits = 17; break;
case 0xff4010b0: code = 0xaba1; n_bits = 17; break;
case 0xff708070: code = 0xabc1; n_bits = 17; break;
case 0xff307040: code = 0xac01; n_bits = 17; break;
case 0xff80c0b0: code = 0xac09; n_bits = 17; break;
case 0xff50e030: code = 0xac21; n_bits = 17; break;
case 0xffa0e0e0: code = 0xac41; n_bits = 17; break;
case 0xfff05060: code = 0xac81; n_bits = 17; break;
case 0xffc0a0a0: code = 0xac89; n_bits = 17; break;
case 0xff4090c0: code = 0xaca1; n_bits = 17; break;
case 0xff80f0f0: code = 0xacc1; n_bits = 17; break;
case 0xffe0a030: code = 0xad01; n_bits = 17; break;
case 0xffb0e010: code = 0xad09; n_bits = 17; break;
case 0xffc0f090: code = 0xad21; n_bits = 17; break;
case 0xffe03030: code = 0xad41; n_bits = 17; break;
case 0xff209010: code = 0xad81; n_bits = 17; break;
case 0xfff00050: code = 0xada1; n_bits = 17; break;
case 0xffc05000: code = 0xadc1; n_bits = 17; break;
case 0xffc0b0d0: code = 0xae01; n_bits = 17; break;
case 0xfff070e0: code = 0xae09; n_bits = 17; break;
case 0xff7080d0: code = 0xae21; n_bits = 17; break;
case 0xffb0e020: code = 0xae41; n_bits = 17; break;
case 0xff308090: code = 0xae81; n_bits = 17; break;
case 0xff208030: code = 0xaea1; n_bits = 17; break;
case 0xffc090d0: code = 0xaec1; n_bits = 17; break;
case 0xffd010c0: code = 0xaf01; n_bits = 17; break;
case 0xff80a020: code = 0xaf09; n_bits = 17; break;
case 0xffe00040: code = 0xaf21; n_bits = 17; break;
case 0xffe04050: code = 0xaf41; n_bits = 17; break;
case 0xffd0c030: code = 0xaf81; n_bits = 17; break;
case 0xff9020e0: code = 0xafa1; n_bits = 17; break;
case 0xff9060e0: code = 0xafc1; n_bits = 17; break;
case 0xffb090c0: code = 0xb001; n_bits = 17; break;
case 0xffb060e0: code = 0xb009; n_bits = 17; break;
case 0xffb02070: code = 0xb021; n_bits = 17; break;
case 0xff50c060: code = 0xb041; n_bits = 17; break;
case 0xff902080: code = 0xb081; n_bits = 17; break;
case 0xff30f0f0: code = 0xb089; n_bits = 17; break;
case 0xff80c020: code = 0xb0a1; n_bits = 17; break;
case 0xff304060: code = 0xb0c1; n_bits = 17; break;
case 0xff605090: code = 0xb101; n_bits = 17; break;
case 0xff300060: code = 0xb109; n_bits = 17; break;
case 0xff801090: code = 0xb121; n_bits = 17; break;
case 0xffe090a0: code = 0xb141; n_bits = 17; break;
case 0xff5090a0: code = 0xb181; n_bits = 17; break;
case 0xfff060d0: code = 0xb1a1; n_bits = 17; break;
case 0xff407050: code = 0xb1c1; n_bits = 17; break;
case 0xff205050: code = 0xb201; n_bits = 17; break;
case 0xff00f0b0: code = 0xb209; n_bits = 17; break;
case 0xffa0e060: code = 0xb221; n_bits = 17; break;
case 0xffd0f070: code = 0xb241; n_bits = 17; break;
case 0xffa08060: code = 0xb281; n_bits = 17; break;
case 0xffc0f0e0: code = 0xb2a1; n_bits = 17; break;
case 0xffc0d060: code = 0xb2c1; n_bits = 17; break;
case 0xffe08000: code = 0xb301; n_bits = 17; break;
case 0xffe0f090: code = 0xb309; n_bits = 17; break;
case 0xff0020c0: code = 0xb321; n_bits = 17; break;
case 0xff105060: code = 0xb341; n_bits = 17; break;
case 0xff40b0a0: code = 0xb381; n_bits = 17; break;
case 0xffc05070: code = 0xb3a1; n_bits = 17; break;
case 0xffe0b030: code = 0xb3c1; n_bits = 17; break;
case 0xffe00070: code = 0xb401; n_bits = 17; break;
case 0xffa090f0: code = 0xb409; n_bits = 17; break;
case 0xff40e000: code = 0xb421; n_bits = 17; break;
case 0xff20a0b0: code = 0xb441; n_bits = 17; break;
case 0xff40a0a0: code = 0xb481; n_bits = 17; break;
case 0xff50c0f0: code = 0xb489; n_bits = 17; break;
case 0xfff00070: code = 0xb4a1; n_bits = 17; break;
case 0xff90c0d0: code = 0xb4c1; n_bits = 17; break;
case 0xff304050: code = 0xb501; n_bits = 17; break;
case 0xffe08020: code = 0xb509; n_bits = 17; break;
case 0xff004080: code = 0xb521; n_bits = 17; break;
case 0xff90c040: code = 0xb541; n_bits = 17; break;
case 0xff9000c0: code = 0xb581; n_bits = 17; break;
case 0xff00a000: code = 0xb5a1; n_bits = 17; break;
case 0xff40e0a0: code = 0xb5c1; n_bits = 17; break;
case 0xff40b060: code = 0xb601; n_bits = 17; break;
case 0xff901060: code = 0xb609; n_bits = 17; break;
case 0xfff0d0d0: code = 0xb621; n_bits = 17; break;
case 0xff80b0f0: code = 0xb641; n_bits = 17; break;
case 0xff50b060: code = 0xb681; n_bits = 17; break;
case 0xffe0a0f0: code = 0xb6a1; n_bits = 17; break;
case 0xff10b0b0: code = 0xb6c1; n_bits = 17; break;
case 0xff3000d0: code = 0xb701; n_bits = 17; break;
case 0xff30f0b0: code = 0xb709; n_bits = 17; break;
case 0xff0090b0: code = 0xb721; n_bits = 17; break;
case 0xfff0f070: code = 0xb741; n_bits = 17; break;
case 0xff306050: code = 0xb781; n_bits = 17; break;
case 0xff1050d0: code = 0xb7a1; n_bits = 17; break;
case 0xffd0e040: code = 0xb7c1; n_bits = 17; break;
case 0xff5030b0: code = 0xb801; n_bits = 17; break;
case 0xfff0c0a0: code = 0xb809; n_bits = 17; break;
case 0xff607010: code = 0xb821; n_bits = 17; break;
case 0xffe04020: code = 0xb841; n_bits = 17; break;
case 0xffd070a0: code = 0xb881; n_bits = 17; break;
case 0xff10a0e0: code = 0xb889; n_bits = 17; break;
case 0xffe0d010: code = 0xb8a1; n_bits = 17; break;
case 0xff10b050: code = 0xb8c1; n_bits = 17; break;
case 0xff00b060: code = 0xb901; n_bits = 17; break;
case 0xfff0d050: code = 0xb909; n_bits = 17; break;
case 0xffd000d0: code = 0xb921; n_bits = 17; break;
case 0xff30d000: code = 0xb941; n_bits = 17; break;
case 0xff80e040: code = 0xb981; n_bits = 17; break;
case 0xff90f090: code = 0xb9a1; n_bits = 17; break;
case 0xffe0f060: code = 0xb9c1; n_bits = 17; break;
case 0xff604070: code = 0xba01; n_bits = 17; break;
case 0xff50e090: code = 0xba09; n_bits = 17; break;
case 0xffa030b0: code = 0xba21; n_bits = 17; break;
case 0xffd0e0a0: code = 0xba41; n_bits = 17; break;
case 0xff7070d0: code = 0xba81; n_bits = 17; break;
case 0xff102050: code = 0xbaa1; n_bits = 17; break;
case 0xff303030: code = 0xbac1; n_bits = 17; break;
case 0xff7010b0: code = 0xbb01; n_bits = 17; break;
case 0xfff09020: code = 0xbb09; n_bits = 17; break;
case 0xfff0c020: code = 0xbb21; n_bits = 17; break;
case 0xff707000: code = 0xbb41; n_bits = 17; break;
case 0xfff0c0b0: code = 0xbb81; n_bits = 17; break;
case 0xffc040a0: code = 0xbba1; n_bits = 17; break;
case 0xff0080a0: code = 0xbbc1; n_bits = 17; break;
case 0xff60f040: code = 0xbc01; n_bits = 17; break;
case 0xff0080b0: code = 0xbc09; n_bits = 17; break;
case 0xffa0f030: code = 0xbc21; n_bits = 17; break;
case 0xff806030: code = 0xbc41; n_bits = 17; break;
case 0xff0090c0: code = 0xbc81; n_bits = 17; break;
case 0xff007090: code = 0xbc89; n_bits = 17; break;
case 0xffc0f070: code = 0xbca1; n_bits = 17; break;
case 0xff703040: code = 0xbcc1; n_bits = 17; break;
case 0xffc070f0: code = 0xbd01; n_bits = 17; break;
case 0xffa01020: code = 0xbd09; n_bits = 17; break;
case 0xff300010: code = 0xbd21; n_bits = 17; break;
case 0xffa0e0c0: code = 0xbd41; n_bits = 17; break;
case 0xffa0d040: code = 0xbd81; n_bits = 17; break;
case 0xff50c0b0: code = 0xbda1; n_bits = 17; break;
case 0xffd08090: code = 0xbdc1; n_bits = 17; break;
case 0xffd0a000: code = 0xbe01; n_bits = 17; break;
case 0xff909070: code = 0xbe09; n_bits = 17; break;
case 0xff20c080: code = 0xbe21; n_bits = 17; break;
case 0xff7060c0: code = 0xbe41; n_bits = 17; break;
case 0xffc07020: code = 0xbe81; n_bits = 17; break;
case 0xff2090a0: code = 0xbea1; n_bits = 17; break;
case 0xffc09030: code = 0xbec1; n_bits = 17; break;
case 0xffb02010: code = 0xbf01; n_bits = 17; break;
case 0xffb03060: code = 0xbf09; n_bits = 17; break;
case 0xffd0d070: code = 0xbf21; n_bits = 17; break;
case 0xffd0d0b0: code = 0xbf41; n_bits = 17; break;
case 0xff800070: code = 0xbf81; n_bits = 17; break;
case 0xffc02010: code = 0xbfa1; n_bits = 17; break;
case 0xff1010e0: code = 0xbfc1; n_bits = 17; break;
case 0xffb09040: code = 0xc001; n_bits = 17; break;
case 0xffc0a0f0: code = 0xc009; n_bits = 17; break;
case 0xff70c070: code = 0xc021; n_bits = 17; break;
case 0xffe0f0c0: code = 0xc041; n_bits = 17; break;
case 0xffc00020: code = 0xc081; n_bits = 17; break;
case 0xff90a050: code = 0xc089; n_bits = 17; break;
case 0xff003050: code = 0xc0a1; n_bits = 17; break;
case 0xff40c000: code = 0xc0c1; n_bits = 17; break;
case 0xffb01060: code = 0xc101; n_bits = 17; break;
case 0xff805040: code = 0xc109; n_bits = 17; break;
case 0xff802060: code = 0xc121; n_bits = 17; break;
case 0xff2040e0: code = 0xc141; n_bits = 17; break;
case 0xfff09070: code = 0xc181; n_bits = 17; break;
case 0xff8030e0: code = 0xc1a1; n_bits = 17; break;
case 0xfff0d010: code = 0xc1c1; n_bits = 17; break;
case 0xff1020a0: code = 0xc201; n_bits = 17; break;
case 0xff102070: code = 0xc209; n_bits = 17; break;
case 0xff30c010: code = 0xc221; n_bits = 17; break;
case 0xffa000e0: code = 0xc241; n_bits = 17; break;
case 0xff709070: code = 0xc281; n_bits = 17; break;
case 0xff8080e0: code = 0xc2a1; n_bits = 17; break;
case 0xff30e000: code = 0xc2c1; n_bits = 17; break;
case 0xffe09060: code = 0xc301; n_bits = 17; break;
case 0xff500010: code = 0xc309; n_bits = 17; break;
case 0xff608010: code = 0xc321; n_bits = 17; break;
case 0xffb09020: code = 0xc341; n_bits = 17; break;
case 0xffc020d0: code = 0xc381; n_bits = 17; break;
case 0xff708010: code = 0xc3a1; n_bits = 17; break;
case 0xff00a060: code = 0xc3c1; n_bits = 17; break;
case 0xffe01040: code = 0xc401; n_bits = 17; break;
case 0xff007010: code = 0xc409; n_bits = 17; break;
case 0xffb030b0: code = 0xc421; n_bits = 17; break;
case 0xff1070f0: code = 0xc441; n_bits = 17; break;
case 0xff9020a0: code = 0xc481; n_bits = 17; break;
case 0xff4030b0: code = 0xc489; n_bits = 17; break;
case 0xff707010: code = 0xc4a1; n_bits = 17; break;
case 0xffd01040: code = 0xc4c1; n_bits = 17; break;
case 0xff407010: code = 0xc501; n_bits = 17; break;
case 0xff605060: code = 0xc509; n_bits = 17; break;
case 0xfff00090: code = 0xc521; n_bits = 17; break;
case 0xff706070: code = 0xc541; n_bits = 17; break;
case 0xffc060c0: code = 0xc579; n_bits = 17; break;
case 0xff30d030: code = 0xc581; n_bits = 17; break;
case 0xff7060f0: code = 0xc5a1; n_bits = 17; break;
case 0xff4080f0: code = 0xc5c1; n_bits = 17; break;
case 0xff100010: code = 0xc601; n_bits = 17; break;
case 0xff40a020: code = 0xc609; n_bits = 17; break;
case 0xff509010: code = 0xc621; n_bits = 17; break;
case 0xffc00060: code = 0xc641; n_bits = 17; break;
case 0xffd0d020: code = 0xc681; n_bits = 17; break;
case 0xff70c0a0: code = 0xc6a1; n_bits = 17; break;
case 0xff205080: code = 0xc6c1; n_bits = 17; break;
case 0xffb0d0b0: code = 0xc701; n_bits = 17; break;
case 0xff706020: code = 0xc709; n_bits = 17; break;
case 0xfff05070: code = 0xc721; n_bits = 17; break;
case 0xff804060: code = 0xc741; n_bits = 17; break;
case 0xff906070: code = 0xc781; n_bits = 17; break;
case 0xff806040: code = 0xc7a1; n_bits = 17; break;
case 0xff10b070: code = 0xc7c1; n_bits = 17; break;
case 0xff70e0e0: code = 0xc801; n_bits = 17; break;
case 0xffc0a050: code = 0xc809; n_bits = 17; break;
case 0xffb03010: code = 0xc821; n_bits = 17; break;
case 0xff8080b0: code = 0xc841; n_bits = 17; break;
case 0xff8050d0: code = 0xc881; n_bits = 17; break;
case 0xffd010b0: code = 0xc889; n_bits = 17; break;
case 0xff007020: code = 0xc8a1; n_bits = 17; break;
case 0xff403080: code = 0xc8c1; n_bits = 17; break;
case 0xff908050: code = 0xc901; n_bits = 17; break;
case 0xffe070e0: code = 0xc909; n_bits = 17; break;
case 0xff2000f0: code = 0xc921; n_bits = 17; break;
case 0xff400070: code = 0xc941; n_bits = 17; break;
case 0xff008090: code = 0xc981; n_bits = 17; break;
case 0xffe08060: code = 0xc9a1; n_bits = 17; break;
case 0xffe06050: code = 0xc9c1; n_bits = 17; break;
case 0xff00f0a0: code = 0xca01; n_bits = 17; break;
case 0xff003060: code = 0xca09; n_bits = 17; break;
case 0xff900020: code = 0xca21; n_bits = 17; break;
case 0xffc01030: code = 0xca41; n_bits = 17; break;
case 0xffc000a0: code = 0xca81; n_bits = 17; break;
case 0xffe0c090: code = 0xcaa1; n_bits = 17; break;
case 0xfff0f0b0: code = 0xcac1; n_bits = 17; break;
case 0xff101030: code = 0xcb01; n_bits = 17; break;
case 0xff307000: code = 0xcb09; n_bits = 17; break;
case 0xff6070b0: code = 0xcb21; n_bits = 17; break;
case 0xff70a0d0: code = 0xcb41; n_bits = 17; break;
case 0xff90d0c0: code = 0xcb81; n_bits = 17; break;
case 0xffc0b0c0: code = 0xcba1; n_bits = 17; break;
case 0xff107030: code = 0xcbc1; n_bits = 17; break;
case 0xffd06000: code = 0xcc01; n_bits = 17; break;
case 0xffd0e030: code = 0xcc09; n_bits = 17; break;
case 0xfff08000: code = 0xcc21; n_bits = 17; break;
case 0xffc0d0a0: code = 0xcc41; n_bits = 17; break;
case 0xff60f010: code = 0xcc81; n_bits = 17; break;
case 0xffe080f0: code = 0xcc89; n_bits = 17; break;
case 0xff50e000: code = 0xcca1; n_bits = 17; break;
case 0xff202030: code = 0xccc1; n_bits = 17; break;
case 0xfff0e090: code = 0xcd01; n_bits = 17; break;
case 0xff204080: code = 0xcd09; n_bits = 17; break;
case 0xfff070f0: code = 0xcd21; n_bits = 17; break;
case 0xfff07090: code = 0xcd41; n_bits = 17; break;
case 0xff9090d0: code = 0xcd81; n_bits = 17; break;
case 0xff204020: code = 0xcda1; n_bits = 17; break;
case 0xfff020f0: code = 0xcdc1; n_bits = 17; break;
case 0xff70a050: code = 0xce01; n_bits = 17; break;
case 0xffa0e0d0: code = 0xce09; n_bits = 17; break;
case 0xff108030: code = 0xce21; n_bits = 17; break;
case 0xff20d0e0: code = 0xce41; n_bits = 17; break;
case 0xffa06030: code = 0xce81; n_bits = 17; break;
case 0xff50a080: code = 0xcea1; n_bits = 17; break;
case 0xff20f0d0: code = 0xcec1; n_bits = 17; break;
case 0xffb0c0e0: code = 0xcf01; n_bits = 17; break;
case 0xff201070: code = 0xcf09; n_bits = 17; break;
case 0xffc0d040: code = 0xcf21; n_bits = 17; break;
case 0xff20e040: code = 0xcf41; n_bits = 17; break;
case 0xff508000: code = 0xcf81; n_bits = 17; break;
case 0xffe010c0: code = 0xcfa1; n_bits = 17; break;
case 0xff60c030: code = 0xcfc1; n_bits = 17; break;
case 0xffc03090: code = 0xd001; n_bits = 17; break;
case 0xff60d0b0: code = 0xd009; n_bits = 17; break;
case 0xff905020: code = 0xd021; n_bits = 17; break;
case 0xff6060e0: code = 0xd041; n_bits = 17; break;
case 0xffc00000: code = 0xd081; n_bits = 17; break;
case 0xff203050: code = 0xd089; n_bits = 17; break;
case 0xffe030a0: code = 0xd0a1; n_bits = 17; break;
case 0xff50c030: code = 0xd0c1; n_bits = 17; break;
case 0xfff0e030: code = 0xd101; n_bits = 17; break;
case 0xff0010d0: code = 0xd109; n_bits = 17; break;
case 0xff60c0b0: code = 0xd121; n_bits = 17; break;
case 0xff005030: code = 0xd141; n_bits = 17; break;
case 0xff500090: code = 0xd181; n_bits = 17; break;
case 0xff2000c0: code = 0xd1a1; n_bits = 17; break;
case 0xff7090a0: code = 0xd1c1; n_bits = 17; break;
case 0xff5070a0: code = 0xd201; n_bits = 17; break;
case 0xff6000d0: code = 0xd209; n_bits = 17; break;
case 0xffc0d020: code = 0xd221; n_bits = 17; break;
case 0xff807090: code = 0xd241; n_bits = 17; break;
case 0xff201040: code = 0xd281; n_bits = 17; break;
case 0xffc0e0a0: code = 0xd2a1; n_bits = 17; break;
case 0xff605010: code = 0xd2c1; n_bits = 17; break;
case 0xff6040e0: code = 0xd301; n_bits = 17; break;
case 0xff902090: code = 0xd309; n_bits = 17; break;
case 0xff9010c0: code = 0xd321; n_bits = 17; break;
case 0xff900010: code = 0xd341; n_bits = 17; break;
case 0xff60e0f0: code = 0xd381; n_bits = 17; break;
case 0xffe04030: code = 0xd3a1; n_bits = 17; break;
case 0xff7020c0: code = 0xd3c1; n_bits = 17; break;
case 0xff301090: code = 0xd401; n_bits = 17; break;
case 0xffc080b0: code = 0xd409; n_bits = 17; break;
case 0xffc050d0: code = 0xd421; n_bits = 17; break;
case 0xff50d0d0: code = 0xd441; n_bits = 17; break;
case 0xff9090f0: code = 0xd481; n_bits = 17; break;
case 0xffc01000: code = 0xd489; n_bits = 17; break;
case 0xff1090e0: code = 0xd4a1; n_bits = 17; break;
case 0xffb0b090: code = 0xd4c1; n_bits = 17; break;
case 0xff6060a0: code = 0xd501; n_bits = 17; break;
case 0xff80b020: code = 0xd509; n_bits = 17; break;
case 0xff20c050: code = 0xd521; n_bits = 17; break;
case 0xffc05040: code = 0xd541; n_bits = 17; break;
case 0xffc030e0: code = 0xd581; n_bits = 17; break;
case 0xffb070f0: code = 0xd5a1; n_bits = 17; break;
case 0xffd00050: code = 0xd5c1; n_bits = 17; break;
case 0xffa080a0: code = 0xd601; n_bits = 17; break;
case 0xff10b0e0: code = 0xd609; n_bits = 17; break;
case 0xff904000: code = 0xd621; n_bits = 17; break;
case 0xfff020b0: code = 0xd641; n_bits = 17; break;
case 0xff801060: code = 0xd681; n_bits = 17; break;
case 0xff700030: code = 0xd6a1; n_bits = 17; break;
case 0xff60e090: code = 0xd6c1; n_bits = 17; break;
case 0xff204050: code = 0xd701; n_bits = 17; break;
case 0xffa06070: code = 0xd709; n_bits = 17; break;
case 0xff905040: code = 0xd721; n_bits = 17; break;
case 0xff7020f0: code = 0xd741; n_bits = 17; break;
case 0xff4000d0: code = 0xd781; n_bits = 17; break;
case 0xff7010f0: code = 0xd7a1; n_bits = 17; break;
case 0xff1000a0: code = 0xd7c1; n_bits = 17; break;
case 0xff00a0b0: code = 0xd801; n_bits = 17; break;
case 0xff2060d0: code = 0xd809; n_bits = 17; break;
case 0xff009080: code = 0xd821; n_bits = 17; break;
case 0xffc0f040: code = 0xd841; n_bits = 17; break;
case 0xff20a040: code = 0xd881; n_bits = 17; break;
case 0xff9040c0: code = 0xd889; n_bits = 17; break;
case 0xff006050: code = 0xd8a1; n_bits = 17; break;
case 0xff7050d0: code = 0xd8c1; n_bits = 17; break;
case 0xff702020: code = 0xd901; n_bits = 17; break;
case 0xff709020: code = 0xd909; n_bits = 17; break;
case 0xff405060: code = 0xd921; n_bits = 17; break;
case 0xffb0b0b0: code = 0xd941; n_bits = 17; break;
case 0xffa0f0d0: code = 0xd981; n_bits = 17; break;
case 0xffb0e050: code = 0xd9a1; n_bits = 17; break;
case 0xffa0b060: code = 0xd9c1; n_bits = 17; break;
case 0xfff01070: code = 0xda01; n_bits = 17; break;
case 0xff202060: code = 0xda09; n_bits = 17; break;
case 0xff201010: code = 0xda21; n_bits = 17; break;
case 0xff90b090: code = 0xda41; n_bits = 17; break;
case 0xff209020: code = 0xda81; n_bits = 17; break;
case 0xff4040a0: code = 0xdaa1; n_bits = 17; break;
case 0xffa030f0: code = 0xdac1; n_bits = 17; break;
case 0xffd040f0: code = 0xdb01; n_bits = 17; break;
case 0xff5010b0: code = 0xdb09; n_bits = 17; break;
case 0xff4010e0: code = 0xdb21; n_bits = 17; break;
case 0xff801080: code = 0xdb41; n_bits = 17; break;
case 0xff8010b0: code = 0xdb81; n_bits = 17; break;
case 0xff802030: code = 0xdba1; n_bits = 17; break;
case 0xff907080: code = 0xdbc1; n_bits = 17; break;
case 0xffe0d020: code = 0xdc01; n_bits = 17; break;
case 0xff906060: code = 0xdc09; n_bits = 17; break;
case 0xff1070a0: code = 0xdc21; n_bits = 17; break;
case 0xff902050: code = 0xdc41; n_bits = 17; break;
case 0xffe0a010: code = 0xdc81; n_bits = 17; break;
case 0xffe0f000: code = 0xdc89; n_bits = 17; break;
case 0xff5000e0: code = 0xdca1; n_bits = 17; break;
case 0xff00f010: code = 0xdcc1; n_bits = 17; break;
case 0xff709090: code = 0xdd01; n_bits = 17; break;
case 0xffa090d0: code = 0xdd09; n_bits = 17; break;
case 0xff70d0b0: code = 0xdd21; n_bits = 17; break;
case 0xff901050: code = 0xdd41; n_bits = 17; break;
case 0xffc0c000: code = 0xdd81; n_bits = 17; break;
case 0xff400010: code = 0xdda1; n_bits = 17; break;
case 0xff102090: code = 0xddc1; n_bits = 17; break;
case 0xff50f0d0: code = 0xde01; n_bits = 17; break;
case 0xff40b0c0: code = 0xde09; n_bits = 17; break;
case 0xffb0f060: code = 0xde21; n_bits = 17; break;
case 0xff905080: code = 0xde41; n_bits = 17; break;
case 0xff901070: code = 0xde81; n_bits = 17; break;
case 0xff507020: code = 0xdea1; n_bits = 17; break;
case 0xff3090f0: code = 0xdec1; n_bits = 17; break;
case 0xff804030: code = 0xdf01; n_bits = 17; break;
case 0xff2090e0: code = 0xdf09; n_bits = 17; break;
case 0xffd0e0f0: code = 0xdf21; n_bits = 17; break;
case 0xff603070: code = 0xdf41; n_bits = 17; break;
case 0xffa070c0: code = 0xdf81; n_bits = 17; break;
case 0xffd06070: code = 0xdfa1; n_bits = 17; break;
case 0xff20e0b0: code = 0xdfc1; n_bits = 17; break;
case 0xffc0e000: code = 0xe001; n_bits = 17; break;
case 0xff601000: code = 0xe009; n_bits = 17; break;
case 0xffd0c0a0: code = 0xe021; n_bits = 17; break;
case 0xfff00040: code = 0xe041; n_bits = 17; break;
case 0xffb0b020: code = 0xe081; n_bits = 17; break;
case 0xff900070: code = 0xe089; n_bits = 17; break;
case 0xff901030: code = 0xe0a1; n_bits = 17; break;
case 0xffa0d0c0: code = 0xe0c1; n_bits = 17; break;
case 0xffb0a070: code = 0xe101; n_bits = 17; break;
case 0xff106010: code = 0xe109; n_bits = 17; break;
case 0xfff02030: code = 0xe121; n_bits = 17; break;
case 0xff40c0b0: code = 0xe141; n_bits = 17; break;
case 0xff107020: code = 0xe181; n_bits = 17; break;
case 0xff70a0e0: code = 0xe1a1; n_bits = 17; break;
case 0xff904080: code = 0xe1c1; n_bits = 17; break;
case 0xff70f070: code = 0xe201; n_bits = 17; break;
case 0xff60a0b0: code = 0xe209; n_bits = 17; break;
case 0xff503070: code = 0xe221; n_bits = 17; break;
case 0xffe0a0c0: code = 0xe241; n_bits = 17; break;
case 0xff207090: code = 0xe281; n_bits = 17; break;
case 0xff50f0a0: code = 0xe2a1; n_bits = 17; break;
case 0xffe0c000: code = 0xe2c1; n_bits = 17; break;
case 0xffb060a0: code = 0xe301; n_bits = 17; break;
case 0xff20a010: code = 0xe309; n_bits = 17; break;
case 0xff90b0a0: code = 0xe321; n_bits = 17; break;
case 0xff70d0c0: code = 0xe341; n_bits = 17; break;
case 0xfff04070: code = 0xe381; n_bits = 17; break;
case 0xffd09050: code = 0xe3a1; n_bits = 17; break;
case 0xffd0b010: code = 0xe3c1; n_bits = 17; break;
case 0xfff0e0b0: code = 0xe401; n_bits = 17; break;
case 0xfff0b0d0: code = 0xe409; n_bits = 17; break;
case 0xff0010c0: code = 0xe421; n_bits = 17; break;
case 0xffe03050: code = 0xe441; n_bits = 17; break;
case 0xff80f070: code = 0xe481; n_bits = 17; break;
case 0xffe050e0: code = 0xe489; n_bits = 17; break;
case 0xff60b0e0: code = 0xe4a1; n_bits = 17; break;
case 0xff9080f0: code = 0xe4c1; n_bits = 17; break;
case 0xff10e0f0: code = 0xe501; n_bits = 17; break;
case 0xff30c020: code = 0xe509; n_bits = 17; break;
case 0xff5060b0: code = 0xe521; n_bits = 17; break;
case 0xff40d030: code = 0xe541; n_bits = 17; break;
case 0xffd08020: code = 0xe581; n_bits = 17; break;
case 0xff60e0a0: code = 0xe5a1; n_bits = 17; break;
case 0xff10f0b0: code = 0xe5c1; n_bits = 17; break;
case 0xff2080b0: code = 0xe601; n_bits = 17; break;
case 0xffb0a000: code = 0xe609; n_bits = 17; break;
case 0xff40d0e0: code = 0xe621; n_bits = 17; break;
case 0xffe08030: code = 0xe641; n_bits = 17; break;
case 0xffd03040: code = 0xe681; n_bits = 17; break;
case 0xffe010e0: code = 0xe6a1; n_bits = 17; break;
case 0xff40c070: code = 0xe6c1; n_bits = 17; break;
case 0xffb0f0e0: code = 0xe701; n_bits = 17; break;
case 0xffe0d0f0: code = 0xe709; n_bits = 17; break;
case 0xff60f0f0: code = 0xe721; n_bits = 17; break;
case 0xfff04030: code = 0xe741; n_bits = 17; break;
case 0xff9010e0: code = 0xe781; n_bits = 17; break;
case 0xff70b0d0: code = 0xe7a1; n_bits = 17; break;
case 0xffc000f0: code = 0xe7c1; n_bits = 17; break;
case 0xffa04090: code = 0xe801; n_bits = 17; break;
case 0xff50b080: code = 0xe809; n_bits = 17; break;
case 0xff20d090: code = 0xe821; n_bits = 17; break;
case 0xff3060d0: code = 0xe841; n_bits = 17; break;
case 0xff50c090: code = 0xe881; n_bits = 17; break;
case 0xff303080: code = 0xe889; n_bits = 17; break;
case 0xff109030: code = 0xe8a1; n_bits = 17; break;
case 0xff100060: code = 0xe8c1; n_bits = 17; break;
case 0xffc04000: code = 0xe901; n_bits = 17; break;
case 0xff4060e0: code = 0xe909; n_bits = 17; break;
case 0xff604020: code = 0xe921; n_bits = 17; break;
case 0xff00e040: code = 0xe941; n_bits = 17; break;
case 0xff609020: code = 0xe981; n_bits = 17; break;
case 0xfff020e0: code = 0xe9a1; n_bits = 17; break;
case 0xff507080: code = 0xe9c1; n_bits = 17; break;
case 0xfff0b050: code = 0xea01; n_bits = 17; break;
case 0xff60c040: code = 0xea09; n_bits = 17; break;
case 0xffc0c050: code = 0xea21; n_bits = 17; break;
case 0xff203030: code = 0xea41; n_bits = 17; break;
case 0xff2060c0: code = 0xea81; n_bits = 17; break;
case 0xffa05010: code = 0xeaa1; n_bits = 17; break;
case 0xffa0c010: code = 0xeac1; n_bits = 17; break;
case 0xff507000: code = 0xeb01; n_bits = 17; break;
case 0xff20b0d0: code = 0xeb09; n_bits = 17; break;
case 0xffb0a0f0: code = 0xeb21; n_bits = 17; break;
case 0xffc03010: code = 0xeb41; n_bits = 17; break;
case 0xffa00070: code = 0xeb81; n_bits = 17; break;
case 0xffb07060: code = 0xeba1; n_bits = 17; break;
case 0xff406020: code = 0xebc1; n_bits = 17; break;
case 0xff000020: code = 0xec01; n_bits = 17; break;
case 0xffb0d060: code = 0xec09; n_bits = 17; break;
case 0xff4090f0: code = 0xec21; n_bits = 17; break;
case 0xff806020: code = 0xec41; n_bits = 17; break;
case 0xffc02040: code = 0xec81; n_bits = 17; break;
case 0xff60d0d0: code = 0xec89; n_bits = 17; break;
case 0xfff09080: code = 0xeca1; n_bits = 17; break;
case 0xfff08040: code = 0xecc1; n_bits = 17; break;
case 0xff70f0e0: code = 0xed01; n_bits = 17; break;
case 0xff90f050: code = 0xed09; n_bits = 17; break;
case 0xff00a030: code = 0xed21; n_bits = 17; break;
case 0xffc04070: code = 0xed41; n_bits = 17; break;
case 0xff3050c0: code = 0xed81; n_bits = 17; break;
case 0xff809090: code = 0xeda1; n_bits = 17; break;
case 0xffa0c080: code = 0xedc1; n_bits = 17; break;
case 0xff7040b0: code = 0xee01; n_bits = 17; break;
case 0xff70b0b0: code = 0xee09; n_bits = 17; break;
case 0xff4050b0: code = 0xee21; n_bits = 17; break;
case 0xff409040: code = 0xee41; n_bits = 17; break;
case 0xff90e0f0: code = 0xee81; n_bits = 17; break;
case 0xff000060: code = 0xeea1; n_bits = 17; break;
case 0xff6030c0: code = 0xeec1; n_bits = 17; break;
case 0xffd060e0: code = 0xef01; n_bits = 17; break;
case 0xffa0f080: code = 0xef09; n_bits = 17; break;
case 0xffc01080: code = 0xef21; n_bits = 17; break;
case 0xff907000: code = 0xef41; n_bits = 17; break;
case 0xffa09010: code = 0xef81; n_bits = 17; break;
case 0xff30e080: code = 0xefa1; n_bits = 17; break;
case 0xff30a080: code = 0xefc1; n_bits = 17; break;
case 0xff8060a0: code = 0xf001; n_bits = 17; break;
case 0xff20c090: code = 0xf009; n_bits = 17; break;
case 0xff9030b0: code = 0xf021; n_bits = 17; break;
case 0xffa01000: code = 0xf041; n_bits = 17; break;
case 0xff306020: code = 0xf081; n_bits = 17; break;
case 0xff004090: code = 0xf089; n_bits = 17; break;
case 0xff601030: code = 0xf0a1; n_bits = 17; break;
case 0xff802010: code = 0xf0c1; n_bits = 17; break;
case 0xff30f020: code = 0xf101; n_bits = 17; break;
case 0xff508090: code = 0xf109; n_bits = 17; break;
case 0xffd0a0e0: code = 0xf121; n_bits = 17; break;
case 0xff4010d0: code = 0xf141; n_bits = 17; break;
case 0xffa07050: code = 0xf181; n_bits = 17; break;
case 0xfff0f080: code = 0xf1a1; n_bits = 17; break;
case 0xffc00070: code = 0xf1c1; n_bits = 17; break;
case 0xff20e060: code = 0xf201; n_bits = 17; break;
case 0xfff09040: code = 0xf209; n_bits = 17; break;
case 0xffa04070: code = 0xf221; n_bits = 17; break;
case 0xff009060: code = 0xf241; n_bits = 17; break;
case 0xffc0a080: code = 0xf281; n_bits = 17; break;
case 0xffc030b0: code = 0xf2a1; n_bits = 17; break;
case 0xff405020: code = 0xf2c1; n_bits = 17; break;
case 0xff80c030: code = 0xf301; n_bits = 17; break;
case 0xff609050: code = 0xf309; n_bits = 17; break;
case 0xffb09090: code = 0xf321; n_bits = 17; break;
case 0xff109020: code = 0xf341; n_bits = 17; break;
case 0xff207070: code = 0xf381; n_bits = 17; break;
case 0xff90b0d0: code = 0xf3a1; n_bits = 17; break;
case 0xff00e060: code = 0xf3c1; n_bits = 17; break;
case 0xff7090b0: code = 0xf401; n_bits = 17; break;
case 0xfff03070: code = 0xf409; n_bits = 17; break;
case 0xff206030: code = 0xf421; n_bits = 17; break;
case 0xff90c060: code = 0xf441; n_bits = 17; break;
case 0xff00a070: code = 0xf481; n_bits = 17; break;
case 0xff207020: code = 0xf489; n_bits = 17; break;
case 0xff807040: code = 0xf4a1; n_bits = 17; break;
case 0xffb010b0: code = 0xf4c1; n_bits = 17; break;
case 0xffe01020: code = 0xf501; n_bits = 17; break;
case 0xff8030f0: code = 0xf509; n_bits = 17; break;
case 0xffa07060: code = 0xf521; n_bits = 17; break;
case 0xff902020: code = 0xf541; n_bits = 17; break;
case 0xffe0b0b0: code = 0xf581; n_bits = 17; break;
case 0xfff050c0: code = 0xf5a1; n_bits = 17; break;
case 0xff90c050: code = 0xf5c1; n_bits = 17; break;
case 0xffb0c010: code = 0xf601; n_bits = 17; break;
case 0xff1050a0: code = 0xf609; n_bits = 17; break;
case 0xff2070c0: code = 0xf621; n_bits = 17; break;
case 0xff40c0a0: code = 0xf641; n_bits = 17; break;
case 0xfff01030: code = 0xf681; n_bits = 17; break;
case 0xff501070: code = 0xf6a1; n_bits = 17; break;
case 0xff50c0a0: code = 0xf6c1; n_bits = 17; break;
case 0xffe050d0: code = 0xf701; n_bits = 17; break;
case 0xff6080f0: code = 0xf709; n_bits = 17; break;
case 0xfff0e080: code = 0xf721; n_bits = 17; break;
case 0xff6040d0: code = 0xf741; n_bits = 17; break;
case 0xff4090e0: code = 0xf781; n_bits = 17; break;
case 0xffe0b0a0: code = 0xf7a1; n_bits = 17; break;
case 0xfff090f0: code = 0xf7c1; n_bits = 17; break;
case 0xff0000d0: code = 0xf801; n_bits = 17; break;
case 0xff300050: code = 0xf809; n_bits = 17; break;
case 0xffe05060: code = 0xf821; n_bits = 17; break;
case 0xff600020: code = 0xf841; n_bits = 17; break;
case 0xff500020: code = 0xf881; n_bits = 17; break;
case 0xffe0f030: code = 0xf889; n_bits = 17; break;
case 0xff3030e0: code = 0xf8a1; n_bits = 17; break;
case 0xff60f0b0: code = 0xf8c1; n_bits = 17; break;
case 0xffe0b0f0: code = 0xf901; n_bits = 17; break;
case 0xffd0e090: code = 0xf909; n_bits = 17; break;
case 0xffe06010: code = 0xf921; n_bits = 17; break;
case 0xff808090: code = 0xf941; n_bits = 17; break;
case 0xff50d0f0: code = 0xf981; n_bits = 17; break;
case 0xff203010: code = 0xf9a1; n_bits = 17; break;
case 0xff701090: code = 0xf9c1; n_bits = 17; break;
case 0xff00f090: code = 0xfa01; n_bits = 17; break;
case 0xff30f0d0: code = 0xfa09; n_bits = 17; break;
case 0xff30c0f0: code = 0xfa21; n_bits = 17; break;
case 0xff606050: code = 0xfa41; n_bits = 17; break;
case 0xff4040b0: code = 0xfa81; n_bits = 17; break;
case 0xff10b060: code = 0xfaa1; n_bits = 17; break;
case 0xfff0e040: code = 0xfac1; n_bits = 17; break;
case 0xffa00040: code = 0xfb01; n_bits = 17; break;
case 0xff3020f0: code = 0xfb09; n_bits = 17; break;
case 0xff8050a0: code = 0xfb21; n_bits = 17; break;
case 0xffb07080: code = 0xfb41; n_bits = 17; break;
case 0xff2060a0: code = 0xfb81; n_bits = 17; break;
case 0xff901080: code = 0xfba1; n_bits = 17; break;
case 0xffc010c0: code = 0xfbc1; n_bits = 17; break;
case 0xffb0f070: code = 0xfc01; n_bits = 17; break;
case 0xff800060: code = 0xfc09; n_bits = 17; break;
case 0xff201020: code = 0xfc21; n_bits = 17; break;
case 0xff9090b0: code = 0xfc41; n_bits = 17; break;
case 0xff6010f0: code = 0xfc81; n_bits = 17; break;
case 0xff008080: code = 0xfc89; n_bits = 17; break;
case 0xff401060: code = 0xfca1; n_bits = 17; break;
case 0xffb05060: code = 0xfcc1; n_bits = 17; break;
case 0xff2070b0: code = 0xfd01; n_bits = 17; break;
case 0xffb0a0c0: code = 0xfd09; n_bits = 17; break;
case 0xff309020: code = 0xfd21; n_bits = 17; break;
case 0xff50a000: code = 0xfd41; n_bits = 17; break;
case 0xffe0d0c0: code = 0xfd81; n_bits = 17; break;
case 0xffe080e0: code = 0xfda1; n_bits = 17; break;
case 0xff3030a0: code = 0xfdc1; n_bits = 17; break;
case 0xff508030: code = 0xfe01; n_bits = 17; break;
case 0xff80f020: code = 0xfe09; n_bits = 17; break;
case 0xff80c040: code = 0xfe21; n_bits = 17; break;
case 0xff10a060: code = 0xfe41; n_bits = 17; break;
case 0xff608030: code = 0xfe81; n_bits = 17; break;
case 0xff80d0c0: code = 0xfea1; n_bits = 17; break;
case 0xffa0a070: code = 0xfec1; n_bits = 17; break;
case 0xff8080f0: code = 0xff01; n_bits = 17; break;
case 0xffe030c0: code = 0xff09; n_bits = 17; break;
case 0xffa02010: code = 0xff21; n_bits = 17; break;
case 0xffe0e030: code = 0xff41; n_bits = 17; break;
case 0xff204010: code = 0xff81; n_bits = 17; break;
case 0xff50b050: code = 0xffa1; n_bits = 17; break;
case 0xff00f0f0: code = 0xffc1; n_bits = 17; break;
case 0xff90a080: code = 0x10001; n_bits = 17; break;
case 0xff804090: code = 0x10009; n_bits = 17; break;
case 0xff40a010: code = 0x10021; n_bits = 17; break;
case 0xff70e080: code = 0x10041; n_bits = 17; break;
case 0xff60e080: code = 0x10081; n_bits = 17; break;
case 0xff00b0c0: code = 0x10089; n_bits = 17; break;
case 0xff3050a0: code = 0x100a1; n_bits = 17; break;
case 0xff906030: code = 0x100c1; n_bits = 17; break;
case 0xff60b0c0: code = 0x10101; n_bits = 17; break;
case 0xffb08060: code = 0x10109; n_bits = 17; break;
case 0xff0090a0: code = 0x10121; n_bits = 17; break;
case 0xfff0a0f0: code = 0x10141; n_bits = 17; break;
case 0xff70b0c0: code = 0x10181; n_bits = 17; break;
case 0xff006010: code = 0x101a1; n_bits = 17; break;
case 0xff7030f0: code = 0x101c1; n_bits = 17; break;
case 0xffa0b010: code = 0x10201; n_bits = 17; break;
case 0xffd0b050: code = 0x10209; n_bits = 17; break;
case 0xff60e060: code = 0x10221; n_bits = 17; break;
case 0xff605050: code = 0x10241; n_bits = 17; break;
case 0xff507070: code = 0x10281; n_bits = 17; break;
case 0xff90d020: code = 0x102a1; n_bits = 17; break;
case 0xffe03010: code = 0x102c1; n_bits = 17; break;
case 0xff401020: code = 0x10301; n_bits = 17; break;
case 0xff30d0c0: code = 0x10309; n_bits = 17; break;
case 0xff00c020: code = 0x10321; n_bits = 17; break;
case 0xff30b040: code = 0x10341; n_bits = 17; break;
case 0xff302060: code = 0x10381; n_bits = 17; break;
case 0xffe05000: code = 0x103a1; n_bits = 17; break;
case 0xff702050: code = 0x103c1; n_bits = 17; break;
case 0xffc0c060: code = 0x10401; n_bits = 17; break;
case 0xffb05020: code = 0x10409; n_bits = 17; break;
case 0xff408050: code = 0x10421; n_bits = 17; break;
case 0xff902040: code = 0x10441; n_bits = 17; break;
case 0xff60c0c0: code = 0x10481; n_bits = 17; break;
case 0xffb0c0a0: code = 0x10489; n_bits = 17; break;
case 0xff3020c0: code = 0x104a1; n_bits = 17; break;
case 0xff5040c0: code = 0x104c1; n_bits = 17; break;
case 0xffd07090: code = 0x10501; n_bits = 17; break;
case 0xffb0f0d0: code = 0x10509; n_bits = 17; break;
case 0xff204060: code = 0x10521; n_bits = 17; break;
case 0xffb010d0: code = 0x10541; n_bits = 17; break;
case 0xff70e000: code = 0x10579; n_bits = 17; break;
case 0xff60f080: code = 0x10581; n_bits = 17; break;
case 0xff3060a0: code = 0x105a1; n_bits = 17; break;
case 0xffd0d030: code = 0x105c1; n_bits = 17; break;
case 0xff302020: code = 0x10601; n_bits = 17; break;
case 0xff107010: code = 0x10609; n_bits = 17; break;
case 0xff208090: code = 0x10621; n_bits = 17; break;
case 0xff3050b0: code = 0x10641; n_bits = 17; break;
case 0xfff0b030: code = 0x10681; n_bits = 17; break;
case 0xffd070e0: code = 0x106a1; n_bits = 17; break;
case 0xff904070: code = 0x106c1; n_bits = 17; break;
case 0xff409010: code = 0x10701; n_bits = 17; break;
case 0xffd01080: code = 0x10709; n_bits = 17; break;
case 0xff701040: code = 0x10721; n_bits = 17; break;
case 0xff508040: code = 0x10741; n_bits = 17; break;
case 0xff508070: code = 0x10781; n_bits = 17; break;
case 0xff905010: code = 0x107a1; n_bits = 17; break;
case 0xff6090e0: code = 0x107c1; n_bits = 17; break;
case 0xff602040: code = 0x10801; n_bits = 17; break;
case 0xff701030: code = 0x10809; n_bits = 17; break;
case 0xffd0b0d0: code = 0x10821; n_bits = 17; break;
case 0xffa0a010: code = 0x10841; n_bits = 17; break;
case 0xffc0e0b0: code = 0x10881; n_bits = 17; break;
case 0xff70a010: code = 0x10889; n_bits = 17; break;
case 0xff30a040: code = 0x108a1; n_bits = 17; break;
case 0xff9050a0: code = 0x108c1; n_bits = 17; break;
case 0xff1060b0: code = 0x10901; n_bits = 17; break;
case 0xff40e010: code = 0x10909; n_bits = 17; break;
case 0xffd020f0: code = 0x10921; n_bits = 17; break;
case 0xffb0c080: code = 0x10941; n_bits = 17; break;
case 0xff30a0e0: code = 0x10981; n_bits = 17; break;
case 0xffe040c0: code = 0x109a1; n_bits = 17; break;
case 0xff10a020: code = 0x109c1; n_bits = 17; break;
case 0xff006090: code = 0x10a01; n_bits = 17; break;
case 0xff80c080: code = 0x10a09; n_bits = 17; break;
case 0xffb080e0: code = 0x10a21; n_bits = 17; break;
case 0xffe090f0: code = 0x10a41; n_bits = 17; break;
case 0xff30e060: code = 0x10a81; n_bits = 17; break;
case 0xff304070: code = 0x10aa1; n_bits = 17; break;
case 0xff002080: code = 0x10ac1; n_bits = 17; break;
case 0xff30b0a0: code = 0x10b01; n_bits = 17; break;
case 0xfff00010: code = 0x10b09; n_bits = 17; break;
case 0xffe020d0: code = 0x10b21; n_bits = 17; break;
case 0xff701050: code = 0x10b41; n_bits = 17; break;
case 0xff20c0e0: code = 0x10b81; n_bits = 17; break;
case 0xff8070f0: code = 0x10ba1; n_bits = 17; break;
case 0xff409080: code = 0x10bc1; n_bits = 17; break;
case 0xff408040: code = 0x10c01; n_bits = 17; break;
case 0xff107040: code = 0x10c09; n_bits = 17; break;
case 0xff107090: code = 0x10c21; n_bits = 17; break;
case 0xff30b0e0: code = 0x10c41; n_bits = 17; break;
case 0xff604030: code = 0x10c81; n_bits = 17; break;
case 0xffc0a010: code = 0x10c89; n_bits = 17; break;
case 0xff60a0f0: code = 0x10ca1; n_bits = 17; break;
case 0xff9020f0: code = 0x10cc1; n_bits = 17; break;
case 0xff105090: code = 0x10d01; n_bits = 17; break;
case 0xffa0a0a0: code = 0x10d09; n_bits = 17; break;
case 0xff6050c0: code = 0x10d21; n_bits = 17; break;
case 0xff703060: code = 0x10d41; n_bits = 17; break;
case 0xffd07050: code = 0x10d81; n_bits = 17; break;
case 0xffc02080: code = 0x10da1; n_bits = 17; break;
case 0xff704080: code = 0x10dc1; n_bits = 17; break;
case 0xff90d050: code = 0x10e01; n_bits = 17; break;
case 0xff302080: code = 0x10e09; n_bits = 17; break;
case 0xffc0a0b0: code = 0x10e21; n_bits = 17; break;
case 0xff2040d0: code = 0x10e41; n_bits = 17; break;
case 0xffd02070: code = 0x10e81; n_bits = 17; break;
case 0xffb070d0: code = 0x10ea1; n_bits = 17; break;
case 0xffa01040: code = 0x10ec1; n_bits = 17; break;
case 0xffe06000: code = 0x10f01; n_bits = 17; break;
case 0xff70f090: code = 0x10f09; n_bits = 17; break;
case 0xffe030d0: code = 0x10f21; n_bits = 17; break;
case 0xff500070: code = 0x10f41; n_bits = 17; break;
case 0xffc080c0: code = 0x10f81; n_bits = 17; break;
case 0xff504030: code = 0x10fa1; n_bits = 17; break;
case 0xff10e080: code = 0x10fc1; n_bits = 17; break;
case 0xfff07040: code = 0x11001; n_bits = 17; break;
case 0xffc0b020: code = 0x11009; n_bits = 17; break;
case 0xff501030: code = 0x11021; n_bits = 17; break;
case 0xff0050a0: code = 0x11041; n_bits = 17; break;
case 0xff80e000: code = 0x11081; n_bits = 17; break;
case 0xff2090b0: code = 0x11089; n_bits = 17; break;
case 0xffc06040: code = 0x110a1; n_bits = 17; break;
case 0xff00e080: code = 0x110c1; n_bits = 17; break;
case 0xffe030b0: code = 0x11101; n_bits = 17; break;
case 0xffe0a0b0: code = 0x11109; n_bits = 17; break;
case 0xff300080: code = 0x11121; n_bits = 17; break;
case 0xff7050f0: code = 0x11141; n_bits = 17; break;
case 0xff903030: code = 0x11181; n_bits = 17; break;
case 0xffa0b0b0: code = 0x111a1; n_bits = 17; break;
case 0xfff0b080: code = 0x111c1; n_bits = 17; break;
case 0xff6030b0: code = 0x11201; n_bits = 17; break;
case 0xff40b0f0: code = 0x11209; n_bits = 17; break;
case 0xff200050: code = 0x11221; n_bits = 17; break;
case 0xff60d020: code = 0x11241; n_bits = 17; break;
case 0xffa000a0: code = 0x11281; n_bits = 17; break;
case 0xffa0d050: code = 0x112a1; n_bits = 17; break;
case 0xfff0f040: code = 0x112c1; n_bits = 17; break;
case 0xff00c0b0: code = 0x11301; n_bits = 17; break;
case 0xff4040e0: code = 0x11309; n_bits = 17; break;
case 0xffb01050: code = 0x11321; n_bits = 17; break;
case 0xfff0f0d0: code = 0x11341; n_bits = 17; break;
case 0xffe00010: code = 0x11381; n_bits = 17; break;
case 0xff80b0b0: code = 0x113a1; n_bits = 17; break;
case 0xffe02020: code = 0x113c1; n_bits = 17; break;
case 0xffe0a050: code = 0x11401; n_bits = 17; break;
case 0xff90f070: code = 0x11409; n_bits = 17; break;
case 0xff80a0d0: code = 0x11421; n_bits = 17; break;
case 0xff2010a0: code = 0x11441; n_bits = 17; break;
case 0xff100040: code = 0x11481; n_bits = 17; break;
case 0xffa0c020: code = 0x11489; n_bits = 17; break;
case 0xff3080a0: code = 0x114a1; n_bits = 17; break;
case 0xffe0e0b0: code = 0x114c1; n_bits = 17; break;
case 0xffc07050: code = 0x11501; n_bits = 17; break;
case 0xffe080a0: code = 0x11509; n_bits = 17; break;
case 0xff50e0a0: code = 0x11521; n_bits = 17; break;
case 0xffa05060: code = 0x11541; n_bits = 17; break;
case 0xff60c020: code = 0x11581; n_bits = 17; break;
case 0xff303040: code = 0x115a1; n_bits = 17; break;
case 0xff604050: code = 0x115c1; n_bits = 17; break;
case 0xffc07060: code = 0x11601; n_bits = 17; break;
case 0xffe03040: code = 0x11609; n_bits = 17; break;
case 0xff102080: code = 0x11621; n_bits = 17; break;
case 0xff602050: code = 0x11641; n_bits = 17; break;
case 0xff0040a0: code = 0x11681; n_bits = 17; break;
case 0xffa02080: code = 0x116a1; n_bits = 17; break;
case 0xffe090b0: code = 0x116c1; n_bits = 17; break;
case 0xff707060: code = 0x11701; n_bits = 17; break;
case 0xff202040: code = 0x11709; n_bits = 17; break;
case 0xffa03090: code = 0x11721; n_bits = 17; break;
case 0xffd05070: code = 0x11741; n_bits = 17; break;
case 0xff606040: code = 0x11781; n_bits = 17; break;
case 0xff507090: code = 0x117a1; n_bits = 17; break;
case 0xff101060: code = 0x117c1; n_bits = 17; break;
case 0xff30d0d0: code = 0x11801; n_bits = 17; break;
case 0xff5090b0: code = 0x11809; n_bits = 17; break;
case 0xffe060d0: code = 0x11821; n_bits = 17; break;
case 0xff301030: code = 0x11841; n_bits = 17; break;
case 0xffa01030: code = 0x11881; n_bits = 17; break;
case 0xffd06030: code = 0x11889; n_bits = 17; break;
case 0xff40d0d0: code = 0x118a1; n_bits = 17; break;
case 0xff30a010: code = 0x118c1; n_bits = 17; break;
case 0xffa05040: code = 0x11901; n_bits = 17; break;
case 0xffd05030: code = 0x11909; n_bits = 17; break;
case 0xffb0a050: code = 0x11921; n_bits = 17; break;
case 0xffe0e0d0: code = 0x11941; n_bits = 17; break;
case 0xffe0d050: code = 0x11981; n_bits = 17; break;
case 0xffc020b0: code = 0x119a1; n_bits = 17; break;
case 0xff20d0b0: code = 0x119c1; n_bits = 17; break;
case 0xffd0c090: code = 0x11a01; n_bits = 17; break;
case 0xff404070: code = 0x11a09; n_bits = 17; break;
case 0xfff05090: code = 0x11a21; n_bits = 17; break;
case 0xff6040f0: code = 0x11a41; n_bits = 17; break;
case 0xffc090b0: code = 0x11a81; n_bits = 17; break;
case 0xff60c070: code = 0x11aa1; n_bits = 17; break;
case 0xff30f0a0: code = 0x11ac1; n_bits = 17; break;
case 0xffd0d040: code = 0x11b01; n_bits = 17; break;
case 0xff2080e0: code = 0x11b09; n_bits = 17; break;
case 0xffc0d000: code = 0x11b21; n_bits = 17; break;
case 0xff3030d0: code = 0x11b41; n_bits = 17; break;
case 0xffd040e0: code = 0x11b81; n_bits = 17; break;
case 0xff908070: code = 0x11ba1; n_bits = 17; break;
case 0xfff0e0c0: code = 0x11bc1; n_bits = 17; break;
case 0xff108080: code = 0x11c01; n_bits = 17; break;
case 0xffc0d090: code = 0x11c09; n_bits = 17; break;
case 0xff807060: code = 0x11c21; n_bits = 17; break;
case 0xff601060: code = 0x11c41; n_bits = 17; break;
case 0xffa03080: code = 0x11c81; n_bits = 17; break;
case 0xff9070f0: code = 0x11c89; n_bits = 17; break;
case 0xffd0a0c0: code = 0x11ca1; n_bits = 17; break;
case 0xff009070: code = 0x11cc1; n_bits = 17; break;
case 0xffa0c0b0: code = 0x11d01; n_bits = 17; break;
case 0xff006080: code = 0x11d09; n_bits = 17; break;
case 0xff10d0c0: code = 0x11d21; n_bits = 17; break;
case 0xfff010f0: code = 0x11d41; n_bits = 17; break;
case 0xff003070: code = 0x11d81; n_bits = 17; break;
case 0xff60a0d0: code = 0x11da1; n_bits = 17; break;
case 0xff20b020: code = 0x11dc1; n_bits = 17; break;
case 0xff5050f0: code = 0x11e01; n_bits = 17; break;
case 0xff408090: code = 0x11e09; n_bits = 17; break;
case 0xff407020: code = 0x11e21; n_bits = 17; break;
case 0xffa01070: code = 0x11e41; n_bits = 17; break;
case 0xff005070: code = 0x11e81; n_bits = 17; break;
case 0xff809070: code = 0x11ea1; n_bits = 17; break;
case 0xffb050c0: code = 0x11ec1; n_bits = 17; break;
case 0xfff09090: code = 0x11f01; n_bits = 17; break;
case 0xff906080: code = 0x11f09; n_bits = 17; break;
case 0xff70c090: code = 0x11f21; n_bits = 17; break;
case 0xff708040: code = 0x11f41; n_bits = 17; break;
case 0xffd02050: code = 0x11f81; n_bits = 17; break;
case 0xff003020: code = 0x11fa1; n_bits = 17; break;
case 0xffb0e0b0: code = 0x11fc1; n_bits = 17; break;
case 0xff201030: code = 0x12001; n_bits = 17; break;
case 0xffa060e0: code = 0x12009; n_bits = 17; break;
case 0xff20b050: code = 0x12021; n_bits = 17; break;
case 0xffd0b060: code = 0x12041; n_bits = 17; break;
case 0xff2070f0: code = 0x12081; n_bits = 17; break;
case 0xff90d0d0: code = 0x12089; n_bits = 17; break;
case 0xff1060e0: code = 0x120a1; n_bits = 17; break;
case 0xffa04030: code = 0x120c1; n_bits = 17; break;
case 0xffe0d090: code = 0x12101; n_bits = 17; break;
case 0xff408060: code = 0x12109; n_bits = 17; break;
case 0xffd0d050: code = 0x12121; n_bits = 17; break;
case 0xff70f0d0: code = 0x12141; n_bits = 17; break;
case 0xff90d010: code = 0x12181; n_bits = 17; break;
case 0xffe09030: code = 0x121a1; n_bits = 17; break;
case 0xff307020: code = 0x121c1; n_bits = 17; break;
case 0xffc0c0a0: code = 0x12201; n_bits = 17; break;
case 0xff608000: code = 0x12209; n_bits = 17; break;
case 0xfff01000: code = 0x12221; n_bits = 17; break;
case 0xffe0a0e0: code = 0x12241; n_bits = 17; break;
case 0xff50a0b0: code = 0x12281; n_bits = 17; break;
case 0xffe0c050: code = 0x122a1; n_bits = 17; break;
case 0xff50d090: code = 0x122c1; n_bits = 17; break;
case 0xff80d000: code = 0x12301; n_bits = 17; break;
case 0xff509020: code = 0x12309; n_bits = 17; break;
case 0xff70b0a0: code = 0x12321; n_bits = 17; break;
case 0xff601020: code = 0x12341; n_bits = 17; break;
case 0xff700040: code = 0x12381; n_bits = 17; break;
case 0xff80b0a0: code = 0x123a1; n_bits = 17; break;
case 0xff508010: code = 0x123c1; n_bits = 17; break;
case 0xff0020a0: code = 0x12401; n_bits = 17; break;
case 0xffa02000: code = 0x12409; n_bits = 17; break;
case 0xffe0e070: code = 0x12421; n_bits = 17; break;
case 0xff00c0c0: code = 0x12441; n_bits = 17; break;
case 0xff808020: code = 0x12481; n_bits = 17; break;
case 0xffa040f0: code = 0x12489; n_bits = 17; break;
case 0xff80a080: code = 0x124a1; n_bits = 17; break;
case 0xff201090: code = 0x124c1; n_bits = 17; break;
case 0xff30d0b0: code = 0x12501; n_bits = 17; break;
case 0xff60d0f0: code = 0x12509; n_bits = 17; break;
case 0xff8090d0: code = 0x12521; n_bits = 17; break;
case 0xff70f080: code = 0x12541; n_bits = 17; break;
case 0xff906020: code = 0x12579; n_bits = 17; break;
case 0xffa080f0: code = 0x12581; n_bits = 17; break;
case 0xff10a090: code = 0x125a1; n_bits = 17; break;
case 0xff803010: code = 0x125c1; n_bits = 17; break;
case 0xff909020: code = 0x12601; n_bits = 17; break;
case 0xff0020d0: code = 0x12609; n_bits = 17; break;
case 0xff301040: code = 0x12621; n_bits = 17; break;
case 0xff10c000: code = 0x12641; n_bits = 17; break;
case 0xff203060: code = 0x12681; n_bits = 17; break;
case 0xffc03000: code = 0x126a1; n_bits = 17; break;
case 0xffe000a0: code = 0x126c1; n_bits = 17; break;
case 0xfff01050: code = 0x12701; n_bits = 17; break;
case 0xff70f030: code = 0x12709; n_bits = 17; break;
case 0xffe01010: code = 0x12721; n_bits = 17; break;
case 0xffd0f050: code = 0x12741; n_bits = 17; break;
case 0xff7070b0: code = 0x12781; n_bits = 17; break;
case 0xfff080f0: code = 0x127a1; n_bits = 17; break;
case 0xffb06070: code = 0x127c1; n_bits = 17; break;
case 0xff200060: code = 0x12801; n_bits = 17; break;
case 0xff5020e0: code = 0x12809; n_bits = 17; break;
case 0xffe0a070: code = 0x12821; n_bits = 17; break;
case 0xff6090f0: code = 0x12841; n_bits = 17; break;
case 0xff30a050: code = 0x12881; n_bits = 17; break;
case 0xff5060f0: code = 0x12889; n_bits = 17; break;
case 0xff90f0b0: code = 0x128a1; n_bits = 17; break;
case 0xff90e070: code = 0x128c1; n_bits = 17; break;
case 0xffa0f020: code = 0x12901; n_bits = 17; break;
case 0xffc080f0: code = 0x12909; n_bits = 17; break;
case 0xffd0c080: code = 0x12921; n_bits = 17; break;
case 0xff80e010: code = 0x12941; n_bits = 17; break;
case 0xffd090e0: code = 0x12981; n_bits = 17; break;
case 0xffd04000: code = 0x129a1; n_bits = 17; break;
case 0xffc07090: code = 0x129c1; n_bits = 17; break;
case 0xff504040: code = 0x12a01; n_bits = 17; break;
case 0xffd000a0: code = 0x12a09; n_bits = 17; break;
case 0xffe0b010: code = 0x12a21; n_bits = 17; break;
case 0xff6080d0: code = 0x12a41; n_bits = 17; break;
case 0xff604040: code = 0x12a81; n_bits = 17; break;
case 0xffc0d0d0: code = 0x12aa1; n_bits = 17; break;
case 0xff50e060: code = 0x12ac1; n_bits = 17; break;
case 0xff603090: code = 0x12b01; n_bits = 17; break;
case 0xff60a090: code = 0x12b09; n_bits = 17; break;
case 0xff30a0c0: code = 0x12b21; n_bits = 17; break;
case 0xff502090: code = 0x12b41; n_bits = 17; break;
case 0xff5020c0: code = 0x12b81; n_bits = 17; break;
case 0xff50f000: code = 0x12ba1; n_bits = 17; break;
case 0xff8020f0: code = 0x12bc1; n_bits = 17; break;
case 0xff4010c0: code = 0x12c01; n_bits = 17; break;
case 0xff5000b0: code = 0x12c09; n_bits = 17; break;
case 0xffd09040: code = 0x12c21; n_bits = 17; break;
case 0xff70f010: code = 0x12c41; n_bits = 17; break;
case 0xff5010c0: code = 0x12c81; n_bits = 17; break;
case 0xff80c090: code = 0x12c89; n_bits = 17; break;
case 0xff306030: code = 0x12ca1; n_bits = 17; break;
case 0xff507010: code = 0x12cc1; n_bits = 17; break;
case 0xff603040: code = 0x12d01; n_bits = 17; break;
case 0xff702030: code = 0x12d09; n_bits = 17; break;
case 0xff30c080: code = 0x12d21; n_bits = 17; break;
case 0xffa0e090: code = 0x12d41; n_bits = 17; break;
case 0xff701010: code = 0x12d81; n_bits = 17; break;
case 0xff40c080: code = 0x12da1; n_bits = 17; break;
case 0xff50e0d0: code = 0x12dc1; n_bits = 17; break;
case 0xff00d0e0: code = 0x12e01; n_bits = 17; break;
case 0xff1030c0: code = 0x12e09; n_bits = 17; break;
case 0xffc000d0: code = 0x12e21; n_bits = 17; break;
case 0xff400030: code = 0x12e41; n_bits = 17; break;
case 0xff800090: code = 0x12e81; n_bits = 17; break;
case 0xff30c0b0: code = 0x12ea1; n_bits = 17; break;
case 0xff708000: code = 0x12ec1; n_bits = 17; break;
case 0xff904020: code = 0x12f01; n_bits = 17; break;
case 0xff305040: code = 0x12f09; n_bits = 17; break;
case 0xffa05070: code = 0x12f21; n_bits = 17; break;
case 0xff7080a0: code = 0x12f41; n_bits = 17; break;
case 0xff605040: code = 0x12f81; n_bits = 17; break;
case 0xff805060: code = 0x12fa1; n_bits = 17; break;
case 0xffd08080: code = 0x12fc1; n_bits = 17; break;
case 0xff40f0f0: code = 0x13001; n_bits = 17; break;
case 0xff50e0e0: code = 0x13009; n_bits = 17; break;
case 0xfff04000: code = 0x13021; n_bits = 17; break;
case 0xff3070a0: code = 0x13041; n_bits = 17; break;
case 0xff40c060: code = 0x13081; n_bits = 17; break;
case 0xffe0b060: code = 0x13089; n_bits = 17; break;
case 0xffd04020: code = 0x130a1; n_bits = 17; break;
case 0xffb04020: code = 0x130c1; n_bits = 17; break;
case 0xff608090: code = 0x13101; n_bits = 17; break;
case 0xff000040: code = 0x13109; n_bits = 17; break;
case 0xffe05040: code = 0x13121; n_bits = 17; break;
case 0xff506010: code = 0x13141; n_bits = 17; break;
case 0xff3060f0: code = 0x13181; n_bits = 17; break;
case 0xff2090d0: code = 0x131a1; n_bits = 17; break;
case 0xffb04000: code = 0x131c1; n_bits = 17; break;
case 0xfff050e0: code = 0x13201; n_bits = 17; break;
case 0xff50c010: code = 0x13209; n_bits = 17; break;
case 0xfff06060: code = 0x13221; n_bits = 17; break;
case 0xffa06090: code = 0x13241; n_bits = 17; break;
case 0xfff0d0a0: code = 0x13281; n_bits = 17; break;
case 0xff503030: code = 0x132a1; n_bits = 17; break;
case 0xffb000e0: code = 0x132c1; n_bits = 17; break;
case 0xff50a060: code = 0x13301; n_bits = 17; break;
case 0xff10b0a0: code = 0x13309; n_bits = 17; break;
case 0xffe0c0b0: code = 0x13321; n_bits = 17; break;
case 0xffc0c0b0: code = 0x13341; n_bits = 17; break;
case 0xff50a090: code = 0x13381; n_bits = 17; break;
case 0xff202080: code = 0x133a1; n_bits = 17; break;
case 0xff608040: code = 0x133c1; n_bits = 17; break;
case 0xffa07010: code = 0x13401; n_bits = 17; break;
case 0xff306000: code = 0x13409; n_bits = 17; break;
case 0xff609070: code = 0x13421; n_bits = 17; break;
case 0xff501090: code = 0x13441; n_bits = 17; break;
case 0xff30d090: code = 0x13481; n_bits = 17; break;
case 0xff50a040: code = 0x13489; n_bits = 17; break;
case 0xffc0d0f0: code = 0x134a1; n_bits = 17; break;
case 0xffe040d0: code = 0x134c1; n_bits = 17; break;
case 0xffc0c040: code = 0x13501; n_bits = 17; break;
case 0xff60b010: code = 0x13509; n_bits = 17; break;
case 0xfff09030: code = 0x13521; n_bits = 17; break;
case 0xff00b0a0: code = 0x13541; n_bits = 17; break;
case 0xff503020: code = 0x13581; n_bits = 17; break;
case 0xff104080: code = 0x135a1; n_bits = 17; break;
case 0xffb01090: code = 0x135c1; n_bits = 17; break;
case 0xff8090e0: code = 0x13601; n_bits = 17; break;
case 0xff50a050: code = 0x13609; n_bits = 17; break;
case 0xff70c0d0: code = 0x13621; n_bits = 17; break;
case 0xff300000: code = 0x13641; n_bits = 17; break;
case 0xff205000: code = 0x13681; n_bits = 17; break;
case 0xfff05050: code = 0x136a1; n_bits = 17; break;
case 0xff70b060: code = 0x136c1; n_bits = 17; break;
case 0xff40e020: code = 0x13701; n_bits = 17; break;
case 0xff8070b0: code = 0x13709; n_bits = 17; break;
case 0xff104010: code = 0x13721; n_bits = 17; break;
case 0xff60a050: code = 0x13741; n_bits = 17; break;
case 0xfff0b0e0: code = 0x13781; n_bits = 17; break;
case 0xff20e050: code = 0x137a1; n_bits = 17; break;
case 0xff30d040: code = 0x137c1; n_bits = 17; break;
case 0xff70b080: code = 0x13801; n_bits = 17; break;
case 0xff6020a0: code = 0x13809; n_bits = 17; break;
case 0xff00f0e0: code = 0x13821; n_bits = 17; break;
case 0xff90c0c0: code = 0x13841; n_bits = 17; break;
case 0xff802070: code = 0x13881; n_bits = 17; break;
case 0xff9080b0: code = 0x13889; n_bits = 17; break;
case 0xff50b0b0: code = 0x138a1; n_bits = 17; break;
case 0xff109070: code = 0x138c1; n_bits = 17; break;
case 0xffc0d010: code = 0x13901; n_bits = 17; break;
case 0xffa02060: code = 0x13909; n_bits = 17; break;
case 0xff40e070: code = 0x13921; n_bits = 17; break;
case 0xffb030d0: code = 0x13941; n_bits = 17; break;
case 0xff807010: code = 0x13981; n_bits = 17; break;
case 0xffe07090: code = 0x139a1; n_bits = 17; break;
case 0xff2030d0: code = 0x139c1; n_bits = 17; break;
case 0xffa0c0d0: code = 0x13a01; n_bits = 17; break;
case 0xff102040: code = 0x13a09; n_bits = 17; break;
case 0xff20a020: code = 0x13a21; n_bits = 17; break;
case 0xffe09000: code = 0x13a41; n_bits = 17; break;
case 0xffa060c0: code = 0x13a81; n_bits = 17; break;
case 0xff30a020: code = 0x13aa1; n_bits = 17; break;
case 0xff503060: code = 0x13ac1; n_bits = 17; break;
case 0xff00f000: code = 0x13b01; n_bits = 17; break;
case 0xff407030: code = 0x13b09; n_bits = 17; break;
case 0xffa04060: code = 0x13b21; n_bits = 17; break;
case 0xffe0a0a0: code = 0x13b41; n_bits = 17; break;
case 0xffb0f010: code = 0x13b81; n_bits = 17; break;
case 0xff60f030: code = 0x13ba1; n_bits = 17; break;
case 0xffa00030: code = 0x13bc1; n_bits = 17; break;
case 0xff7080e0: code = 0x13c01; n_bits = 17; break;
case 0xffb050f0: code = 0x13c09; n_bits = 17; break;
case 0xfff07030: code = 0x13c21; n_bits = 17; break;
case 0xffc0c0d0: code = 0x13c41; n_bits = 17; break;
case 0xff208060: code = 0x13c81; n_bits = 17; break;
case 0xff3010c0: code = 0x13c89; n_bits = 17; break;
case 0xff40f070: code = 0x13ca1; n_bits = 17; break;
case 0xff7010c0: code = 0x13cc1; n_bits = 17; break;
case 0xff10d030: code = 0x13d01; n_bits = 17; break;
case 0xffa0f0f0: code = 0x13d09; n_bits = 17; break;
case 0xff50e0f0: code = 0x13d21; n_bits = 17; break;
case 0xff90f0e0: code = 0x13d41; n_bits = 17; break;
case 0xfff05040: code = 0x13d81; n_bits = 17; break;
case 0xfff060f0: code = 0x13da1; n_bits = 17; break;
case 0xff502060: code = 0x13dc1; n_bits = 17; break;
case 0xff00a080: code = 0x13e01; n_bits = 17; break;
case 0xfff0f0e0: code = 0x13e09; n_bits = 17; break;
case 0xffa0b000: code = 0x13e21; n_bits = 17; break;
case 0xff801020: code = 0x13e41; n_bits = 17; break;
case 0xffd02090: code = 0x13e81; n_bits = 17; break;
case 0xfff04080: code = 0x13ea1; n_bits = 17; break;
case 0xff1020b0: code = 0x13ec1; n_bits = 17; break;
case 0xff0040c0: code = 0x13f01; n_bits = 17; break;
case 0xff901040: code = 0x13f09; n_bits = 17; break;
case 0xffc0a090: code = 0x13f21; n_bits = 17; break;
case 0xffe08010: code = 0x13f41; n_bits = 17; break;
case 0xff90d040: code = 0x13f81; n_bits = 17; break;
case 0xff1040c0: code = 0x13fa1; n_bits = 17; break;
case 0xff80b090: code = 0x13fc1; n_bits = 17; break;
case 0xffb0b0a0: code = 0x14001; n_bits = 17; break;
case 0xff30b020: code = 0x14009; n_bits = 17; break;
case 0xfff0d030: code = 0x14021; n_bits = 17; break;
case 0xffe040f0: code = 0x14041; n_bits = 17; break;
case 0xff303020: code = 0x14081; n_bits = 17; break;
case 0xffe02050: code = 0x14089; n_bits = 17; break;
case 0xff8010c0: code = 0x140a1; n_bits = 17; break;
case 0xff506080: code = 0x140c1; n_bits = 17; break;
case 0xff309070: code = 0x14101; n_bits = 17; break;
case 0xff906040: code = 0x14109; n_bits = 17; break;
case 0xffb0b0e0: code = 0x14121; n_bits = 17; break;
case 0xff509070: code = 0x14141; n_bits = 17; break;
case 0xff409070: code = 0x14181; n_bits = 17; break;
case 0xfff0d090: code = 0x141a1; n_bits = 17; break;
case 0xff60c0f0: code = 0x141c1; n_bits = 17; break;
case 0xff105020: code = 0x14201; n_bits = 17; break;
case 0xff50f070: code = 0x14209; n_bits = 17; break;
case 0xff90a0f0: code = 0x14221; n_bits = 17; break;
case 0xff1040b0: code = 0x14241; n_bits = 17; break;
case 0xffc01070: code = 0x14281; n_bits = 17; break;
case 0xffb01030: code = 0x142a1; n_bits = 17; break;
case 0xffc04050: code = 0x142c1; n_bits = 17; break;
case 0xff50d0c0: code = 0x14301; n_bits = 17; break;
case 0xff00b070: code = 0x14309; n_bits = 17; break;
case 0xffe0d080: code = 0x14321; n_bits = 17; break;
case 0xff9000e0: code = 0x14341; n_bits = 17; break;
case 0xff8040a0: code = 0x14381; n_bits = 17; break;
case 0xff70a020: code = 0x143a1; n_bits = 17; break;
case 0xff706080: code = 0x143c1; n_bits = 17; break;
case 0xff20a070: code = 0x14401; n_bits = 17; break;
case 0xff901090: code = 0x14409; n_bits = 17; break;
case 0xffa00080: code = 0x14421; n_bits = 17; break;
case 0xff5040f0: code = 0x14441; n_bits = 17; break;
case 0xff30a070: code = 0x14481; n_bits = 17; break;
case 0xffb00070: code = 0x14489; n_bits = 17; break;
case 0xfff01040: code = 0x144a1; n_bits = 17; break;
case 0xffa02070: code = 0x144c1; n_bits = 17; break;
case 0xff001080: code = 0x14501; n_bits = 17; break;
case 0xffd040b0: code = 0x14509; n_bits = 17; break;
case 0xffe010d0: code = 0x14521; n_bits = 17; break;
case 0xff505070: code = 0x14541; n_bits = 17; break;
case 0xff60a030: code = 0x14579; n_bits = 17; break;
case 0xff304020: code = 0x14581; n_bits = 17; break;
case 0xff801050: code = 0x145a1; n_bits = 17; break;
case 0xffd01020: code = 0x145c1; n_bits = 17; break;
case 0xff30e0c0: code = 0x14601; n_bits = 17; break;
case 0xff5040a0: code = 0x14609; n_bits = 17; break;
case 0xff500000: code = 0x14621; n_bits = 17; break;
case 0xff30c070: code = 0x14641; n_bits = 17; break;
case 0xff40b030: code = 0x14681; n_bits = 17; break;
case 0xffe0b0c0: code = 0x146a1; n_bits = 17; break;
case 0xff90d080: code = 0x146c1; n_bits = 17; break;
case 0xffc08010: code = 0x14701; n_bits = 17; break;
case 0xff8000a0: code = 0x14709; n_bits = 17; break;
case 0xffc0e0f0: code = 0x14721; n_bits = 17; break;
case 0xff300070: code = 0x14741; n_bits = 17; break;
case 0xffa0a0d0: code = 0x14781; n_bits = 17; break;
case 0xff2080a0: code = 0x147a1; n_bits = 17; break;
case 0xff204000: code = 0x147c1; n_bits = 17; break;
case 0xffa0e070: code = 0x14801; n_bits = 17; break;
case 0xfff08030: code = 0x14809; n_bits = 17; break;
case 0xff100020: code = 0x14821; n_bits = 17; break;
case 0xff9050d0: code = 0x14841; n_bits = 17; break;
case 0xff003000: code = 0x14881; n_bits = 17; break;
case 0xfff000a0: code = 0x14889; n_bits = 17; break;
case 0xff402070: code = 0x148a1; n_bits = 17; break;
case 0xfff0a0d0: code = 0x148c1; n_bits = 17; break;
case 0xff708090: code = 0x14901; n_bits = 17; break;
case 0xffa06040: code = 0x14909; n_bits = 17; break;
case 0xff30e040: code = 0x14921; n_bits = 17; break;
case 0xff40f030: code = 0x14941; n_bits = 17; break;
case 0xfff080a0: code = 0x14981; n_bits = 17; break;
case 0xff5080c0: code = 0x149a1; n_bits = 17; break;
case 0xff0000c0: code = 0x149c1; n_bits = 17; break;
case 0xffe01080: code = 0x14a01; n_bits = 17; break;
case 0xff105080: code = 0x14a09; n_bits = 17; break;
case 0xff0050b0: code = 0x14a21; n_bits = 17; break;
case 0xff1030e0: code = 0x14a41; n_bits = 17; break;
case 0xff803000: code = 0x14a81; n_bits = 17; break;
case 0xff30d080: code = 0x14aa1; n_bits = 17; break;
case 0xffd05050: code = 0x14ac1; n_bits = 17; break;
case 0xff009050: code = 0x14b01; n_bits = 17; break;
case 0xffd01050: code = 0x14b09; n_bits = 17; break;
case 0xff3010b0: code = 0x14b21; n_bits = 17; break;
case 0xff8040e0: code = 0x14b41; n_bits = 17; break;
case 0xff607000: code = 0x14b81; n_bits = 17; break;
case 0xff609080: code = 0x14ba1; n_bits = 17; break;
case 0xff10b010: code = 0x14bc1; n_bits = 17; break;
case 0xff2070d0: code = 0x14c01; n_bits = 17; break;
case 0xff708080: code = 0x14c09; n_bits = 17; break;
case 0xff206090: code = 0x14c21; n_bits = 17; break;
case 0xffd08000: code = 0x14c41; n_bits = 17; break;
case 0xffa0a080: code = 0x14c81; n_bits = 17; break;
case 0xffa0b050: code = 0x14c89; n_bits = 17; break;
case 0xff3070d0: code = 0x14ca1; n_bits = 17; break;
case 0xffa01080: code = 0x14cc1; n_bits = 17; break;
case 0xff90e0a0: code = 0x14d01; n_bits = 17; break;
case 0xff905070: code = 0x14d09; n_bits = 17; break;
case 0xff903060: code = 0x14d21; n_bits = 17; break;
case 0xff50d060: code = 0x14d41; n_bits = 17; break;
case 0xff80f0e0: code = 0x14d81; n_bits = 17; break;
case 0xffd0b070: code = 0x14da1; n_bits = 17; break;
case 0xfff08020: code = 0x14dc1; n_bits = 17; break;
case 0xffc06090: code = 0x14e01; n_bits = 17; break;
case 0xffb09030: code = 0x14e09; n_bits = 17; break;
case 0xff2020b0: code = 0x14e21; n_bits = 17; break;
case 0xff2050b0: code = 0x14e41; n_bits = 17; break;
case 0xff60b0b0: code = 0x14e81; n_bits = 17; break;
case 0xffe070a0: code = 0x14ea1; n_bits = 17; break;
case 0xffd0e060: code = 0x14ec1; n_bits = 17; break;
case 0xff70d010: code = 0x14f01; n_bits = 17; break;
case 0xff607090: code = 0x14f09; n_bits = 17; break;
case 0xffc0b060: code = 0x14f21; n_bits = 17; break;
case 0xffa0c0f0: code = 0x14f41; n_bits = 17; break;
case 0xffa00000: code = 0x14f81; n_bits = 17; break;
case 0xff50d040: code = 0x14fa1; n_bits = 17; break;
case 0xff604090: code = 0x14fc1; n_bits = 17; break;
case 0xffd020a0: code = 0x15001; n_bits = 17; break;
case 0xff402040: code = 0x15009; n_bits = 17; break;
case 0xffd020d0: code = 0x15021; n_bits = 17; break;
case 0xff503050: code = 0x15041; n_bits = 17; break;
case 0xff403050: code = 0x15081; n_bits = 17; break;
case 0xff40b020: code = 0x15089; n_bits = 17; break;
case 0xff30b050: code = 0x150a1; n_bits = 17; break;
case 0xffe07040: code = 0x150c1; n_bits = 17; break;
case 0xff70c0f0: code = 0x15101; n_bits = 17; break;
case 0xff10f020: code = 0x15109; n_bits = 17; break;
case 0xff1090d0: code = 0x15121; n_bits = 17; break;
case 0xff40b040: code = 0x15141; n_bits = 17; break;
case 0xff903040: code = 0x15181; n_bits = 17; break;
case 0xff6060b0: code = 0x151a1; n_bits = 17; break;
case 0xffd0c0c0: code = 0x151c1; n_bits = 17; break;
case 0xff4040f0: code = 0x15201; n_bits = 17; break;
case 0xffa010c0: code = 0x15209; n_bits = 17; break;
case 0xff403030: code = 0x15221; n_bits = 17; break;
case 0xffa06080: code = 0x15241; n_bits = 17; break;
case 0xff504010: code = 0x15281; n_bits = 17; break;
case 0xffd09000: code = 0x152a1; n_bits = 17; break;
case 0xffa0c0c0: code = 0x152c1; n_bits = 17; break;
case 0xffe060c0: code = 0x15301; n_bits = 17; break;
case 0xff30a060: code = 0x15309; n_bits = 17; break;
case 0xff20a090: code = 0x15321; n_bits = 17; break;
case 0xffe0b070: code = 0x15341; n_bits = 17; break;
case 0xff402090: code = 0x15381; n_bits = 17; break;
case 0xffe0a080: code = 0x153a1; n_bits = 17; break;
case 0xff10f000: code = 0x153c1; n_bits = 17; break;
case 0xff104040: code = 0x15401; n_bits = 17; break;
case 0xff80b010: code = 0x15409; n_bits = 17; break;
case 0xffd00030: code = 0x15421; n_bits = 17; break;
case 0xffa050d0: code = 0x15441; n_bits = 17; break;
case 0xff401090: code = 0x15481; n_bits = 17; break;
case 0xff608020: code = 0x15489; n_bits = 17; break;
case 0xff206000: code = 0x154a1; n_bits = 17; break;
case 0xff501060: code = 0x154c1; n_bits = 17; break;
case 0xff90b000: code = 0x15501; n_bits = 17; break;
case 0xff90d060: code = 0x15509; n_bits = 17; break;
case 0xffb0b0c0: code = 0x15521; n_bits = 17; break;
case 0xff20e070: code = 0x15541; n_bits = 17; break;
case 0xff5070e0: code = 0x15581; n_bits = 17; break;
case 0xff40f0e0: code = 0x155a1; n_bits = 17; break;
case 0xff90c0b0: code = 0x155c1; n_bits = 17; break;
case 0xff402050: code = 0x15601; n_bits = 17; break;
case 0xffd0d0d0: code = 0x15609; n_bits = 17; break;
case 0xff30c000: code = 0x15621; n_bits = 17; break;
case 0xffb05010: code = 0x15641; n_bits = 17; break;
case 0xff502050: code = 0x15681; n_bits = 17; break;
case 0xff10e0c0: code = 0x156a1; n_bits = 17; break;
case 0xffb06090: code = 0x156c1; n_bits = 17; break;
case 0xfff0d000: code = 0x15701; n_bits = 17; break;
case 0xff205010: code = 0x15709; n_bits = 17; break;
case 0xff30c0d0: code = 0x15721; n_bits = 17; break;
case 0xff709010: code = 0x15741; n_bits = 17; break;
case 0xff50e020: code = 0x15781; n_bits = 17; break;
case 0xfff0e020: code = 0x157a1; n_bits = 17; break;
case 0xff10f060: code = 0x157c1; n_bits = 17; break;
case 0xff105010: code = 0x15801; n_bits = 17; break;
case 0xff9040f0: code = 0x15809; n_bits = 17; break;
case 0xffa030e0: code = 0x15821; n_bits = 17; break;
case 0xff600060: code = 0x15841; n_bits = 17; break;
case 0xff106090: code = 0x15881; n_bits = 17; break;
case 0xffb07070: code = 0x15889; n_bits = 17; break;
case 0xff10a0b0: code = 0x158a1; n_bits = 17; break;
case 0xff800030: code = 0x158c1; n_bits = 17; break;
case 0xff10d000: code = 0x15901; n_bits = 17; break;
case 0xff50e040: code = 0x15909; n_bits = 17; break;
case 0xffb030e0: code = 0x15921; n_bits = 17; break;
case 0xffc06010: code = 0x15941; n_bits = 17; break;
case 0xffb0a030: code = 0x15981; n_bits = 17; break;
case 0xffd0d010: code = 0x159a1; n_bits = 17; break;
case 0xffb080c0: code = 0x159c1; n_bits = 17; break;
case 0xff003030: code = 0x15a01; n_bits = 17; break;
case 0xffd090b0: code = 0x15a09; n_bits = 17; break;
case 0xff909030: code = 0x15a21; n_bits = 17; break;
case 0xff20c040: code = 0x15a41; n_bits = 17; break;
case 0xffa0a0f0: code = 0x15a81; n_bits = 17; break;
case 0xff10f090: code = 0x15aa1; n_bits = 17; break;
case 0xff80d050: code = 0x15ac1; n_bits = 17; break;
case 0xfff030e0: code = 0x15b01; n_bits = 17; break;
case 0xff60f000: code = 0x15b09; n_bits = 17; break;
case 0xffd07080: code = 0x15b21; n_bits = 17; break;
case 0xff30c0e0: code = 0x15b41; n_bits = 17; break;
case 0xff90f000: code = 0x15b81; n_bits = 17; break;
case 0xff7000a0: code = 0x15ba1; n_bits = 17; break;
case 0xffc0b0a0: code = 0x15bc1; n_bits = 17; break;
case 0xff9070a0: code = 0x15c01; n_bits = 17; break;
case 0xff008020: code = 0x15c09; n_bits = 17; break;
case 0xff70a080: code = 0x15c21; n_bits = 17; break;
case 0xff20e000: code = 0x15c41; n_bits = 17; break;
case 0xff706030: code = 0x15c81; n_bits = 17; break;
case 0xff40f010: code = 0x15c89; n_bits = 17; break;
case 0xfff000f0: code = 0x15ca1; n_bits = 17; break;
case 0xff006000: code = 0x15cc1; n_bits = 17; break;
case 0xff102030: code = 0x15d01; n_bits = 17; break;
case 0xfff010d0: code = 0x15d09; n_bits = 17; break;
case 0xffc050b0: code = 0x15d21; n_bits = 17; break;
case 0xff00c050: code = 0x15d41; n_bits = 17; break;
case 0xffa0e0a0: code = 0x15d81; n_bits = 17; break;
case 0xff70b070: code = 0x15da1; n_bits = 17; break;
case 0xff00d0c0: code = 0x15dc1; n_bits = 17; break;
case 0xff602020: code = 0x15e01; n_bits = 17; break;
case 0xff00c0d0: code = 0x15e09; n_bits = 17; break;
case 0xff3020e0: code = 0x15e21; n_bits = 17; break;
case 0xff20a080: code = 0x15e41; n_bits = 17; break;
case 0xff50a020: code = 0x15e81; n_bits = 17; break;
case 0xffd0f0a0: code = 0x15ea1; n_bits = 17; break;
case 0xff405000: code = 0x15ec1; n_bits = 17; break;
case 0xffd0a0d0: code = 0x15f01; n_bits = 17; break;
case 0xffb00000: code = 0x15f09; n_bits = 17; break;
case 0xffe09050: code = 0x15f21; n_bits = 17; break;
case 0xffa07090: code = 0x15f41; n_bits = 17; break;
case 0xff704090: code = 0x15f81; n_bits = 17; break;
case 0xff4050d0: code = 0x15fa1; n_bits = 17; break;
case 0xffa0a050: code = 0x15fc1; n_bits = 17; break;
case 0xff6050a0: code = 0x16001; n_bits = 17; break;
case 0xffd05080: code = 0x16009; n_bits = 17; break;
case 0xffe07000: code = 0x16021; n_bits = 17; break;
case 0xff20d070: code = 0x16041; n_bits = 17; break;
case 0xffe02010: code = 0x16081; n_bits = 17; break;
case 0xff704060: code = 0x16089; n_bits = 17; break;
case 0xff50a010: code = 0x160a1; n_bits = 17; break;
case 0xff20d040: code = 0x160c1; n_bits = 17; break;
case 0xffc0e0d0: code = 0x16101; n_bits = 17; break;
case 0xff502020: code = 0x16109; n_bits = 17; break;
case 0xff004070: code = 0x16121; n_bits = 17; break;
case 0xff9040b0: code = 0x16141; n_bits = 17; break;
case 0xffa0d0f0: code = 0x16181; n_bits = 17; break;
case 0xffc0a070: code = 0x161a1; n_bits = 17; break;
case 0xfff0d040: code = 0x161c1; n_bits = 17; break;
case 0xff706060: code = 0x16201; n_bits = 17; break;
case 0xffb020b0: code = 0x16209; n_bits = 17; break;
case 0xff904040: code = 0x16221; n_bits = 17; break;
case 0xffa0d020: code = 0x16241; n_bits = 17; break;
case 0xff1000e0: code = 0x16281; n_bits = 17; break;
case 0xff1070b0: code = 0x162a1; n_bits = 17; break;
case 0xff0010f0: code = 0x162c1; n_bits = 17; break;
case 0xffa0b0e0: code = 0x16301; n_bits = 17; break;
case 0xff301050: code = 0x16309; n_bits = 17; break;
case 0xff409050: code = 0x16321; n_bits = 17; break;
case 0xff509050: code = 0x16341; n_bits = 17; break;
case 0xffe01050: code = 0x16381; n_bits = 17; break;
case 0xff8080c0: code = 0x163a1; n_bits = 17; break;
case 0xff309050: code = 0x163c1; n_bits = 17; break;
case 0xff500050: code = 0x16401; n_bits = 17; break;
case 0xffb0e030: code = 0x16409; n_bits = 17; break;
case 0xffc0f0b0: code = 0x16421; n_bits = 17; break;
case 0xff2020a0: code = 0x16441; n_bits = 17; break;
case 0xffd07070: code = 0x16481; n_bits = 17; break;
case 0xff00e0c0: code = 0x16489; n_bits = 17; break;
case 0xff00f060: code = 0x164a1; n_bits = 17; break;
case 0xff0030b0: code = 0x164c1; n_bits = 17; break;
case 0xffd0f010: code = 0x16501; n_bits = 17; break;
case 0xff30a0d0: code = 0x16509; n_bits = 17; break;
case 0xff402000: code = 0x16521; n_bits = 17; break;
case 0xffb09080: code = 0x16541; n_bits = 17; break;
case 0xffa080b0: code = 0x16581; n_bits = 17; break;
case 0xff50b010: code = 0x165a1; n_bits = 17; break;
case 0xffc00040: code = 0x165c1; n_bits = 17; break;
case 0xff601010: code = 0x16601; n_bits = 17; break;
case 0xff20b060: code = 0x16609; n_bits = 17; break;
case 0xffc0b080: code = 0x16621; n_bits = 17; break;
case 0xff00a020: code = 0x16641; n_bits = 17; break;
case 0xffd0d0f0: code = 0x16681; n_bits = 17; break;
case 0xff50d0e0: code = 0x166a1; n_bits = 17; break;
case 0xff90d090: code = 0x166c1; n_bits = 17; break;
case 0xff80a090: code = 0x16701; n_bits = 17; break;
case 0xfff08050: code = 0x16709; n_bits = 17; break;
case 0xff304000: code = 0x16721; n_bits = 17; break;
case 0xff9010b0: code = 0x16741; n_bits = 17; break;
case 0xff5080f0: code = 0x16781; n_bits = 17; break;
case 0xff0090e0: code = 0x167a1; n_bits = 17; break;
case 0xff00e050: code = 0x167c1; n_bits = 17; break;
case 0xffe050c0: code = 0x16801; n_bits = 17; break;
case 0xffd040d0: code = 0x16809; n_bits = 17; break;
case 0xff705090: code = 0x16821; n_bits = 17; break;
case 0xff603080: code = 0x16841; n_bits = 17; break;
case 0xff503080: code = 0x16881; n_bits = 17; break;
case 0xfff0e0f0: code = 0x16889; n_bits = 17; break;
case 0xff1010a0: code = 0x168a1; n_bits = 17; break;
case 0xff70f0b0: code = 0x168c1; n_bits = 17; break;
case 0xff406040: code = 0x16901; n_bits = 17; break;
case 0xff70d000: code = 0x16909; n_bits = 17; break;
case 0xfff01060: code = 0x16921; n_bits = 17; break;
case 0xff7000c0: code = 0x16941; n_bits = 17; break;
case 0xff506040: code = 0x16981; n_bits = 17; break;
case 0xffb05040: code = 0x169a1; n_bits = 17; break;
case 0xff60b030: code = 0x169c1; n_bits = 17; break;
case 0xff508060: code = 0x16a01; n_bits = 17; break;
case 0xff704040: code = 0x16a09; n_bits = 17; break;
case 0xff80e0c0: code = 0x16a21; n_bits = 17; break;
case 0xff30b0b0: code = 0x16a41; n_bits = 17; break;
case 0xffe08070: code = 0x16a81; n_bits = 17; break;
case 0xff002020: code = 0x16aa1; n_bits = 17; break;
case 0xffb08030: code = 0x16ac1; n_bits = 17; break;
case 0xff4040d0: code = 0x16b01; n_bits = 17; break;
case 0xff40b0d0: code = 0x16b09; n_bits = 17; break;
case 0xffd0e080: code = 0x16b21; n_bits = 17; break;
case 0xff50b0a0: code = 0x16b41; n_bits = 17; break;
case 0xfff030a0: code = 0x16b81; n_bits = 17; break;
case 0xffa020f0: code = 0x16ba1; n_bits = 17; break;
case 0xffa0a060: code = 0x16bc1; n_bits = 17; break;
case 0xffb080a0: code = 0x16c01; n_bits = 17; break;
case 0xff5090c0: code = 0x16c09; n_bits = 17; break;
case 0xff4000e0: code = 0x16c21; n_bits = 17; break;
case 0xff6010c0: code = 0x16c41; n_bits = 17; break;
case 0xffe01000: code = 0x16c81; n_bits = 17; break;
case 0xff00b0e0: code = 0x16c89; n_bits = 17; break;
case 0xff107070: code = 0x16ca1; n_bits = 17; break;
case 0xff4020d0: code = 0x16cc1; n_bits = 17; break;
case 0xffc0b070: code = 0x16d01; n_bits = 17; break;
case 0xffe07050: code = 0x16d09; n_bits = 17; break;
case 0xfff080d0: code = 0x16d21; n_bits = 17; break;
case 0xff1050f0: code = 0x16d41; n_bits = 17; break;
case 0xff40c020: code = 0x16d81; n_bits = 17; break;
case 0xff10a030: code = 0x16da1; n_bits = 17; break;
case 0xffb05080: code = 0x16dc1; n_bits = 17; break;
case 0xff408000: code = 0x16e01; n_bits = 17; break;
case 0xff809040: code = 0x16e09; n_bits = 17; break;
case 0xfff0a070: code = 0x16e21; n_bits = 17; break;
case 0xffe07060: code = 0x16e41; n_bits = 17; break;
case 0xff204030: code = 0x16e81; n_bits = 17; break;
case 0xff30b0c0: code = 0x16ea1; n_bits = 17; break;
case 0xffd04080: code = 0x16ec1; n_bits = 17; break;
case 0xffe070f0: code = 0x16f01; n_bits = 17; break;
case 0xfff07080: code = 0x16f09; n_bits = 17; break;
case 0xff20e080: code = 0x16f21; n_bits = 17; break;
case 0xff5000d0: code = 0x16f41; n_bits = 17; break;
case 0xfff01010: code = 0x16f81; n_bits = 17; break;
case 0xff10e0a0: code = 0x16fa1; n_bits = 17; break;
case 0xff802080: code = 0x16fc1; n_bits = 17; break;
case 0xff901000: code = 0x17001; n_bits = 17; break;
case 0xff9070d0: code = 0x17009; n_bits = 17; break;
case 0xff403040: code = 0x17021; n_bits = 17; break;
case 0xff203040: code = 0x17041; n_bits = 17; break;
case 0xffe0d070: code = 0x17081; n_bits = 17; break;
case 0xffa08090: code = 0x17089; n_bits = 17; break;
case 0xff60d060: code = 0x170a1; n_bits = 17; break;
case 0xff905060: code = 0x170c1; n_bits = 17; break;
case 0xff4090d0: code = 0x17101; n_bits = 17; break;
case 0xff9080d0: code = 0x17109; n_bits = 17; break;
case 0xff9030c0: code = 0x17121; n_bits = 17; break;
case 0xff50f020: code = 0x17141; n_bits = 17; break;
case 0xffc070d0: code = 0x17181; n_bits = 17; break;
case 0xff707080: code = 0x171a1; n_bits = 17; break;
case 0xff008040: code = 0x171c1; n_bits = 17; break;
case 0xffd0d060: code = 0x17201; n_bits = 17; break;
case 0xff4070d0: code = 0x17209; n_bits = 17; break;
case 0xff90a000: code = 0x17221; n_bits = 17; break;
case 0xffc0b010: code = 0x17241; n_bits = 17; break;
case 0xffd0e0e0: code = 0x17281; n_bits = 17; break;
case 0xff6060c0: code = 0x172a1; n_bits = 17; break;
case 0xff20f070: code = 0x172c1; n_bits = 17; break;
case 0xffd04030: code = 0x17301; n_bits = 17; break;
case 0xffd0b030: code = 0x17309; n_bits = 17; break;
case 0xff00b0d0: code = 0x17321; n_bits = 17; break;
case 0xffb08050: code = 0x17341; n_bits = 17; break;
case 0xff900040: code = 0x17381; n_bits = 17; break;
case 0xffb01010: code = 0x173a1; n_bits = 17; break;
case 0xffc0c070: code = 0x173c1; n_bits = 17; break;
case 0xff1020d0: code = 0x17401; n_bits = 17; break;
case 0xff40d090: code = 0x17409; n_bits = 17; break;
case 0xff40a0b0: code = 0x17421; n_bits = 17; break;
case 0xff50a0a0: code = 0x17441; n_bits = 17; break;
case 0xffa020d0: code = 0x17481; n_bits = 17; break;
case 0xffd0e070: code = 0x17489; n_bits = 17; break;
case 0xffe010f0: code = 0x174a1; n_bits = 17; break;
case 0xff208020: code = 0x174c1; n_bits = 17; break;
case 0xff4070e0: code = 0x17501; n_bits = 17; break;
case 0xffc09060: code = 0x17509; n_bits = 17; break;
case 0xff70a000: code = 0x17521; n_bits = 17; break;
case 0xff80f0b0: code = 0x17541; n_bits = 17; break;
case 0xffa0e010: code = 0x17581; n_bits = 17; break;
case 0xffb030a0: code = 0x175a1; n_bits = 17; break;
case 0xff103040: code = 0x175c1; n_bits = 17; break;
case 0xff909010: code = 0x17601; n_bits = 17; break;
case 0xff60d0e0: code = 0x17609; n_bits = 17; break;
case 0xffe09070: code = 0x17621; n_bits = 17; break;
case 0xfff070c0: code = 0x17641; n_bits = 17; break;
case 0xff303090: code = 0x17681; n_bits = 17; break;
case 0xff80e090: code = 0x176a1; n_bits = 17; break;
case 0xffc09010: code = 0x176c1; n_bits = 17; break;
case 0xff3090e0: code = 0x17701; n_bits = 17; break;
case 0xffb000f0: code = 0x17709; n_bits = 17; break;
case 0xff60c000: code = 0x17721; n_bits = 17; break;
case 0xff6060d0: code = 0x17741; n_bits = 17; break;
case 0xff90f080: code = 0x17781; n_bits = 17; break;
case 0xffa0e000: code = 0x177a1; n_bits = 17; break;
case 0xffb0f080: code = 0x177c1; n_bits = 17; break;
case 0xffc0d0e0: code = 0x17801; n_bits = 17; break;
case 0xffd0d0e0: code = 0x17809; n_bits = 17; break;
case 0xff70a0a0: code = 0x17821; n_bits = 17; break;
case 0xffc05060: code = 0x17841; n_bits = 17; break;
case 0xffa0f000: code = 0x17881; n_bits = 17; break;
case 0xff7090f0: code = 0x17889; n_bits = 17; break;
case 0xffb090f0: code = 0x178a1; n_bits = 17; break;
case 0xff609000: code = 0x178c1; n_bits = 17; break;
case 0xffa0e050: code = 0x17901; n_bits = 17; break;
case 0xff30f080: code = 0x17909; n_bits = 17; break;
case 0xff103010: code = 0x17921; n_bits = 17; break;
case 0xff905030: code = 0x17941; n_bits = 17; break;
case 0xffa050f0: code = 0x17981; n_bits = 17; break;
case 0xffd03030: code = 0x179a1; n_bits = 17; break;
case 0xffd0b000: code = 0x179c1; n_bits = 17; break;
case 0xfff05080: code = 0x17a01; n_bits = 17; break;
case 0xff8070d0: code = 0x17a09; n_bits = 17; break;
case 0xff8040f0: code = 0x17a21; n_bits = 17; break;
case 0xffc0a040: code = 0x17a41; n_bits = 17; break;
case 0xff704070: code = 0x17a81; n_bits = 17; break;
case 0xffa050e0: code = 0x17aa1; n_bits = 17; break;
case 0xff4060c0: code = 0x17ac1; n_bits = 17; break;
case 0xff70a0c0: code = 0x17b01; n_bits = 17; break;
case 0xffd0a060: code = 0x17b09; n_bits = 17; break;
case 0xff4000c0: code = 0x17b21; n_bits = 17; break;
case 0xffc0b0e0: code = 0x17b41; n_bits = 17; break;
case 0xff301000: code = 0x17b81; n_bits = 17; break;
case 0xff50a0f0: code = 0x17ba1; n_bits = 17; break;
case 0xff804020: code = 0x17bc1; n_bits = 17; break;
case 0xff407070: code = 0x17c01; n_bits = 17; break;
case 0xffe0f0b0: code = 0x17c09; n_bits = 17; break;
case 0xffd08070: code = 0x17c21; n_bits = 17; break;
case 0xff80f040: code = 0x17c41; n_bits = 17; break;
case 0xff70f040: code = 0x17c81; n_bits = 17; break;
case 0xfff0c060: code = 0x17c89; n_bits = 17; break;
case 0xfff080b0: code = 0x17ca1; n_bits = 17; break;
case 0xffc0e030: code = 0x17cc1; n_bits = 17; break;
case 0xff703070: code = 0x17d01; n_bits = 17; break;
case 0xffa0a030: code = 0x17d09; n_bits = 17; break;
case 0xff2020c0: code = 0x17d21; n_bits = 17; break;
case 0xff5030d0: code = 0x17d41; n_bits = 17; break;
case 0xff601050: code = 0x17d81; n_bits = 17; break;
case 0xff3040e0: code = 0x17da1; n_bits = 17; break;
case 0xff200010: code = 0x17dc1; n_bits = 17; break;
case 0xffb0b040: code = 0x17e01; n_bits = 17; break;
case 0xffd07020: code = 0x17e09; n_bits = 17; break;
case 0xffd04040: code = 0x17e21; n_bits = 17; break;
case 0xff602060: code = 0x17e41; n_bits = 17; break;
case 0xff7020b0: code = 0x17e81; n_bits = 17; break;
case 0xff908020: code = 0x17ea1; n_bits = 17; break;
case 0xfff02070: code = 0x17ec1; n_bits = 17; break;
case 0xffd000f0: code = 0x17f01; n_bits = 17; break;
case 0xffd0b090: code = 0x17f09; n_bits = 17; break;
case 0xfff030d0: code = 0x17f21; n_bits = 17; break;
case 0xff705040: code = 0x17f41; n_bits = 17; break;
case 0xffe0f080: code = 0x17f81; n_bits = 17; break;
case 0xff60d070: code = 0x17fa1; n_bits = 17; break;
case 0xffd060f0: code = 0x17fc1; n_bits = 17; break;
case 0xffa0c030: code = 0x18001; n_bits = 17; break;
case 0xff6050d0: code = 0x18009; n_bits = 17; break;
case 0xfff0b010: code = 0x18021; n_bits = 17; break;
case 0xfff07050: code = 0x18041; n_bits = 17; break;
case 0xff00a010: code = 0x18081; n_bits = 17; break;
case 0xffa0e0b0: code = 0x18089; n_bits = 17; break;
case 0xffc000b0: code = 0x180a1; n_bits = 17; break;
case 0xff80b0d0: code = 0x180c1; n_bits = 17; break;
case 0xffd00020: code = 0x18101; n_bits = 17; break;
case 0xffe010a0: code = 0x18109; n_bits = 17; break;
case 0xff6010d0: code = 0x18121; n_bits = 17; break;
case 0xff007050: code = 0x18141; n_bits = 17; break;
case 0xff00e010: code = 0x18181; n_bits = 17; break;
case 0xffa020a0: code = 0x181a1; n_bits = 17; break;
case 0xff400090: code = 0x181c1; n_bits = 17; break;
case 0xffd04050: code = 0x18201; n_bits = 17; break;
case 0xffb0e0a0: code = 0x18209; n_bits = 17; break;
case 0xffa05050: code = 0x18221; n_bits = 17; break;
case 0xff305020: code = 0x18241; n_bits = 17; break;
case 0xff20c010: code = 0x18281; n_bits = 17; break;
case 0xff705050: code = 0x182a1; n_bits = 17; break;
case 0xffd080b0: code = 0x182c1; n_bits = 17; break;
case 0xff108010: code = 0x18301; n_bits = 17; break;
case 0xffc08060: code = 0x18309; n_bits = 17; break;
case 0xff20d0f0: code = 0x18321; n_bits = 17; break;
case 0xff103070: code = 0x18341; n_bits = 17; break;
case 0xffa03060: code = 0x18381; n_bits = 17; break;
case 0xffd0a0a0: code = 0x183a1; n_bits = 17; break;
case 0xff10f0f0: code = 0x183c1; n_bits = 17; break;
case 0xffa0e0f0: code = 0x18401; n_bits = 17; break;
case 0xffa0a0c0: code = 0x18409; n_bits = 17; break;
case 0xffa070e0: code = 0x18421; n_bits = 17; break;
case 0xff904050: code = 0x18441; n_bits = 17; break;
case 0xffd030f0: code = 0x18481; n_bits = 17; break;
case 0xffe050b0: code = 0x18489; n_bits = 17; break;
case 0xffb0d0a0: code = 0x184a1; n_bits = 17; break;
case 0xff808060: code = 0x184c1; n_bits = 17; break;
case 0xffc03030: code = 0x18501; n_bits = 17; break;
case 0xff1060f0: code = 0x18509; n_bits = 17; break;
case 0xff10d080: code = 0x18521; n_bits = 17; break;
case 0xff90e040: code = 0x18541; n_bits = 17; break;
case 0xff809020: code = 0x18579; n_bits = 17; break;
case 0xff9040e0: code = 0x18581; n_bits = 17; break;
case 0xff40d0b0: code = 0x185a1; n_bits = 17; break;
case 0xffb050b0: code = 0x185c1; n_bits = 17; break;
case 0xff204070: code = 0x18601; n_bits = 17; break;
case 0xff401010: code = 0x18609; n_bits = 17; break;
case 0xffb0c0c0: code = 0x18621; n_bits = 17; break;
case 0xff907020: code = 0x18641; n_bits = 17; break;
case 0xff30d010: code = 0x18681; n_bits = 17; break;
case 0xfff06020: code = 0x186a1; n_bits = 17; break;
case 0xff60e0b0: code = 0x186c1; n_bits = 17; break;
case 0xff205020: code = 0x18701; n_bits = 17; break;
case 0xff20c0d0: code = 0x18709; n_bits = 17; break;
case 0xfff000d0: code = 0x18721; n_bits = 17; break;
case 0xff9080c0: code = 0x18741; n_bits = 17; break;
case 0xffb05030: code = 0x18781; n_bits = 17; break;
case 0xffd08010: code = 0x187a1; n_bits = 17; break;
case 0xff50f060: code = 0x187c1; n_bits = 17; break;
case 0xff40e0f0: code = 0x18801; n_bits = 17; break;
case 0xffd0e0b0: code = 0x18809; n_bits = 17; break;
case 0xff2040f0: code = 0x18821; n_bits = 17; break;
case 0xff30b030: code = 0x18841; n_bits = 17; break;
case 0xff20d0a0: code = 0x18881; n_bits = 17; break;
case 0xff109080: code = 0x18889; n_bits = 17; break;
case 0xff6090a0: code = 0x188a1; n_bits = 17; break;
case 0xff50f040: code = 0x188c1; n_bits = 17; break;
case 0xffb07040: code = 0x18901; n_bits = 17; break;
case 0xff3000c0: code = 0x18909; n_bits = 17; break;
case 0xffa0e080: code = 0x18921; n_bits = 17; break;
case 0xfff00020: code = 0x18941; n_bits = 17; break;
case 0xff507030: code = 0x18981; n_bits = 17; break;
case 0xffb0f020: code = 0x189a1; n_bits = 17; break;
case 0xffb0d010: code = 0x189c1; n_bits = 17; break;
case 0xfff02040: code = 0x18a01; n_bits = 17; break;
case 0xffd0a080: code = 0x18a09; n_bits = 17; break;
case 0xffa04080: code = 0x18a21; n_bits = 17; break;
case 0xffd05090: code = 0x18a41; n_bits = 17; break;
case 0xff906090: code = 0x18a81; n_bits = 17; break;
case 0xff608060: code = 0x18aa1; n_bits = 17; break;
case 0xfff0d020: code = 0x18ac1; n_bits = 17; break;
case 0xff9060b0: code = 0x18b01; n_bits = 17; break;
case 0xff90d0b0: code = 0x18b09; n_bits = 17; break;
case 0xff806070: code = 0x18b21; n_bits = 17; break;
case 0xff40d040: code = 0x18b41; n_bits = 17; break;
case 0xffe0f040: code = 0x18b81; n_bits = 17; break;
case 0xff703090: code = 0x18ba1; n_bits = 17; break;
case 0xff2010b0: code = 0x18bc1; n_bits = 17; break;
case 0xffe00080: code = 0x18c01; n_bits = 17; break;
case 0xff10a070: code = 0x18c09; n_bits = 17; break;
case 0xff9010f0: code = 0x18c21; n_bits = 17; break;
case 0xffe0c060: code = 0x18c41; n_bits = 17; break;
case 0xff700080: code = 0x18c81; n_bits = 17; break;
case 0xff008060: code = 0x18c89; n_bits = 17; break;
case 0xff00e090: code = 0x18ca1; n_bits = 17; break;
case 0xff9030e0: code = 0x18cc1; n_bits = 17; break;
case 0xff00b010: code = 0x18d01; n_bits = 17; break;
case 0xffb04060: code = 0x18d09; n_bits = 17; break;
case 0xff50b040: code = 0x18d21; n_bits = 17; break;
case 0xffc0e050: code = 0x18d41; n_bits = 17; break;
case 0xff0060d0: code = 0x18d81; n_bits = 17; break;
case 0xffe0f0d0: code = 0x18da1; n_bits = 17; break;
case 0xff402030: code = 0x18dc1; n_bits = 17; break;
case 0xff0040d0: code = 0x18e01; n_bits = 17; break;
case 0xff106040: code = 0x18e09; n_bits = 17; break;
case 0xffb06050: code = 0x18e21; n_bits = 17; break;
case 0xffc0e0e0: code = 0x18e41; n_bits = 17; break;
case 0xff706010: code = 0x18e81; n_bits = 17; break;
case 0xff000080: code = 0x18ea1; n_bits = 17; break;
case 0xffa0b0f0: code = 0x18ec1; n_bits = 17; break;
case 0xff902030: code = 0x18f01; n_bits = 17; break;
case 0xfff0f050: code = 0x18f09; n_bits = 17; break;
case 0xffd0f0c0: code = 0x18f21; n_bits = 17; break;
case 0xffa010e0: code = 0x18f41; n_bits = 17; break;
case 0xff60c060: code = 0x18f81; n_bits = 17; break;
case 0xff6070c0: code = 0x18fa1; n_bits = 17; break;
case 0xff603020: code = 0x18fc1; n_bits = 17; break;
case 0xffe0c0e0: code = 0x19001; n_bits = 17; break;
case 0xfff04060: code = 0x19009; n_bits = 17; break;
case 0xffa09080: code = 0x19021; n_bits = 17; break;
case 0xffa07040: code = 0x19041; n_bits = 17; break;
case 0xff70e0b0: code = 0x19081; n_bits = 17; break;
case 0xff5050a0: code = 0x19089; n_bits = 17; break;
case 0xff8050b0: code = 0x190a1; n_bits = 17; break;
case 0xfff0b0a0: code = 0x190c1; n_bits = 17; break;
case 0xffb03080: code = 0x19101; n_bits = 17; break;
case 0xffd06050: code = 0x19109; n_bits = 17; break;
case 0xff80b070: code = 0x19121; n_bits = 17; break;
case 0xff109090: code = 0x19141; n_bits = 17; break;
case 0xff8080d0: code = 0x19181; n_bits = 17; break;
case 0xff3090b0: code = 0x191a1; n_bits = 17; break;
case 0xff606010: code = 0x191c1; n_bits = 17; break;
case 0xff404010: code = 0x19201; n_bits = 17; break;
case 0xff307090: code = 0x19209; n_bits = 17; break;
case 0xff70e090: code = 0x19221; n_bits = 17; break;
case 0xff405050: code = 0x19241; n_bits = 17; break;
case 0xff0080d0: code = 0x19281; n_bits = 17; break;
case 0xffe0d060: code = 0x192a1; n_bits = 17; break;
case 0xff3040f0: code = 0x192c1; n_bits = 17; break;
case 0xff501050: code = 0x19301; n_bits = 17; break;
case 0xff30f0c0: code = 0x19309; n_bits = 17; break;
case 0xffb00080: code = 0x19321; n_bits = 17; break;
case 0xff408080: code = 0x19341; n_bits = 17; break;
case 0xff80d0b0: code = 0x19381; n_bits = 17; break;
case 0xfff08090: code = 0x193a1; n_bits = 17; break;
case 0xff101080: code = 0x193c1; n_bits = 17; break;
case 0xff509060: code = 0x19401; n_bits = 17; break;
case 0xff70b0e0: code = 0x19409; n_bits = 17; break;
case 0xff90c090: code = 0x19421; n_bits = 17; break;
case 0xff700050: code = 0x19441; n_bits = 17; break;
case 0xff001060: code = 0x19481; n_bits = 17; break;
case 0xff7020a0: code = 0x19489; n_bits = 17; break;
case 0xffb00020: code = 0x194a1; n_bits = 17; break;
case 0xffd0a050: code = 0x194c1; n_bits = 17; break;
case 0xff503010: code = 0x19501; n_bits = 17; break;
case 0xff0070b0: code = 0x19509; n_bits = 17; break;
case 0xff203090: code = 0x19521; n_bits = 17; break;
case 0xffe04000: code = 0x19541; n_bits = 17; break;
case 0xff404050: code = 0x19581; n_bits = 17; break;
case 0xff30c050: code = 0x195a1; n_bits = 17; break;
case 0xff7070e0: code = 0x195c1; n_bits = 17; break;
case 0xff409000: code = 0x19601; n_bits = 17; break;
case 0xffd080e0: code = 0x19609; n_bits = 17; break;
case 0xff908060: code = 0x19621; n_bits = 17; break;
case 0xff102020: code = 0x19641; n_bits = 17; break;
case 0xffa00020: code = 0x19681; n_bits = 17; break;
case 0xff108000: code = 0x196a1; n_bits = 17; break;
case 0xff0070a0: code = 0x196c1; n_bits = 17; break;
case 0xff60d000: code = 0x19701; n_bits = 17; break;
case 0xffc05030: code = 0x19709; n_bits = 17; break;
case 0xffd09080: code = 0x19721; n_bits = 17; break;
case 0xff90a0c0: code = 0x19741; n_bits = 17; break;
case 0xff6080a0: code = 0x19781; n_bits = 17; break;
case 0xff4080b0: code = 0x197a1; n_bits = 17; break;
case 0xff008030: code = 0x197c1; n_bits = 17; break;
case 0xff20a030: code = 0x19801; n_bits = 17; break;
case 0xff30a0f0: code = 0x19809; n_bits = 17; break;
case 0xff00e0d0: code = 0x19821; n_bits = 17; break;
case 0xff4040c0: code = 0x19841; n_bits = 17; break;
case 0xfff0c030: code = 0x19881; n_bits = 17; break;
case 0xff801030: code = 0x19889; n_bits = 17; break;
case 0xff801070: code = 0x198a1; n_bits = 17; break;
case 0xff40c090: code = 0x198c1; n_bits = 17; break;
case 0xff703020: code = 0x19901; n_bits = 17; break;
case 0xffb04090: code = 0x19909; n_bits = 17; break;
case 0xffb02020: code = 0x19921; n_bits = 17; break;
case 0xff60f050: code = 0x19941; n_bits = 17; break;
case 0xffc0e090: code = 0x19981; n_bits = 17; break;
case 0xff802020: code = 0x199a1; n_bits = 17; break;
case 0xff109050: code = 0x199c1; n_bits = 17; break;
case 0xff20b000: code = 0x19a01; n_bits = 17; break;
case 0xffe04010: code = 0x19a09; n_bits = 17; break;
case 0xff50c070: code = 0x19a21; n_bits = 17; break;
case 0xff3060c0: code = 0x19a41; n_bits = 17; break;
case 0xffb05050: code = 0x19a81; n_bits = 17; break;
case 0xff70b0f0: code = 0x19aa1; n_bits = 17; break;
case 0xff004040: code = 0x19ac1; n_bits = 17; break;
case 0xff005020: code = 0x19b01; n_bits = 17; break;
case 0xff709080: code = 0x19b09; n_bits = 17; break;
case 0xfff06040: code = 0x19b21; n_bits = 17; break;
case 0xffb080b0: code = 0x19b41; n_bits = 17; break;
case 0xff209080: code = 0x19b81; n_bits = 17; break;
case 0xffb0a020: code = 0x19ba1; n_bits = 17; break;
case 0xffe0a060: code = 0x19bc1; n_bits = 17; break;
case 0xff7000b0: code = 0x19c01; n_bits = 17; break;
case 0xffa07070: code = 0x19c09; n_bits = 17; break;
case 0xff703000: code = 0x19c21; n_bits = 17; break;
case 0xffe0b090: code = 0x19c41; n_bits = 17; break;
case 0xff90e000: code = 0x19c81; n_bits = 17; break;
case 0xff8020b0: code = 0x19c89; n_bits = 17; break;
case 0xff605020: code = 0x19ca1; n_bits = 17; break;
case 0xff605070: code = 0x19cc1; n_bits = 17; break;
case 0xffe00050: code = 0x19d01; n_bits = 17; break;
case 0xff0060e0: code = 0x19d09; n_bits = 17; break;
case 0xffb0d0d0: code = 0x19d21; n_bits = 17; break;
case 0xff803040: code = 0x19d41; n_bits = 17; break;
case 0xff000070: code = 0x19d81; n_bits = 17; break;
case 0xffc0b0f0: code = 0x19da1; n_bits = 17; break;
case 0xffc0e010: code = 0x19dc1; n_bits = 17; break;
case 0xff3030c0: code = 0x19e01; n_bits = 17; break;
case 0xff4020b0: code = 0x19e09; n_bits = 17; break;
case 0xffd0e020: code = 0x19e21; n_bits = 17; break;
case 0xffb04040: code = 0x19e41; n_bits = 17; break;
case 0xff4030c0: code = 0x19e81; n_bits = 17; break;
case 0xff6010a0: code = 0x19ea1; n_bits = 17; break;
case 0xffb01070: code = 0x19ec1; n_bits = 17; break;
case 0xffe05030: code = 0x19f01; n_bits = 17; break;
case 0xff00c000: code = 0x19f09; n_bits = 17; break;
case 0xfff0d0b0: code = 0x19f21; n_bits = 17; break;
case 0xff30e090: code = 0x19f41; n_bits = 17; break;
case 0xff70f0f0: code = 0x19f81; n_bits = 17; break;
case 0xffa0d030: code = 0x19fa1; n_bits = 17; break;
case 0xfff0f090: code = 0x19fc1; n_bits = 17; break;
case 0xff9000d0: code = 0x1a001; n_bits = 17; break;
case 0xff10c060: code = 0x1a009; n_bits = 17; break;
case 0xfff0b060: code = 0x1a021; n_bits = 17; break;
case 0xffc07000: code = 0x1a041; n_bits = 17; break;
case 0xff90d070: code = 0x1a081; n_bits = 17; break;
case 0xffa040d0: code = 0x1a089; n_bits = 17; break;
case 0xff80c060: code = 0x1a0a1; n_bits = 17; break;
case 0xff3070c0: code = 0x1a0c1; n_bits = 17; break;
case 0xff807020: code = 0x1a101; n_bits = 17; break;
case 0xffa00090: code = 0x1a109; n_bits = 17; break;
case 0xff007040: code = 0x1a121; n_bits = 17; break;
case 0xff3010a0: code = 0x1a141; n_bits = 17; break;
case 0xffa010a0: code = 0x1a181; n_bits = 17; break;
case 0xff207080: code = 0x1a1a1; n_bits = 17; break;
case 0xffa020e0: code = 0x1a1c1; n_bits = 17; break;
case 0xff8000e0: code = 0x1a201; n_bits = 17; break;
case 0xff50b0c0: code = 0x1a209; n_bits = 17; break;
case 0xff6070d0: code = 0x1a221; n_bits = 17; break;
case 0xff709040: code = 0x1a241; n_bits = 17; break;
case 0xff10b000: code = 0x1a281; n_bits = 17; break;
case 0xff7030b0: code = 0x1a2a1; n_bits = 17; break;
case 0xff8060d0: code = 0x1a2c1; n_bits = 17; break;
case 0xffb06040: code = 0x1a301; n_bits = 17; break;
case 0xffb0d040: code = 0x1a309; n_bits = 17; break;
case 0xff400040: code = 0x1a321; n_bits = 17; break;
case 0xffc030a0: code = 0x1a341; n_bits = 17; break;
case 0xff009020: code = 0x1a381; n_bits = 17; break;
case 0xff6030d0: code = 0x1a3a1; n_bits = 17; break;
case 0xff0010b0: code = 0x1a3c1; n_bits = 17; break;
case 0xff606020: code = 0x1a401; n_bits = 17; break;
case 0xff10b040: code = 0x1a409; n_bits = 17; break;
case 0xff90f010: code = 0x1a421; n_bits = 17; break;
case 0xffa0f0b0: code = 0x1a441; n_bits = 17; break;
case 0xffe0b0d0: code = 0x1a481; n_bits = 17; break;
case 0xff70e0d0: code = 0x1a489; n_bits = 17; break;
case 0xff20e020: code = 0x1a4a1; n_bits = 17; break;
case 0xffb02080: code = 0x1a4c1; n_bits = 17; break;
case 0xfff0e000: code = 0x1a501; n_bits = 17; break;
case 0xff4060a0: code = 0x1a509; n_bits = 17; break;
case 0xfff0d060: code = 0x1a521; n_bits = 17; break;
case 0xffb070e0: code = 0x1a541; n_bits = 17; break;
case 0xffe0c080: code = 0x1a581; n_bits = 17; break;
case 0xff006030: code = 0x1a5a1; n_bits = 17; break;
case 0xffe0e090: code = 0x1a5c1; n_bits = 17; break;
case 0xffd060c0: code = 0x1a601; n_bits = 17; break;
case 0xff101090: code = 0x1a609; n_bits = 17; break;
case 0xff60f070: code = 0x1a621; n_bits = 17; break;
case 0xfff0c090: code = 0x1a641; n_bits = 17; break;
case 0xffa0a000: code = 0x1a681; n_bits = 17; break;
case 0xff6050f0: code = 0x1a6a1; n_bits = 17; break;
case 0xff30c040: code = 0x1a6c1; n_bits = 17; break;
case 0xff106020: code = 0x1a701; n_bits = 17; break;
case 0xff00d060: code = 0x1a709; n_bits = 17; break;
case 0xff60f060: code = 0x1a721; n_bits = 17; break;
case 0xff309080: code = 0x1a741; n_bits = 17; break;
case 0xff20f030: code = 0x1a781; n_bits = 17; break;
case 0xff90a090: code = 0x1a7a1; n_bits = 17; break;
case 0xff1080d0: code = 0x1a7c1; n_bits = 17; break;
case 0xff309000: code = 0x1a801; n_bits = 17; break;
case 0xff803070: code = 0x1a809; n_bits = 17; break;
case 0xff8090f0: code = 0x1a821; n_bits = 17; break;
case 0xff505090: code = 0x1a841; n_bits = 17; break;
case 0xff7070f0: code = 0x1a881; n_bits = 17; break;
case 0xff10e060: code = 0x1a889; n_bits = 17; break;
case 0xffd03050: code = 0x1a8a1; n_bits = 17; break;
case 0xffd02010: code = 0x1a8c1; n_bits = 17; break;
case 0xff5000c0: code = 0x1a901; n_bits = 17; break;
case 0xff807080: code = 0x1a909; n_bits = 17; break;
case 0xff10f080: code = 0x1a921; n_bits = 17; break;
case 0xffb020a0: code = 0x1a941; n_bits = 17; break;
case 0xffc05080: code = 0x1a981; n_bits = 17; break;
case 0xff206070: code = 0x1a9a1; n_bits = 17; break;
case 0xffd0c0d0: code = 0x1a9c1; n_bits = 17; break;
case 0xff50d050: code = 0x1aa01; n_bits = 17; break;
case 0xff101070: code = 0x1aa09; n_bits = 17; break;
case 0xff701060: code = 0x1aa21; n_bits = 17; break;
case 0xff40b000: code = 0x1aa41; n_bits = 17; break;
case 0xfff0c0d0: code = 0x1aa81; n_bits = 17; break;
case 0xff60f090: code = 0x1aaa1; n_bits = 17; break;
case 0xff105040: code = 0x1aac1; n_bits = 17; break;
case 0xff601080: code = 0x1ab01; n_bits = 17; break;
case 0xffa020c0: code = 0x1ab09; n_bits = 17; break;
case 0xff1020f0: code = 0x1ab21; n_bits = 17; break;
case 0xff4070b0: code = 0x1ab41; n_bits = 17; break;
case 0xff50b0d0: code = 0x1ab81; n_bits = 17; break;
case 0xff307030: code = 0x1aba1; n_bits = 17; break;
case 0xff803090: code = 0x1abc1; n_bits = 17; break;
case 0xfff0d0e0: code = 0x1ac01; n_bits = 17; break;
case 0xff406030: code = 0x1ac09; n_bits = 17; break;
case 0xffc070e0: code = 0x1ac21; n_bits = 17; break;
case 0xffc050a0: code = 0x1ac41; n_bits = 17; break;
case 0xffa0d060: code = 0x1ac81; n_bits = 17; break;
case 0xff2030a0: code = 0x1ac89; n_bits = 17; break;
case 0xff30f040: code = 0x1aca1; n_bits = 17; break;
case 0xff00f040: code = 0x1acc1; n_bits = 17; break;
case 0xffd0f0d0: code = 0x1ad01; n_bits = 17; break;
case 0xfff0b0b0: code = 0x1ad09; n_bits = 17; break;
case 0xff108040: code = 0x1ad21; n_bits = 17; break;
case 0xff90b030: code = 0x1ad41; n_bits = 17; break;
case 0xff10e0b0: code = 0x1ad81; n_bits = 17; break;
case 0xffe050f0: code = 0x1ada1; n_bits = 17; break;
case 0xffa03070: code = 0x1adc1; n_bits = 17; break;
case 0xff502080: code = 0x1ae01; n_bits = 17; break;
case 0xffe0b0e0: code = 0x1ae09; n_bits = 17; break;
case 0xff0030f0: code = 0x1ae21; n_bits = 17; break;
case 0xfff0b0c0: code = 0x1ae41; n_bits = 17; break;
case 0xffc01020: code = 0x1ae81; n_bits = 17; break;
case 0xff208050: code = 0x1aea1; n_bits = 17; break;
case 0xffa0b040: code = 0x1aec1; n_bits = 17; break;
case 0xff8090c0: code = 0x1af01; n_bits = 17; break;
case 0xff30e050: code = 0x1af09; n_bits = 17; break;
case 0xff908040: code = 0x1af21; n_bits = 17; break;
case 0xfff03060: code = 0x1af41; n_bits = 17; break;
case 0xff60e050: code = 0x1af81; n_bits = 17; break;
case 0xff701000: code = 0x1afa1; n_bits = 17; break;
case 0xffb04080: code = 0x1afc1; n_bits = 17; break;
case 0xff104090: code = 0x1b001; n_bits = 17; break;
case 0xffb060c0: code = 0x1b009; n_bits = 17; break;
case 0xff30b080: code = 0x1b021; n_bits = 17; break;
case 0xff903020: code = 0x1b041; n_bits = 17; break;
case 0xff40a080: code = 0x1b081; n_bits = 17; break;
case 0xffd07000: code = 0x1b089; n_bits = 17; break;
case 0xff903080: code = 0x1b0a1; n_bits = 17; break;
case 0xff2080f0: code = 0x1b0c1; n_bits = 17; break;
case 0xff4090a0: code = 0x1b101; n_bits = 17; break;
case 0xffa03030: code = 0x1b109; n_bits = 17; break;
case 0xff309090: code = 0x1b121; n_bits = 17; break;
case 0xfff0a000: code = 0x1b141; n_bits = 17; break;
case 0xff40f020: code = 0x1b181; n_bits = 17; break;
case 0xff10f050: code = 0x1b1a1; n_bits = 17; break;
case 0xff50a0e0: code = 0x1b1c1; n_bits = 17; break;
case 0xff0000b0: code = 0x1b201; n_bits = 17; break;
case 0xff60f0a0: code = 0x1b209; n_bits = 17; break;
case 0xff40c040: code = 0x1b221; n_bits = 17; break;
case 0xff700020: code = 0x1b241; n_bits = 17; break;
case 0xff50d020: code = 0x1b281; n_bits = 17; break;
case 0xff20b0a0: code = 0x1b2a1; n_bits = 17; break;
case 0xffa06060: code = 0x1b2c1; n_bits = 17; break;
case 0xffa02040: code = 0x1b301; n_bits = 17; break;
case 0xff800040: code = 0x1b309; n_bits = 17; break;
case 0xffd08050: code = 0x1b321; n_bits = 17; break;
case 0xffa030a0: code = 0x1b341; n_bits = 17; break;
case 0xff8030d0: code = 0x1b381; n_bits = 17; break;
case 0xff70d070: code = 0x1b3a1; n_bits = 17; break;
case 0xfff02010: code = 0x1b3c1; n_bits = 17; break;
case 0xff30a0a0: code = 0x1b401; n_bits = 17; break;
case 0xff30f010: code = 0x1b409; n_bits = 17; break;
case 0xff3000b0: code = 0x1b421; n_bits = 17; break;
case 0xffc07010: code = 0x1b441; n_bits = 17; break;
case 0xff90f0f0: code = 0x1b481; n_bits = 17; break;
case 0xff803080: code = 0x1b489; n_bits = 17; break;
case 0xffa08070: code = 0x1b4a1; n_bits = 17; break;
case 0xffd00070: code = 0x1b4c1; n_bits = 17; break;
case 0xffd050c0: code = 0x1b501; n_bits = 17; break;
case 0xffd0d0c0: code = 0x1b509; n_bits = 17; break;
case 0xffb0c000: code = 0x1b521; n_bits = 17; break;
case 0xffe020c0: code = 0x1b541; n_bits = 17; break;
case 0xff90b010: code = 0x1b581; n_bits = 17; break;
case 0xff80a060: code = 0x1b5a1; n_bits = 17; break;
case 0xff209070: code = 0x1b5c1; n_bits = 17; break;
case 0xff100000: code = 0x1b601; n_bits = 17; break;
case 0xff409060: code = 0x1b609; n_bits = 17; break;
case 0xff401070: code = 0x1b621; n_bits = 17; break;
case 0xff309010: code = 0x1b641; n_bits = 17; break;
case 0xffb0d090: code = 0x1b681; n_bits = 17; break;
case 0xff80c0d0: code = 0x1b6a1; n_bits = 17; break;
case 0xff503090: code = 0x1b6c1; n_bits = 17; break;
case 0xff206050: code = 0x1b701; n_bits = 17; break;
case 0xff806050: code = 0x1b709; n_bits = 17; break;
case 0xffc05020: code = 0x1b721; n_bits = 17; break;
case 0xff8050c0: code = 0x1b741; n_bits = 17; break;
case 0xffc060a0: code = 0x1b781; n_bits = 17; break;
case 0xff806080: code = 0x1b7a1; n_bits = 17; break;
case 0xff105070: code = 0x1b7c1; n_bits = 17; break;
case 0xffe000d0: code = 0x1b801; n_bits = 17; break;
case 0xff508020: code = 0x1b809; n_bits = 17; break;
case 0xffb0c020: code = 0x1b821; n_bits = 17; break;
case 0xff90c020: code = 0x1b841; n_bits = 17; break;
case 0xff00b080: code = 0x1b881; n_bits = 17; break;
case 0xff602070: code = 0x1b889; n_bits = 17; break;
case 0xffa00050: code = 0x1b8a1; n_bits = 17; break;
case 0xff20e0e0: code = 0x1b8c1; n_bits = 17; break;
case 0xff0080c0: code = 0x1b901; n_bits = 17; break;
case 0xff406000: code = 0x1b909; n_bits = 17; break;
case 0xff403020: code = 0x1b921; n_bits = 17; break;
case 0xff90c0f0: code = 0x1b941; n_bits = 17; break;
case 0xff7000f0: code = 0x1b981; n_bits = 17; break;
case 0xff300040: code = 0x1b9a1; n_bits = 17; break;
case 0xff00b000: code = 0x1b9c1; n_bits = 17; break;
case 0xffb030f0: code = 0x1ba01; n_bits = 17; break;
case 0xffa080d0: code = 0x1ba09; n_bits = 17; break;
case 0xff802050: code = 0x1ba21; n_bits = 17; break;
case 0xff6050b0: code = 0x1ba41; n_bits = 17; break;
case 0xff805000: code = 0x1ba81; n_bits = 17; break;
case 0xff2040c0: code = 0x1baa1; n_bits = 17; break;
case 0xff60a060: code = 0x1bac1; n_bits = 17; break;
case 0xff607030: code = 0x1bb01; n_bits = 17; break;
case 0xffe0e0c0: code = 0x1bb09; n_bits = 17; break;
case 0xff40f080: code = 0x1bb21; n_bits = 17; break;
case 0xff90e0c0: code = 0x1bb41; n_bits = 17; break;
case 0xff00a0c0: code = 0x1bb81; n_bits = 17; break;
case 0xffa03000: code = 0x1bba1; n_bits = 17; break;
case 0xff908080: code = 0x1bbc1; n_bits = 17; break;
case 0xff5010f0: code = 0x1bc01; n_bits = 17; break;
case 0xff70e030: code = 0x1bc09; n_bits = 17; break;
case 0xffe0c0d0: code = 0x1bc21; n_bits = 17; break;
case 0xffb08070: code = 0x1bc41; n_bits = 17; break;
case 0xffc0b050: code = 0x1bc81; n_bits = 17; break;
case 0xff207040: code = 0x1bc89; n_bits = 17; break;
case 0xff5050c0: code = 0x1bca1; n_bits = 17; break;
case 0xff20b040: code = 0x1bcc1; n_bits = 17; break;
case 0xffc0a0d0: code = 0x1bd01; n_bits = 17; break;
case 0xff7060b0: code = 0x1bd09; n_bits = 17; break;
case 0xff40a090: code = 0x1bd21; n_bits = 17; break;
case 0xff604080: code = 0x1bd41; n_bits = 17; break;
case 0xff50a030: code = 0x1bd81; n_bits = 17; break;
case 0xffa01050: code = 0x1bda1; n_bits = 17; break;
case 0xff50b070: code = 0x1bdc1; n_bits = 17; break;
case 0xffc0f0a0: code = 0x1be01; n_bits = 17; break;
case 0xff0090d0: code = 0x1be09; n_bits = 17; break;
case 0xff000090: code = 0x1be21; n_bits = 17; break;
case 0xff708030: code = 0x1be41; n_bits = 17; break;
case 0xff10a080: code = 0x1be81; n_bits = 17; break;
case 0xff4020e0: code = 0x1bea1; n_bits = 17; break;
case 0xffb040a0: code = 0x1bec1; n_bits = 17; break;
case 0xff00d040: code = 0x1bf01; n_bits = 17; break;
case 0xff60d040: code = 0x1bf09; n_bits = 17; break;
case 0xff0080e0: code = 0x1bf21; n_bits = 17; break;
case 0xffc09050: code = 0x1bf41; n_bits = 17; break;
case 0xff308070: code = 0x1bf81; n_bits = 17; break;
case 0xffb070b0: code = 0x1bfa1; n_bits = 17; break;
case 0xff8060e0: code = 0x1bfc1; n_bits = 17; break;
case 0xff004060: code = 0x1c001; n_bits = 17; break;
case 0xff6090c0: code = 0x1c009; n_bits = 17; break;
case 0xffc08080: code = 0x1c021; n_bits = 17; break;
case 0xffd060d0: code = 0x1c041; n_bits = 17; break;
case 0xff30c030: code = 0x1c081; n_bits = 17; break;
case 0xff103020: code = 0x1c089; n_bits = 17; break;
case 0xffa010f0: code = 0x1c0a1; n_bits = 17; break;
case 0xff907060: code = 0x1c0c1; n_bits = 17; break;
case 0xff505000: code = 0x1c101; n_bits = 17; break;
case 0xffa0c070: code = 0x1c109; n_bits = 17; break;
case 0xff80e0f0: code = 0x1c121; n_bits = 17; break;
case 0xffd02030: code = 0x1c141; n_bits = 17; break;
case 0xffc0c0e0: code = 0x1c181; n_bits = 17; break;
case 0xff00f020: code = 0x1c1a1; n_bits = 17; break;
case 0xff4010a0: code = 0x1c1c1; n_bits = 17; break;
case 0xff10e030: code = 0x1c201; n_bits = 17; break;
case 0xffa08030: code = 0x1c209; n_bits = 17; break;
case 0xff806090: code = 0x1c221; n_bits = 17; break;
case 0xff106060: code = 0x1c241; n_bits = 17; break;
case 0xffa05020: code = 0x1c281; n_bits = 17; break;
case 0xff200090: code = 0x1c2a1; n_bits = 17; break;
case 0xff2000b0: code = 0x1c2c1; n_bits = 17; break;
case 0xff3050f0: code = 0x1c301; n_bits = 17; break;
case 0xff6030a0: code = 0x1c309; n_bits = 17; break;
case 0xffd09020: code = 0x1c321; n_bits = 17; break;
case 0xff90c080: code = 0x1c341; n_bits = 17; break;
case 0xff1030a0: code = 0x1c381; n_bits = 17; break;
case 0xff50b030: code = 0x1c3a1; n_bits = 17; break;
case 0xffa0a090: code = 0x1c3c1; n_bits = 17; break;
case 0xff909040: code = 0x1c401; n_bits = 17; break;
case 0xff802000: code = 0x1c409; n_bits = 17; break;
case 0xfff070d0: code = 0x1c421; n_bits = 17; break;
case 0xff40a070: code = 0x1c441; n_bits = 17; break;
case 0xff503040: code = 0x1c481; n_bits = 17; break;
case 0xff309030: code = 0x1c489; n_bits = 17; break;
case 0xffc04080: code = 0x1c4a1; n_bits = 17; break;
case 0xff70a040: code = 0x1c4c1; n_bits = 17; break;
case 0xff50f080: code = 0x1c501; n_bits = 17; break;
case 0xff60e070: code = 0x1c509; n_bits = 17; break;
case 0xff704050: code = 0x1c521; n_bits = 17; break;
case 0xff3060b0: code = 0x1c541; n_bits = 17; break;
case 0xfff02080: code = 0x1c579; n_bits = 17; break;
case 0xff002010: code = 0x1c581; n_bits = 17; break;
case 0xff20e0f0: code = 0x1c5a1; n_bits = 17; break;
case 0xffb0e070: code = 0x1c5c1; n_bits = 17; break;
case 0xff40e0c0: code = 0x1c601; n_bits = 17; break;
case 0xffc090c0: code = 0x1c609; n_bits = 17; break;
case 0xffe0c0a0: code = 0x1c621; n_bits = 17; break;
case 0xff708060: code = 0x1c641; n_bits = 17; break;
case 0xff50e0c0: code = 0x1c681; n_bits = 17; break;
case 0xffd07060: code = 0x1c6a1; n_bits = 17; break;
case 0xff7050b0: code = 0x1c6c1; n_bits = 17; break;
case 0xff006060: code = 0x1c701; n_bits = 17; break;
case 0xff704020: code = 0x1c709; n_bits = 17; break;
case 0xffa0d070: code = 0x1c721; n_bits = 17; break;
case 0xff30c060: code = 0x1c741; n_bits = 17; break;
case 0xff3000a0: code = 0x1c781; n_bits = 17; break;
case 0xff90e020: code = 0x1c7a1; n_bits = 17; break;
case 0xff80d030: code = 0x1c7c1; n_bits = 17; break;
case 0xffd070b0: code = 0x1c801; n_bits = 17; break;
case 0xffb0f0f0: code = 0x1c809; n_bits = 17; break;
case 0xfff000b0: code = 0x1c821; n_bits = 17; break;
case 0xff80b050: code = 0x1c841; n_bits = 17; break;
case 0xffe03090: code = 0x1c881; n_bits = 17; break;
case 0xff502040: code = 0x1c889; n_bits = 17; break;
case 0xff5050d0: code = 0x1c8a1; n_bits = 17; break;
case 0xff603050: code = 0x1c8c1; n_bits = 17; break;
case 0xff60e010: code = 0x1c901; n_bits = 17; break;
case 0xff20f050: code = 0x1c909; n_bits = 17; break;
case 0xff1000f0: code = 0x1c921; n_bits = 17; break;
case 0xff908090: code = 0x1c941; n_bits = 17; break;
case 0xffe04040: code = 0x1c981; n_bits = 17; break;
case 0xff40e040: code = 0x1c9a1; n_bits = 17; break;
case 0xffd0b0f0: code = 0x1c9c1; n_bits = 17; break;
case 0xff80b080: code = 0x1ca01; n_bits = 17; break;
case 0xff80b000: code = 0x1ca09; n_bits = 17; break;
case 0xff408020: code = 0x1ca21; n_bits = 17; break;
case 0xffb060d0: code = 0x1ca41; n_bits = 17; break;
case 0xff10f0a0: code = 0x1ca81; n_bits = 17; break;
case 0xff9050b0: code = 0x1caa1; n_bits = 17; break;
case 0xff6080e0: code = 0x1cac1; n_bits = 17; break;
case 0xff20f0f0: code = 0x1cb01; n_bits = 17; break;
case 0xff70e0f0: code = 0x1cb09; n_bits = 17; break;
case 0xff207030: code = 0x1cb21; n_bits = 17; break;
case 0xff008010: code = 0x1cb41; n_bits = 17; break;
case 0xffe09020: code = 0x1cb81; n_bits = 17; break;
case 0xffb010a0: code = 0x1cba1; n_bits = 17; break;
case 0xff90f0d0: code = 0x1cbc1; n_bits = 17; break;
case 0xff80d040: code = 0x1cc01; n_bits = 17; break;
case 0xff2030e0: code = 0x1cc09; n_bits = 17; break;
case 0xffe0d0a0: code = 0x1cc21; n_bits = 17; break;
case 0xff009090: code = 0x1cc41; n_bits = 17; break;
case 0xffd030c0: code = 0x1cc81; n_bits = 17; break;
case 0xff8020d0: code = 0x1cc89; n_bits = 17; break;
case 0xff4000b0: code = 0x1cca1; n_bits = 17; break;
case 0xff1070d0: code = 0x1ccc1; n_bits = 17; break;
case 0xff407040: code = 0x1cd01; n_bits = 17; break;
case 0xff10a000: code = 0x1cd09; n_bits = 17; break;
case 0xffe0e050: code = 0x1cd21; n_bits = 17; break;
case 0xffa0f090: code = 0x1cd41; n_bits = 17; break;
case 0xff504080: code = 0x1cd81; n_bits = 17; break;
case 0xff1090c0: code = 0x1cda1; n_bits = 17; break;
case 0xff70d060: code = 0x1cdc1; n_bits = 17; break;
case 0xff0040e0: code = 0x1ce01; n_bits = 17; break;
case 0xff000030: code = 0x1ce09; n_bits = 17; break;
case 0xff40f090: code = 0x1ce21; n_bits = 17; break;
case 0xff702080: code = 0x1ce41; n_bits = 17; break;
case 0xff80a050: code = 0x1ce81; n_bits = 17; break;
case 0xff3020b0: code = 0x1cea1; n_bits = 17; break;
case 0xffc0a000: code = 0x1cec1; n_bits = 17; break;
case 0xffb0e0e0: code = 0x1cf01; n_bits = 17; break;
case 0xff4050f0: code = 0x1cf09; n_bits = 17; break;
case 0xffb07000: code = 0x1cf21; n_bits = 17; break;
case 0xffb08080: code = 0x1cf41; n_bits = 17; break;
case 0xff801040: code = 0x1cf81; n_bits = 17; break;
case 0xfff0f010: code = 0x1cfa1; n_bits = 17; break;
case 0xffb050a0: code = 0x1cfc1; n_bits = 17; break;
case 0xffc060e0: code = 0x1d001; n_bits = 17; break;
case 0xffe00000: code = 0x1d009; n_bits = 17; break;
case 0xffd020c0: code = 0x1d021; n_bits = 17; break;
case 0xfff09050: code = 0x1d041; n_bits = 17; break;
case 0xff5060e0: code = 0x1d081; n_bits = 17; break;
case 0xfff0f0c0: code = 0x1d089; n_bits = 17; break;
case 0xffe08080: code = 0x1d0a1; n_bits = 17; break;
case 0xffe01060: code = 0x1d0c1; n_bits = 17; break;
case 0xff306010: code = 0x1d101; n_bits = 17; break;
case 0xffb07090: code = 0x1d109; n_bits = 17; break;
case 0xff80f050: code = 0x1d121; n_bits = 17; break;
case 0xffb090b0: code = 0x1d141; n_bits = 17; break;
case 0xff5050b0: code = 0x1d181; n_bits = 17; break;
case 0xff10c030: code = 0x1d1a1; n_bits = 17; break;
case 0xff60f020: code = 0x1d1c1; n_bits = 17; break;
case 0xffb08040: code = 0x1d201; n_bits = 17; break;
case 0xff606090: code = 0x1d209; n_bits = 17; break;
case 0xff9030a0: code = 0x1d221; n_bits = 17; break;
case 0xff40e060: code = 0x1d241; n_bits = 17; break;
case 0xffd0e010: code = 0x1d281; n_bits = 17; break;
case 0xff70b000: code = 0x1d2a1; n_bits = 17; break;
case 0xff40e030: code = 0x1d2c1; n_bits = 17; break;
case 0xffb0f050: code = 0x1d301; n_bits = 17; break;
case 0xff808010: code = 0x1d309; n_bits = 17; break;
case 0xfff07010: code = 0x1d321; n_bits = 17; break;
case 0xffd07010: code = 0x1d341; n_bits = 17; break;
case 0xff308010: code = 0x1d381; n_bits = 17; break;
case 0xff90c030: code = 0x1d3a1; n_bits = 17; break;
case 0xff8050e0: code = 0x1d3c1; n_bits = 17; break;
case 0xffb07030: code = 0x1d401; n_bits = 17; break;
case 0xff80e0b0: code = 0x1d409; n_bits = 17; break;
case 0xff70d0d0: code = 0x1d421; n_bits = 17; break;
case 0xff208040: code = 0x1d441; n_bits = 17; break;
case 0xff307010: code = 0x1d481; n_bits = 17; break;
case 0xff709000: code = 0x1d489; n_bits = 17; break;
case 0xffc07030: code = 0x1d4a1; n_bits = 17; break;
case 0xff50a070: code = 0x1d4c1; n_bits = 17; break;
case 0xff0080f0: code = 0x1d501; n_bits = 17; break;
case 0xff602000: code = 0x1d509; n_bits = 17; break;
case 0xffe0f020: code = 0x1d521; n_bits = 17; break;
case 0xff703010: code = 0x1d541; n_bits = 17; break;
case 0xff40d060: code = 0x1d581; n_bits = 17; break;
case 0xfff01020: code = 0x1d5a1; n_bits = 17; break;
case 0xff302000: code = 0x1d5c1; n_bits = 17; break;
case 0xff5050e0: code = 0x1d601; n_bits = 17; break;
case 0xff501040: code = 0x1d609; n_bits = 17; break;
case 0xff7030c0: code = 0x1d621; n_bits = 17; break;
case 0xff60b060: code = 0x1d641; n_bits = 17; break;
case 0xff309060: code = 0x1d681; n_bits = 17; break;
case 0xffc0c010: code = 0x1d6a1; n_bits = 17; break;
case 0xff103080: code = 0x1d6c1; n_bits = 17; break;
case 0xffb0a0d0: code = 0x1d701; n_bits = 17; break;
case 0xff50e070: code = 0x1d709; n_bits = 17; break;
case 0xff208070: code = 0x1d721; n_bits = 17; break;
case 0xffd070f0: code = 0x1d741; n_bits = 17; break;
case 0xff809000: code = 0x1d781; n_bits = 17; break;
case 0xff2090f0: code = 0x1d7a1; n_bits = 17; break;
case 0xff304030: code = 0x1d7c1; n_bits = 17; break;
case 0xfff0f020: code = 0x1d801; n_bits = 17; break;
case 0xff80a070: code = 0x1d809; n_bits = 17; break;
case 0xff0040f0: code = 0x1d821; n_bits = 17; break;
case 0xffc0f050: code = 0x1d841; n_bits = 17; break;
case 0xffc090a0: code = 0x1d881; n_bits = 17; break;
case 0xffa03010: code = 0x1d889; n_bits = 17; break;
case 0xff4030f0: code = 0x1d8a1; n_bits = 17; break;
case 0xff20d0d0: code = 0x1d8c1; n_bits = 17; break;
case 0xff10f0c0: code = 0x1d901; n_bits = 17; break;
case 0xff60e0c0: code = 0x1d909; n_bits = 17; break;
case 0xffa0b090: code = 0x1d921; n_bits = 17; break;
case 0xff407080: code = 0x1d941; n_bits = 17; break;
case 0xff400080: code = 0x1d981; n_bits = 17; break;
case 0xfff0b0f0: code = 0x1d9a1; n_bits = 17; break;
case 0xffa0e040: code = 0x1d9c1; n_bits = 17; break;
case 0xff9060c0: code = 0x1da01; n_bits = 17; break;
case 0xffc05050: code = 0x1da09; n_bits = 17; break;
case 0xffc02070: code = 0x1da21; n_bits = 17; break;
case 0xff804070: code = 0x1da41; n_bits = 17; break;
case 0xff103030: code = 0x1da81; n_bits = 17; break;
case 0xff00b030: code = 0x1daa1; n_bits = 17; break;
case 0xff407090: code = 0x1dac1; n_bits = 17; break;
case 0xffa0a020: code = 0x1db01; n_bits = 17; break;
case 0xffe060e0: code = 0x1db09; n_bits = 17; break;
case 0xffc03020: code = 0x1db21; n_bits = 17; break;
case 0xfff05000: code = 0x1db41; n_bits = 17; break;
case 0xff1080f0: code = 0x1db81; n_bits = 17; break;
case 0xffe03060: code = 0x1dba1; n_bits = 17; break;
case 0xff705010: code = 0x1dbc1; n_bits = 17; break;
case 0xff7090c0: code = 0x1dc01; n_bits = 17; break;
case 0xff4050c0: code = 0x1dc09; n_bits = 17; break;
case 0xff00c040: code = 0x1dc21; n_bits = 17; break;
case 0xffd07030: code = 0x1dc41; n_bits = 17; break;
case 0xffd0f0b0: code = 0x1dc81; n_bits = 17; break;
case 0xff6030f0: code = 0x1dc89; n_bits = 17; break;
case 0xffd000e0: code = 0x1dca1; n_bits = 17; break;
case 0xff902000: code = 0x1dcc1; n_bits = 17; break;
case 0xffa04020: code = 0x1dd01; n_bits = 17; break;
case 0xffe060f0: code = 0x1dd09; n_bits = 17; break;
case 0xff60b070: code = 0x1dd21; n_bits = 17; break;
case 0xff8060f0: code = 0x1dd41; n_bits = 17; break;
case 0xffa0b0d0: code = 0x1dd81; n_bits = 17; break;
case 0xff5030a0: code = 0x1dda1; n_bits = 17; break;
case 0xffa0f050: code = 0x1ddc1; n_bits = 17; break;
case 0xff001070: code = 0x1de01; n_bits = 17; break;
case 0xff4070f0: code = 0x1de09; n_bits = 17; break;
case 0xff30b0f0: code = 0x1de21; n_bits = 17; break;
case 0xff40d080: code = 0x1de41; n_bits = 17; break;
case 0xfff01080: code = 0x1de81; n_bits = 17; break;
case 0xff70b020: code = 0x1dea1; n_bits = 17; break;
case 0xffd0d090: code = 0x1dec1; n_bits = 17; break;
case 0xffd050e0: code = 0x1df01; n_bits = 17; break;
case 0xff50d0a0: code = 0x1df09; n_bits = 17; break;
case 0xff2070a0: code = 0x1df21; n_bits = 17; break;
case 0xff8020c0: code = 0x1df41; n_bits = 17; break;
case 0xff9040d0: code = 0x1df81; n_bits = 17; break;
case 0xff80e070: code = 0x1dfa1; n_bits = 17; break;
case 0xff808080: code = 0x1dfc1; n_bits = 17; break;
case 0xff506000: code = 0x1e001; n_bits = 17; break;
case 0xffd0f080: code = 0x1e009; n_bits = 17; break;
case 0xff00c090: code = 0x1e021; n_bits = 17; break;
case 0xffa07080: code = 0x1e041; n_bits = 17; break;
case 0xfff080c0: code = 0x1e081; n_bits = 17; break;
case 0xff408070: code = 0x1e089; n_bits = 17; break;
case 0xff60d0a0: code = 0x1e0a1; n_bits = 17; break;
case 0xff80e0d0: code = 0x1e0c1; n_bits = 17; break;
case 0xff7020e0: code = 0x1e101; n_bits = 17; break;
case 0xfff05010: code = 0x1e109; n_bits = 17; break;
case 0xffe070d0: code = 0x1e121; n_bits = 17; break;
case 0xff80d090: code = 0x1e141; n_bits = 17; break;
case 0xff50f090: code = 0x1e181; n_bits = 17; break;
case 0xffb06010: code = 0x1e1a1; n_bits = 17; break;
case 0xff700090: code = 0x1e1c1; n_bits = 17; break;
case 0xfff050a0: code = 0x1e201; n_bits = 17; break;
case 0xff805050: code = 0x1e209; n_bits = 17; break;
case 0xff10d050: code = 0x1e221; n_bits = 17; break;
case 0xff7070a0: code = 0x1e241; n_bits = 17; break;
case 0xffe070c0: code = 0x1e281; n_bits = 17; break;
case 0xffb09060: code = 0x1e2a1; n_bits = 17; break;
case 0xfff07070: code = 0x1e2c1; n_bits = 17; break;
case 0xff9070b0: code = 0x1e301; n_bits = 17; break;
case 0xffe06080: code = 0x1e309; n_bits = 17; break;
case 0xff50c0e0: code = 0x1e321; n_bits = 17; break;
case 0xffa040e0: code = 0x1e341; n_bits = 17; break;
case 0xff505040: code = 0x1e381; n_bits = 17; break;
case 0xff20c060: code = 0x1e3a1; n_bits = 17; break;
case 0xff60a070: code = 0x1e3c1; n_bits = 17; break;
case 0xff407060: code = 0x1e401; n_bits = 17; break;
case 0xff608050: code = 0x1e409; n_bits = 17; break;
case 0xffb0b050: code = 0x1e421; n_bits = 17; break;
case 0xff90b050: code = 0x1e441; n_bits = 17; break;
case 0xff200020: code = 0x1e481; n_bits = 17; break;
case 0xffc060f0: code = 0x1e489; n_bits = 17; break;
case 0xfff0a050: code = 0x1e4a1; n_bits = 17; break;
case 0xff709030: code = 0x1e4c1; n_bits = 17; break;
case 0xff00a090: code = 0x1e501; n_bits = 17; break;
case 0xffb040b0: code = 0x1e509; n_bits = 17; break;
case 0xff00e0b0: code = 0x1e521; n_bits = 17; break;
case 0xffc0f020: code = 0x1e541; n_bits = 17; break;
case 0xffc0d0c0: code = 0x1e581; n_bits = 17; break;
case 0xff1000b0: code = 0x1e5a1; n_bits = 17; break;
case 0xffd0a030: code = 0x1e5c1; n_bits = 17; break;
case 0xff7040a0: code = 0x1e601; n_bits = 17; break;
case 0xffa0f0a0: code = 0x1e609; n_bits = 17; break;
case 0xffb07020: code = 0x1e621; n_bits = 17; break;
case 0xff3050e0: code = 0x1e641; n_bits = 17; break;
case 0xff80b040: code = 0x1e681; n_bits = 17; break;
case 0xffc03080: code = 0x1e6a1; n_bits = 17; break;
case 0xff101010: code = 0x1e6c1; n_bits = 17; break;
case 0xff0010e0: code = 0x1e701; n_bits = 17; break;
case 0xff507060: code = 0x1e709; n_bits = 17; break;
case 0xff0000a0: code = 0x1e721; n_bits = 17; break;
case 0xffe090d0: code = 0x1e741; n_bits = 17; break;
case 0xff007060: code = 0x1e781; n_bits = 17; break;
case 0xffc010e0: code = 0x1e7a1; n_bits = 17; break;
case 0xff7080f0: code = 0x1e7c1; n_bits = 17; break;
case 0xff200040: code = 0x1e801; n_bits = 17; break;
case 0xff3030b0: code = 0x1e809; n_bits = 17; break;
case 0xffb0d0c0: code = 0x1e821; n_bits = 17; break;
case 0xff509000: code = 0x1e841; n_bits = 17; break;
case 0xff2080d0: code = 0x1e881; n_bits = 17; break;
case 0xffe0a090: code = 0x1e889; n_bits = 17; break;
case 0xff60c090: code = 0x1e8a1; n_bits = 17; break;
case 0xffb03050: code = 0x1e8c1; n_bits = 17; break;
case 0xff40f050: code = 0x1e901; n_bits = 17; break;
case 0xfff04040: code = 0x1e909; n_bits = 17; break;
case 0xfff050d0: code = 0x1e921; n_bits = 17; break;
case 0xff7090d0: code = 0x1e941; n_bits = 17; break;
case 0xff50f050: code = 0x1e981; n_bits = 17; break;
case 0xffa0a0e0: code = 0x1e9a1; n_bits = 17; break;
case 0xff00c060: code = 0x1e9c1; n_bits = 17; break;
case 0xff305080: code = 0x1ea01; n_bits = 17; break;
case 0xff9060d0: code = 0x1ea09; n_bits = 17; break;
case 0xff6060f0: code = 0x1ea21; n_bits = 17; break;
case 0xff702060: code = 0x1ea41; n_bits = 17; break;
case 0xffd04010: code = 0x1ea81; n_bits = 17; break;
case 0xff50d010: code = 0x1eaa1; n_bits = 17; break;
case 0xff406070: code = 0x1eac1; n_bits = 17; break;
case 0xff1010b0: code = 0x1eb01; n_bits = 17; break;
case 0xff700070: code = 0x1eb09; n_bits = 17; break;
case 0xff00b090: code = 0x1eb21; n_bits = 17; break;
case 0xffd090a0: code = 0x1eb41; n_bits = 17; break;
case 0xff70d020: code = 0x1eb81; n_bits = 17; break;
case 0xff108070: code = 0x1eba1; n_bits = 17; break;
case 0xffb060b0: code = 0x1ebc1; n_bits = 17; break;
case 0xffe010b0: code = 0x1ec01; n_bits = 17; break;
case 0xff40f040: code = 0x1ec09; n_bits = 17; break;
case 0xff90b0c0: code = 0x1ec21; n_bits = 17; break;
case 0xffc030c0: code = 0x1ec41; n_bits = 17; break;
case 0xff708020: code = 0x1ec81; n_bits = 17; break;
case 0xfff090e0: code = 0x1ec89; n_bits = 17; break;
case 0xff90a0d0: code = 0x1eca1; n_bits = 17; break;
case 0xffe0d0e0: code = 0x1ecc1; n_bits = 17; break;
case 0xffb07010: code = 0x1ed01; n_bits = 17; break;
case 0xffd0c0f0: code = 0x1ed09; n_bits = 17; break;
case 0xffe04070: code = 0x1ed21; n_bits = 17; break;
case 0xff30e0a0: code = 0x1ed41; n_bits = 17; break;
case 0xff30e0d0: code = 0x1ed81; n_bits = 17; break;
case 0xff20d0c0: code = 0x1eda1; n_bits = 17; break;
case 0xffc01060: code = 0x1edc1; n_bits = 17; break;
case 0xff20c0b0: code = 0x1ee01; n_bits = 17; break;
case 0xff601070: code = 0x1ee09; n_bits = 17; break;
case 0xffc040e0: code = 0x1ee21; n_bits = 17; break;
case 0xffd03000: code = 0x1ee41; n_bits = 17; break;
case 0xff60b090: code = 0x1ee81; n_bits = 17; break;
case 0xffb03090: code = 0x1eea1; n_bits = 17; break;
case 0xff8010e0: code = 0x1eec1; n_bits = 17; break;
case 0xff109000: code = 0x1ef01; n_bits = 17; break;
case 0xffe03020: code = 0x1ef09; n_bits = 17; break;
case 0xff403090: code = 0x1ef21; n_bits = 17; break;
case 0xff406050: code = 0x1ef41; n_bits = 17; break;
case 0xff90e0b0: code = 0x1ef81; n_bits = 17; break;
case 0xfff04010: code = 0x1efa1; n_bits = 17; break;
case 0xff40d070: code = 0x1efc1; n_bits = 17; break;
case 0xff10d0a0: code = 0x1f001; n_bits = 17; break;
case 0xfff060c0: code = 0x1f009; n_bits = 17; break;
case 0xffe06030: code = 0x1f021; n_bits = 17; break;
case 0xff1080e0: code = 0x1f041; n_bits = 17; break;
case 0xff90a010: code = 0x1f081; n_bits = 17; break;
case 0xff60b000: code = 0x1f089; n_bits = 17; break;
case 0xff7040c0: code = 0x1f0a1; n_bits = 17; break;
case 0xff801000: code = 0x1f0c1; n_bits = 17; break;
case 0xffa010d0: code = 0x1f101; n_bits = 17; break;
case 0xff0020f0: code = 0x1f109; n_bits = 17; break;
case 0xffa050a0: code = 0x1f121; n_bits = 17; break;
case 0xffd0b040: code = 0x1f141; n_bits = 17; break;
case 0xff0030d0: code = 0x1f181; n_bits = 17; break;
case 0xff80d0a0: code = 0x1f1a1; n_bits = 17; break;
case 0xff008070: code = 0x1f1c1; n_bits = 17; break;
case 0xffc09000: code = 0x1f201; n_bits = 17; break;
case 0xffe0e0e0: code = 0x1f209; n_bits = 17; break;
case 0xffc03040: code = 0x1f221; n_bits = 17; break;
case 0xfff04050: code = 0x1f241; n_bits = 17; break;
case 0xff4080e0: code = 0x1f281; n_bits = 17; break;
case 0xff50c040: code = 0x1f2a1; n_bits = 17; break;
case 0xffe02040: code = 0x1f2c1; n_bits = 17; break;
case 0xff208010: code = 0x1f301; n_bits = 17; break;
case 0xffb0c070: code = 0x1f309; n_bits = 17; break;
case 0xff002040: code = 0x1f321; n_bits = 17; break;
case 0xff10f040: code = 0x1f341; n_bits = 17; break;
case 0xff909050: code = 0x1f381; n_bits = 17; break;
case 0xff50e0b0: code = 0x1f3a1; n_bits = 17; break;
case 0xffb08010: code = 0x1f3c1; n_bits = 17; break;
case 0xff008050: code = 0x1f401; n_bits = 17; break;
case 0xff2010c0: code = 0x1f409; n_bits = 17; break;
case 0xff20b0f0: code = 0x1f421; n_bits = 17; break;
case 0xff3020d0: code = 0x1f441; n_bits = 17; break;
case 0xff108050: code = 0x1f481; n_bits = 17; break;
case 0xff6040c0: code = 0x1f489; n_bits = 17; break;
case 0xff8090b0: code = 0x1f4a1; n_bits = 17; break;
case 0xff6090b0: code = 0x1f4c1; n_bits = 17; break;
case 0xff30d060: code = 0x1f501; n_bits = 17; break;
case 0xffb05000: code = 0x1f509; n_bits = 17; break;
case 0xff502030: code = 0x1f521; n_bits = 17; break;
case 0xff8070c0: code = 0x1f541; n_bits = 17; break;
case 0xff408030: code = 0x1f581; n_bits = 17; break;
case 0xff507040: code = 0x1f5a1; n_bits = 17; break;
case 0xff202010: code = 0x1f5c1; n_bits = 17; break;
case 0xfff090b0: code = 0x1f601; n_bits = 17; break;
case 0xff305000: code = 0x1f609; n_bits = 17; break;
case 0xffd05010: code = 0x1f621; n_bits = 17; break;
case 0xff10b030: code = 0x1f641; n_bits = 17; break;
case 0xffa09030: code = 0x1f681; n_bits = 17; break;
case 0xff60c0a0: code = 0x1f6a1; n_bits = 17; break;
case 0xff7050c0: code = 0x1f6c1; n_bits = 17; break;
case 0xfff0a060: code = 0x1f701; n_bits = 17; break;
case 0xff9090e0: code = 0x1f709; n_bits = 17; break;
case 0xff9080a0: code = 0x1f721; n_bits = 17; break;
case 0xff10c0d0: code = 0x1f741; n_bits = 17; break;
case 0xffd03020: code = 0x1f781; n_bits = 17; break;
case 0xff80f090: code = 0x1f7a1; n_bits = 17; break;
case 0xff10a0d0: code = 0x1f7c1; n_bits = 17; break;
case 0xff50c0c0: code = 0x1f801; n_bits = 17; break;
case 0xffc09080: code = 0x1f809; n_bits = 17; break;
case 0xff5020d0: code = 0x1f821; n_bits = 17; break;
case 0xff609030: code = 0x1f841; n_bits = 17; break;
case 0xffd08040: code = 0x1f881; n_bits = 17; break;
case 0xffa08010: code = 0x1f889; n_bits = 17; break;
case 0xffc02060: code = 0x1f8a1; n_bits = 17; break;
case 0xff401030: code = 0x1f8c1; n_bits = 17; break;
case 0xff70e040: code = 0x1f901; n_bits = 17; break;
case 0xff004020: code = 0x1f909; n_bits = 17; break;
case 0xff90e010: code = 0x1f921; n_bits = 17; break;
case 0xffb09050: code = 0x1f941; n_bits = 17; break;
case 0xff409090: code = 0x1f981; n_bits = 17; break;
case 0xff1040d0: code = 0x1f9a1; n_bits = 17; break;
case 0xff504020: code = 0x1f9c1; n_bits = 17; break;
case 0xff60d080: code = 0x1fa01; n_bits = 17; break;
case 0xff0060f0: code = 0x1fa09; n_bits = 17; break;
case 0xff1050e0: code = 0x1fa21; n_bits = 17; break;
case 0xff00c0a0: code = 0x1fa41; n_bits = 17; break;
case 0xfff0e070: code = 0x1fa81; n_bits = 17; break;
case 0xff00b020: code = 0x1faa1; n_bits = 17; break;
case 0xff40f0d0: code = 0x1fac1; n_bits = 17; break;
case 0xff9050e0: code = 0x1fb01; n_bits = 17; break;
case 0xffc06000: code = 0x1fb09; n_bits = 17; break;
case 0xff1080a0: code = 0x1fb21; n_bits = 17; break;
case 0xff6020c0: code = 0x1fb41; n_bits = 17; break;
case 0xff6020f0: code = 0x1fb81; n_bits = 17; break;
case 0xffc010b0: code = 0x1fba1; n_bits = 17; break;
case 0xff506050: code = 0x1fbc1; n_bits = 17; break;
case 0xff704010: code = 0x1fc01; n_bits = 17; break;
case 0xff308060: code = 0x1fc09; n_bits = 17; break;
case 0xff1060c0: code = 0x1fc21; n_bits = 17; break;
case 0xff607070: code = 0x1fc41; n_bits = 17; break;
case 0xfff04090: code = 0x1fc81; n_bits = 17; break;
case 0xff50b0e0: code = 0x1fc89; n_bits = 17; break;
case 0xff2030c0: code = 0x1fca1; n_bits = 17; break;
case 0xffa0f070: code = 0x1fcc1; n_bits = 17; break;
case 0xff103050: code = 0x1fd01; n_bits = 17; break;
case 0xff5070f0: code = 0x1fd09; n_bits = 17; break;
case 0xff101050: code = 0x1fd21; n_bits = 17; break;
case 0xff302030: code = 0x1fd41; n_bits = 17; break;
case 0xffd01090: code = 0x1fd81; n_bits = 17; break;
case 0xff9070c0: code = 0x1fda1; n_bits = 17; break;
case 0xff901010: code = 0x1fdc1; n_bits = 17; break;
case 0xffb070a0: code = 0x1fe01; n_bits = 17; break;
case 0xffc0c0c0: code = 0x1fe09; n_bits = 17; break;
case 0xffc090e0: code = 0x1fe21; n_bits = 17; break;
case 0xff80b0c0: code = 0x1fe41; n_bits = 17; break;
case 0xffd010a0: code = 0x1fe81; n_bits = 17; break;
case 0xff900090: code = 0x1fea1; n_bits = 17; break;
case 0xff10b0c0: code = 0x1fec1; n_bits = 17; break;
case 0xfff03020: code = 0x1ff01; n_bits = 17; break;
case 0xff405070: code = 0x1ff09; n_bits = 17; break;
case 0xffb000b0: code = 0x1ff21; n_bits = 17; break;
case 0xfff02090: code = 0x1ff41; n_bits = 17; break;
case 0xff1090b0: code = 0x1ff81; n_bits = 17; break;
case 0xff10d020: code = 0x1ffa1; n_bits = 17; break;
case 0xff401000: code = 0x1ffc1; n_bits = 17; break;
case 0xff7000d0: code = 0x379; n_bits = 18; break;
case 0xff60f0e0: code = 0x779; n_bits = 18; break;
case 0xff107080: code = 0xb79; n_bits = 18; break;
case 0xff3080f0: code = 0xd79; n_bits = 18; break;
case 0xffc04060: code = 0xf79; n_bits = 18; break;
case 0xffa060d0: code = 0x1379; n_bits = 18; break;
case 0xff10e000: code = 0x1579; n_bits = 18; break;
case 0xff508080: code = 0x1779; n_bits = 18; break;
case 0xff50f0b0: code = 0x1b79; n_bits = 18; break;
case 0xff706090: code = 0x1d79; n_bits = 18; break;
case 0xff2020f0: code = 0x1f79; n_bits = 18; break;
case 0xff80a0f0: code = 0x2379; n_bits = 18; break;
case 0xffe03080: code = 0x2779; n_bits = 18; break;
case 0xffc0b0b0: code = 0x2b79; n_bits = 18; break;
case 0xffb0c050: code = 0x2d79; n_bits = 18; break;
case 0xff809010: code = 0x2f79; n_bits = 18; break;
case 0xff3090a0: code = 0x3379; n_bits = 18; break;
case 0xff304010: code = 0x3579; n_bits = 18; break;
case 0xff501080: code = 0x3779; n_bits = 18; break;
case 0xff50b0f0: code = 0x3b79; n_bits = 18; break;
case 0xffb0b060: code = 0x3d79; n_bits = 18; break;
case 0xff20f090: code = 0x3f79; n_bits = 18; break;
case 0xff6000e0: code = 0x4379; n_bits = 18; break;
case 0xff301020: code = 0x4779; n_bits = 18; break;
case 0xff7080c0: code = 0x4b79; n_bits = 18; break;
case 0xffa05080: code = 0x4d79; n_bits = 18; break;
case 0xfff07020: code = 0x4f79; n_bits = 18; break;
case 0xfff06090: code = 0x5379; n_bits = 18; break;
case 0xffc08070: code = 0x5579; n_bits = 18; break;
case 0xffc08050: code = 0x5779; n_bits = 18; break;
case 0xffa0b080: code = 0x5b79; n_bits = 18; break;
case 0xffd0a020: code = 0x5d79; n_bits = 18; break;
case 0xff405040: code = 0x5f79; n_bits = 18; break;
case 0xffa0f060: code = 0x6379; n_bits = 18; break;
case 0xff401050: code = 0x6779; n_bits = 18; break;
case 0xff705060: code = 0x6b79; n_bits = 18; break;
case 0xff2020d0: code = 0x6d79; n_bits = 18; break;
case 0xff4080a0: code = 0x6f79; n_bits = 18; break;
case 0xff50e010: code = 0x7379; n_bits = 18; break;
case 0xffa080e0: code = 0x7579; n_bits = 18; break;
case 0xff0050d0: code = 0x7779; n_bits = 18; break;
case 0xfff070b0: code = 0x7b79; n_bits = 18; break;
case 0xffd00080: code = 0x7d79; n_bits = 18; break;
case 0xff202000: code = 0x7f79; n_bits = 18; break;
case 0xff100030: code = 0x8379; n_bits = 18; break;
case 0xff00c030: code = 0x8779; n_bits = 18; break;
case 0xff10e0e0: code = 0x8b79; n_bits = 18; break;
case 0xff40d050: code = 0x8d79; n_bits = 18; break;
case 0xff4020f0: code = 0x8f79; n_bits = 18; break;
case 0xff6020e0: code = 0x9379; n_bits = 18; break;
case 0xffd080d0: code = 0x9579; n_bits = 18; break;
case 0xffe07010: code = 0x9779; n_bits = 18; break;
case 0xffd0f020: code = 0x9b79; n_bits = 18; break;
case 0xffe040a0: code = 0x9d79; n_bits = 18; break;
case 0xffe020b0: code = 0x9f79; n_bits = 18; break;
case 0xffc08030: code = 0xa379; n_bits = 18; break;
case 0xff7030a0: code = 0xa779; n_bits = 18; break;
case 0xfff040f0: code = 0xab79; n_bits = 18; break;
case 0xffe05090: code = 0xad79; n_bits = 18; break;
case 0xff903070: code = 0xaf79; n_bits = 18; break;
case 0xff90a0e0: code = 0xb379; n_bits = 18; break;
case 0xff30d020: code = 0xb579; n_bits = 18; break;
case 0xffb020c0: code = 0xb779; n_bits = 18; break;
case 0xff304080: code = 0xbb79; n_bits = 18; break;
case 0xff20c000: code = 0xbd79; n_bits = 18; break;
case 0xffe0d0b0: code = 0xbf79; n_bits = 18; break;
case 0xff701070: code = 0xc379; n_bits = 18; break;
case 0xff40d0c0: code = 0xc779; n_bits = 18; break;
case 0xfff0e0d0: code = 0xcb79; n_bits = 18; break;
case 0xfff03030: code = 0xcd79; n_bits = 18; break;
case 0xffb0c030: code = 0xcf79; n_bits = 18; break;
case 0xffd070d0: code = 0xd379; n_bits = 18; break;
case 0xffa090b0: code = 0xd579; n_bits = 18; break;
case 0xffd040c0: code = 0xd779; n_bits = 18; break;
case 0xff70b010: code = 0xdb79; n_bits = 18; break;
case 0xff302050: code = 0xdd79; n_bits = 18; break;
case 0xffd00040: code = 0xdf79; n_bits = 18; break;
case 0xffc04040: code = 0xe379; n_bits = 18; break;
case 0xff5040e0: code = 0xe779; n_bits = 18; break;
case 0xff403010: code = 0xeb79; n_bits = 18; break;
case 0xffa02020: code = 0xed79; n_bits = 18; break;
case 0xff106050: code = 0xef79; n_bits = 18; break;
case 0xff30f050: code = 0xf379; n_bits = 18; break;
case 0xffe0c010: code = 0xf579; n_bits = 18; break;
case 0xffb0d000: code = 0xf779; n_bits = 18; break;
case 0xffd04070: code = 0xfb79; n_bits = 18; break;
case 0xff1090f0: code = 0xfd79; n_bits = 18; break;
case 0xfff060b0: code = 0xff79; n_bits = 18; break;
case 0xffa06050: code = 0x10379; n_bits = 18; break;
case 0xff9060f0: code = 0x10779; n_bits = 18; break;
case 0xff00d000: code = 0x10b79; n_bits = 18; break;
case 0xff100050: code = 0x10d79; n_bits = 18; break;
case 0xff60a0c0: code = 0x10f79; n_bits = 18; break;
case 0xff8060c0: code = 0x11379; n_bits = 18; break;
case 0xfff0b090: code = 0x11579; n_bits = 18; break;
case 0xfff0b070: code = 0x11779; n_bits = 18; break;
case 0xff90b0b0: code = 0x11b79; n_bits = 18; break;
case 0xff00c070: code = 0x11d79; n_bits = 18; break;
case 0xffe0e080: code = 0x11f79; n_bits = 18; break;
case 0xff002090: code = 0x12379; n_bits = 18; break;
case 0xff600010: code = 0x12779; n_bits = 18; break;
case 0xff60b040: code = 0x12b79; n_bits = 18; break;
case 0xff70c040: code = 0x12d79; n_bits = 18; break;
case 0xff105000: code = 0x12f79; n_bits = 18; break;
case 0xff1010d0: code = 0x13379; n_bits = 18; break;
case 0xff4070a0: code = 0x13579; n_bits = 18; break;
case 0xff5070b0: code = 0x13779; n_bits = 18; break;
case 0xffe0f0e0: code = 0x13b79; n_bits = 18; break;
case 0xff103090: code = 0x13d79; n_bits = 18; break;
case 0xff704030: code = 0x13f79; n_bits = 18; break;
case 0xff109040: code = 0x14379; n_bits = 18; break;
case 0xff30a030: code = 0x14779; n_bits = 18; break;
case 0xff60e040: code = 0x14b79; n_bits = 18; break;
case 0xff900060: code = 0x14d79; n_bits = 18; break;
case 0xff106080: code = 0x14f79; n_bits = 18; break;
case 0xff300090: code = 0x15379; n_bits = 18; break;
case 0xffb04010: code = 0x15579; n_bits = 18; break;
case 0xff0060a0: code = 0x15779; n_bits = 18; break;
case 0xff702000: code = 0x15b79; n_bits = 18; break;
case 0xffd0a040: code = 0x15d79; n_bits = 18; break;
case 0xff40e050: code = 0x15f79; n_bits = 18; break;
case 0xffe03000: code = 0x16379; n_bits = 18; break;
case 0xffd000b0: code = 0x16779; n_bits = 18; break;
case 0xff70e070: code = 0x16b79; n_bits = 18; break;
case 0xffe020f0: code = 0x16d79; n_bits = 18; break;
case 0xff30e020: code = 0x16f79; n_bits = 18; break;
case 0xff306040: code = 0x17379; n_bits = 18; break;
case 0xff0050f0: code = 0x17579; n_bits = 18; break;
case 0xff90d0f0: code = 0x17779; n_bits = 18; break;
case 0xffe080d0: code = 0x17b79; n_bits = 18; break;
case 0xff101020: code = 0x17d79; n_bits = 18; break;
case 0xffb0a090: code = 0x17f79; n_bits = 18; break;
case 0xffa030c0: code = 0x18379; n_bits = 18; break;
case 0xff60c080: code = 0x18779; n_bits = 18; break;
case 0xffc020a0: code = 0x18b79; n_bits = 18; break;
case 0xffb03040: code = 0x18d79; n_bits = 18; break;
case 0xffe0f050: code = 0x18f79; n_bits = 18; break;
case 0xff106000: code = 0x19379; n_bits = 18; break;
case 0xff00c010: code = 0x19579; n_bits = 18; break;
case 0xff205060: code = 0x19779; n_bits = 18; break;
case 0xff4030e0: code = 0x19b79; n_bits = 18; break;
case 0xffe0e0a0: code = 0x19d79; n_bits = 18; break;
case 0xffc0f0c0: code = 0x19f79; n_bits = 18; break;
case 0xffd0b0c0: code = 0x1a379; n_bits = 18; break;
case 0xff307070: code = 0x1a579; n_bits = 18; break;
case 0xff70c0b0: code = 0x1a779; n_bits = 18; break;
case 0xff90d030: code = 0x1ab79; n_bits = 18; break;
case 0xffd01030: code = 0x1ad79; n_bits = 18; break;
case 0xff903090: code = 0x1af79; n_bits = 18; break;
case 0xff00a0d0: code = 0x1b379; n_bits = 18; break;
case 0xff00e030: code = 0x1b579; n_bits = 18; break;
case 0xffa08040: code = 0x1b779; n_bits = 18; break;
case 0xff20a000: code = 0x1bb79; n_bits = 18; break;
case 0xffa040c0: code = 0x1bd79; n_bits = 18; break;
case 0xfff0d080: code = 0x1bf79; n_bits = 18; break;
case 0xffe0e000: code = 0x1c379; n_bits = 18; break;
case 0xfff0c040: code = 0x1c779; n_bits = 18; break;
case 0xff2080c0: code = 0x1cb79; n_bits = 18; break;
case 0xffc020e0: code = 0x1cd79; n_bits = 18; break;
case 0xff00f030: code = 0x1cf79; n_bits = 18; break;
case 0xff200080: code = 0x1d379; n_bits = 18; break;
case 0xff800020: code = 0x1d579; n_bits = 18; break;
case 0xff80c0e0: code = 0x1d779; n_bits = 18; break;
case 0xff00e0a0: code = 0x1db79; n_bits = 18; break;
case 0xffc050e0: code = 0x1dd79; n_bits = 18; break;
case 0xff206080: code = 0x1df79; n_bits = 18; break;
case 0xffc050c0: code = 0x1e379; n_bits = 18; break;
case 0xffb00030: code = 0x1e779; n_bits = 18; break;
case 0xff5060a0: code = 0x1eb79; n_bits = 18; break;
case 0xffb0e0c0: code = 0x1ed79; n_bits = 18; break;
case 0xffa090e0: code = 0x1ef79; n_bits = 18; break;
case 0xff00c0f0: code = 0x1f379; n_bits = 18; break;
case 0xfff0a0c0: code = 0x1f579; n_bits = 18; break;
case 0xff6010b0: code = 0x1f779; n_bits = 18; break;
case 0xff1020c0: code = 0x1fb79; n_bits = 18; break;
case 0xffc05010: code = 0x1fd79; n_bits = 18; break;
case 0xff50e080: code = 0x1ff79; n_bits = 18; break;
case 0xffa0d0a0: code = 0x20379; n_bits = 18; break;
case 0xffe03070: code = 0x20779; n_bits = 18; break;
case 0xffb00040: code = 0x20b79; n_bits = 18; break;
case 0xffe06060: code = 0x20d79; n_bits = 18; break;
case 0xffc07080: code = 0x20f79; n_bits = 18; break;
case 0xff80a0b0: code = 0x21379; n_bits = 18; break;
case 0xff00f0d0: code = 0x21579; n_bits = 18; break;
case 0xff202090: code = 0x21779; n_bits = 18; break;
case 0xffb0a0a0: code = 0x21b79; n_bits = 18; break;
case 0xff004030: code = 0x21d79; n_bits = 18; break;
case 0xff604000: code = 0x21f79; n_bits = 18; break;
case 0xffd060a0: code = 0x22379; n_bits = 18; break;
case 0xffd0d080: code = 0x22779; n_bits = 18; break;
case 0xff104060: code = 0x22b79; n_bits = 18; break;
case 0xff005000: code = 0x22d79; n_bits = 18; break;
case 0xff70a0f0: code = 0x22f79; n_bits = 18; break;
case 0xff20f020: code = 0x23379; n_bits = 18; break;
case 0xff20e090: code = 0x23579; n_bits = 18; break;
case 0xff407000: code = 0x23779; n_bits = 18; break;
case 0xffd0c050: code = 0x23b79; n_bits = 18; break;
case 0xff2040b0: code = 0x23d79; n_bits = 18; break;
case 0xff00d020: code = 0x23f79; n_bits = 18; break;
case 0xfff080e0: code = 0x24379; n_bits = 18; break;
case 0xffd080f0: code = 0x24779; n_bits = 18; break;
case 0xff10e040: code = 0x24b79; n_bits = 18; break;
case 0xffc0f0d0: code = 0x24d79; n_bits = 18; break;
case 0xff9000a0: code = 0x24f79; n_bits = 18; break;
case 0xff602030: code = 0x25379; n_bits = 18; break;
case 0xff7000e0: code = 0x25579; n_bits = 18; break;
case 0xffb0d0f0: code = 0x25779; n_bits = 18; break;
case 0xffa0c000: code = 0x25b79; n_bits = 18; break;
case 0xff001000: code = 0x25d79; n_bits = 18; break;
case 0xffa07000: code = 0x25f79; n_bits = 18; break;
case 0xff3030f0: code = 0x26379; n_bits = 18; break;
case 0xff704000: code = 0x26779; n_bits = 18; break;
case 0xff10d070: code = 0x26b79; n_bits = 18; break;
case 0xff50d080: code = 0x26d79; n_bits = 18; break;
case 0xff7040d0: code = 0x26f79; n_bits = 18; break;
case 0xffc000c0: code = 0x27379; n_bits = 18; break;
case 0xff90e060: code = 0x27579; n_bits = 18; break;
case 0xffb090d0: code = 0x27779; n_bits = 18; break;
case 0xffa0b030: code = 0x27b79; n_bits = 18; break;
case 0xffe0d0d0: code = 0x27d79; n_bits = 18; break;
case 0xff70d040: code = 0x27f79; n_bits = 18; break;
case 0xff30f090: code = 0x28379; n_bits = 18; break;
case 0xff30a090: code = 0x28779; n_bits = 18; break;
case 0xff605030: code = 0x28b79; n_bits = 18; break;
case 0xffb02000: code = 0x28d79; n_bits = 18; break;
case 0xff501010: code = 0x28f79; n_bits = 18; break;
case 0xffc0d050: code = 0x29379; n_bits = 18; break;
case 0xff90f030: code = 0x29579; n_bits = 18; break;
case 0xffd0c0b0: code = 0x29779; n_bits = 18; break;
case 0xff3070e0: code = 0x29b79; n_bits = 18; break;
case 0xfff09000: code = 0x29d79; n_bits = 18; break;
case 0xff70d0f0: code = 0x29f79; n_bits = 18; break;
case 0xffb0d030: code = 0x2a379; n_bits = 18; break;
case 0xfff02060: code = 0x2a779; n_bits = 18; break;
case 0xff104020: code = 0x2ab79; n_bits = 18; break;
case 0xff504070: code = 0x2ad79; n_bits = 18; break;
case 0xff305010: code = 0x2af79; n_bits = 18; break;
case 0xff105030: code = 0x2b379; n_bits = 18; break;
case 0xffd0c0e0: code = 0x2b579; n_bits = 18; break;
case 0xff204090: code = 0x2b779; n_bits = 18; break;
case 0xffb0f090: code = 0x2bb79; n_bits = 18; break;
case 0xff10c0a0: code = 0x2bd79; n_bits = 18; break;
case 0xff306060: code = 0x2bf79; n_bits = 18; break;
case 0xff30d0e0: code = 0x2c379; n_bits = 18; break;
case 0xff102060: code = 0x2c779; n_bits = 18; break;
case 0xffc06070: code = 0x2cb79; n_bits = 18; break;
case 0xff60c010: code = 0x2cd79; n_bits = 18; break;
case 0xfff090d0: code = 0x2cf79; n_bits = 18; break;
case 0xff206010: code = 0x2d379; n_bits = 18; break;
case 0xffe0f070: code = 0x2d579; n_bits = 18; break;
case 0xff70e060: code = 0x2d779; n_bits = 18; break;
case 0xffc0a0e0: code = 0x2db79; n_bits = 18; break;
case 0xffb0b080: code = 0x2dd79; n_bits = 18; break;
case 0xff808040: code = 0x2df79; n_bits = 18; break;
case 0xffb090e0: code = 0x2e379; n_bits = 18; break;
case 0xffb040e0: code = 0x2e779; n_bits = 18; break;
case 0xff103000: code = 0x2eb79; n_bits = 18; break;
case 0xff20b030: code = 0x2ed79; n_bits = 18; break;
case 0xffa05000: code = 0x2ef79; n_bits = 18; break;
case 0xffc0c080: code = 0x2f379; n_bits = 18; break;
case 0xffb0d020: code = 0x2f579; n_bits = 18; break;
case 0xfff0a0a0: code = 0x2f779; n_bits = 18; break;
case 0xff80c070: code = 0x2fb79; n_bits = 18; break;
case 0xff70d0e0: code = 0x2fd79; n_bits = 18; break;
case 0xff200070: code = 0x2ff79; n_bits = 18; break;
case 0xff308000: code = 0x30379; n_bits = 18; break;
case 0xffd010d0: code = 0x30779; n_bits = 18; break;
case 0xff909060: code = 0x30b79; n_bits = 18; break;
case 0xffd02000: code = 0x30d79; n_bits = 18; break;
case 0xffb03020: code = 0x30f79; n_bits = 18; break;
case 0xff20a060: code = 0x31379; n_bits = 18; break;
case 0xff805020: code = 0x31579; n_bits = 18; break;
case 0xff908010: code = 0x31779; n_bits = 18; break;
case 0xffa04050: code = 0x31b79; n_bits = 18; break;
case 0xffd01010: code = 0x31d79; n_bits = 18; break;
case 0xff60d010: code = 0x31f79; n_bits = 18; break;
case 0xffc05090: code = 0x32379; n_bits = 18; break;
case 0xffc09020: code = 0x32779; n_bits = 18; break;
case 0xffb07050: code = 0x32b79; n_bits = 18; break;
case 0xff006070: code = 0x32d79; n_bits = 18; break;
case 0xffa070f0: code = 0x32f79; n_bits = 18; break;
case 0xff807050: code = 0x33379; n_bits = 18; break;
case 0xffb0b0d0: code = 0x33579; n_bits = 18; break;
case 0xff504000: code = 0x33779; n_bits = 18; break;
case 0xffd0e050: code = 0x33b79; n_bits = 18; break;
case 0xff009010: code = 0x33d79; n_bits = 18; break;
case 0xfff08010: code = 0x33f79; n_bits = 18; break;
case 0xffd090f0: code = 0x34379; n_bits = 18; break;
case 0xff800010: code = 0x34779; n_bits = 18; break;
case 0xff5000f0: code = 0x34b79; n_bits = 18; break;
case 0xff308020: code = 0x34d79; n_bits = 18; break;
case 0xff006020: code = 0x34f79; n_bits = 18; break;
case 0xffe02030: code = 0x35379; n_bits = 18; break;
case 0xfff010b0: code = 0x35579; n_bits = 18; break;
case 0xff709050: code = 0x35779; n_bits = 18; break;
case 0xffd05040: code = 0x35b79; n_bits = 18; break;
case 0xff108020: code = 0x35d79; n_bits = 18; break;
case 0xff90c0a0: code = 0x35f79; n_bits = 18; break;
case 0xffa09070: code = 0x36379; n_bits = 18; break;
case 0xffc0e040: code = 0x36779; n_bits = 18; break;
case 0xff4060b0: code = 0x36b79; n_bits = 18; break;
case 0xff402080: code = 0x36d79; n_bits = 18; break;
case 0xffa000d0: code = 0x36f79; n_bits = 18; break;
case 0xffe0b040: code = 0x37379; n_bits = 18; break;
case 0xff500040: code = 0x37579; n_bits = 18; break;
case 0xff809080: code = 0x37779; n_bits = 18; break;
case 0xff002030: code = 0x37b79; n_bits = 18; break;
case 0xffd09070: code = 0x37d79; n_bits = 18; break;
case 0xff003040: code = 0x37f79; n_bits = 18; break;
case 0xffb000d0: code = 0x38379; n_bits = 18; break;
case 0xffb000c0: code = 0x38779; n_bits = 18; break;
case 0xffb01000: code = 0x38b79; n_bits = 18; break;
case 0xfff000e0: code = 0x38d79; n_bits = 18; break;
case 0xff800000: code = 0x38f79; n_bits = 18; break;
case 0xff102000: code = 0x39379; n_bits = 18; break;
case 0xff80e030: code = 0x39579; n_bits = 18; break;
case 0xffa0b0a0: code = 0x39779; n_bits = 18; break;
case 0xff20d060: code = 0x39b79; n_bits = 18; break;
case 0xff5080a0: code = 0x39d79; n_bits = 18; break;
case 0xff0070f0: code = 0x39f79; n_bits = 18; break;
case 0xfff07060: code = 0x3a379; n_bits = 18; break;
case 0xff603000: code = 0x3a579; n_bits = 18; break;
case 0xff906000: code = 0x3a779; n_bits = 18; break;
case 0xffc010d0: code = 0x3ab79; n_bits = 18; break;
case 0xffc060d0: code = 0x3ad79; n_bits = 18; break;
case 0xff40b090: code = 0x3af79; n_bits = 18; break;
case 0xff00a0f0: code = 0x3b379; n_bits = 18; break;
case 0xff905050: code = 0x3b579; n_bits = 18; break;
case 0xffd080c0: code = 0x3b779; n_bits = 18; break;
case 0xfff0b020: code = 0x3bb79; n_bits = 18; break;
case 0xff601040: code = 0x3bd79; n_bits = 18; break;
case 0xff0070c0: code = 0x3bf79; n_bits = 18; break;
case 0xff201050: code = 0x3c379; n_bits = 18; break;
case 0xff90b070: code = 0x3c779; n_bits = 18; break;
case 0xffd06010: code = 0x3cb79; n_bits = 18; break;
case 0xff00c0e0: code = 0x3cd79; n_bits = 18; break;
case 0xff7010e0: code = 0x3cf79; n_bits = 18; break;
case 0xffc03070: code = 0x3d379; n_bits = 18; break;
case 0xffe05020: code = 0x3d579; n_bits = 18; break;
case 0xff20c0f0: code = 0x3d779; n_bits = 18; break;
case 0xffc040f0: code = 0x3db79; n_bits = 18; break;
case 0xffc050f0: code = 0x3dd79; n_bits = 18; break;
case 0xffb01080: code = 0x3df79; n_bits = 18; break;
case 0xff8010a0: code = 0x3e379; n_bits = 18; break;
case 0xff40a060: code = 0x3e779; n_bits = 18; break;
case 0xffe0d030: code = 0x3eb79; n_bits = 18; break;
case 0xff803060: code = 0x3ed79; n_bits = 18; break;
case 0xff90f060: code = 0x3ef79; n_bits = 18; break;
case 0xffb08020: code = 0x3f379; n_bits = 18; break;
case 0xfff0f0a0: code = 0x3f579; n_bits = 18; break;
case 0xffe06040: code = 0x3f779; n_bits = 18; break;
case 0xffc00010: code = 0x3fb79; n_bits = 18; break;
case 0xffb0a0b0: code = 0x3fd79; n_bits = 18; break;
case 0xff602010: code = 0x3ff79; n_bits = 18; break;
